{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "retval",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "5": "contracts/mocks/ERC721ReceiverMock.sol",
    "9": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/mocks/ERC721ReceiverMock.sol",
    "exportedSymbols": {
      "ERC721ReceiverMock": [
        1520
      ],
      "IERC721Receiver": [
        2002
      ]
    },
    "id": 1521,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1462,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "57:23:5"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 1463,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1521,
        "sourceUnit": 2003,
        "src": "82:85:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1464,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2002,
              "src": "200:15:5"
            },
            "id": 1465,
            "nodeType": "InheritanceSpecifier",
            "src": "200:15:5"
          }
        ],
        "canonicalName": "ERC721ReceiverMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1520,
        "linearizedBaseContracts": [
          1520,
          2002
        ],
        "name": "ERC721ReceiverMock",
        "nameLocation": "178:18:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ERC721ReceiverMock.Error",
            "id": 1470,
            "members": [
              {
                "id": 1466,
                "name": "None",
                "nameLocation": "243:4:5",
                "nodeType": "EnumValue",
                "src": "243:4:5"
              },
              {
                "id": 1467,
                "name": "RevertWithMessage",
                "nameLocation": "257:17:5",
                "nodeType": "EnumValue",
                "src": "257:17:5"
              },
              {
                "id": 1468,
                "name": "RevertWithoutMessage",
                "nameLocation": "284:20:5",
                "nodeType": "EnumValue",
                "src": "284:20:5"
              },
              {
                "id": 1469,
                "name": "Panic",
                "nameLocation": "314:5:5",
                "nodeType": "EnumValue",
                "src": "314:5:5"
              }
            ],
            "name": "Error",
            "nameLocation": "227:5:5",
            "nodeType": "EnumDefinition",
            "src": "222:103:5"
          },
          {
            "constant": false,
            "id": 1472,
            "mutability": "immutable",
            "name": "_retval",
            "nameLocation": "356:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1520,
            "src": "331:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 1471,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "331:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 1484,
            "name": "Received",
            "nameLocation": "376:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "393:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "385:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "411:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "403:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1478,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "425:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "417:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1480,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "440:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "434:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gas",
                  "nameLocation": "454:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1484,
                  "src": "446:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1481,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "384:74:5"
            },
            "src": "370:89:5"
          },
          {
            "body": {
              "id": 1493,
              "nodeType": "Block",
              "src": "492:33:5",
              "statements": [
                {
                  "expression": {
                    "id": 1491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1489,
                      "name": "_retval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1472,
                      "src": "502:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1490,
                      "name": "retval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1486,
                      "src": "512:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "502:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 1492,
                  "nodeType": "ExpressionStatement",
                  "src": "502:16:5"
                }
              ]
            },
            "id": 1494,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1486,
                  "mutability": "mutable",
                  "name": "retval",
                  "nameLocation": "484:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1494,
                  "src": "477:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1485,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "476:15:5"
            },
            "returnParameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "492:0:5"
            },
            "scope": 1520,
            "src": "465:60:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2001
            ],
            "body": {
              "id": 1518,
              "nodeType": "Block",
              "src": "696:92:5",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1509,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1496,
                        "src": "720:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1510,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1498,
                        "src": "730:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1511,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "736:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1512,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1502,
                        "src": "745:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "3230303030",
                        "id": 1513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "751:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        },
                        "value": "20000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_20000_by_1",
                          "typeString": "int_const 20000"
                        }
                      ],
                      "id": 1508,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1484,
                      "src": "711:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,uint256)"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1515,
                  "nodeType": "EmitStatement",
                  "src": "706:51:5"
                },
                {
                  "expression": {
                    "id": 1516,
                    "name": "_retval",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1472,
                    "src": "774:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1507,
                  "id": 1517,
                  "nodeType": "Return",
                  "src": "767:14:5"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 1519,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "540:16:5",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1504,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "670:8:5"
            },
            "parameters": {
              "id": 1503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1496,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "574:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "566:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "566:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1498,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "600:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "592:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1500,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "622:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "614:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1502,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "652:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "639:17:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1501,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "639:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:106:5"
            },
            "returnParameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1519,
                  "src": "688:6:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1505,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "687:8:5"
            },
            "scope": 1520,
            "src": "531:257:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1521,
        "src": "169:621:5",
        "usedErrors": []
      }
    ],
    "src": "57:734:5"
  },
  "bytecode": "60a060405234801561001057600080fd5b5060405161031d38038061031d83398101604081905261002f91610041565b6001600160e01b031916608052610072565b60006020828403121561005357600080fd5b81516001600160e01b03198116811461006b57600080fd5b9392505050565b60805161029161008c600039600060a601526102916000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e3660046100ff565b610060565b6040516001600160e01b0319909116815260200160405180910390f35b60007f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b03885858585614e2060405161009b9594939291906101db565b60405180910390a1507f0000000000000000000000000000000000000000000000000000000000000000949350505050565b80356001600160a01b03811681146100e457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561011557600080fd5b61011e856100cd565b935061012c602086016100cd565b925060408501359150606085013567ffffffffffffffff8082111561015057600080fd5b818701915087601f83011261016457600080fd5b813581811115610176576101766100e9565b604051601f8201601f19908116603f0116810190838211818310171561019e5761019e6100e9565b816040528281528a60208487010111156101b757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060018060a01b03808816835260208188168185015286604085015260a06060850152855191508160a085015260005b828110156102285786810182015185820160c00152810161020c565b8281111561023a57600060c084870101525b5050608083019390935250601f91909101601f19160160c00194935050505056fea2646970667358221220908b5d270e9ebf7c0bd072232789f0b3e6795c282e92f115c1fae8660227349264736f6c634300080b0033",
  "bytecodeSha1": "1a2d4ef8bc83532324ce1e896d26ba872a18d280",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC721ReceiverMock",
  "coverageMap": {
    "branches": {
      "5": {},
      "9": {}
    },
    "statements": {
      "5": {
        "ERC721ReceiverMock.onERC721Received": {
          "0": [
            706,
            757
          ],
          "1": [
            767,
            781
          ]
        }
      },
      "9": {}
    }
  },
  "dependencies": [
    "IERC721Receiver"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063150b7a0214610030575b600080fd5b61004361003e3660046100ff565b610060565b6040516001600160e01b0319909116815260200160405180910390f35b60007f28fa6e16458f9c24aa59ddd4085264573006dbe30304837873c7deafc702b03885858585614e2060405161009b9594939291906101db565b60405180910390a1507f0000000000000000000000000000000000000000000000000000000000000000949350505050565b80356001600160a01b03811681146100e457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561011557600080fd5b61011e856100cd565b935061012c602086016100cd565b925060408501359150606085013567ffffffffffffffff8082111561015057600080fd5b818701915087601f83011261016457600080fd5b813581811115610176576101766100e9565b604051601f8201601f19908116603f0116810190838211818310171561019e5761019e6100e9565b816040528281528a60208487010111156101b757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600060018060a01b03808816835260208188168185015286604085015260a06060850152855191508160a085015260005b828110156102285786810182015185820160c00152810161020c565b8281111561023a57600060c084870101525b5050608083019390935250601f91909101601f19160160c00194935050505056fea2646970667358221220908b5d270e9ebf7c0bd072232789f0b3e6795c282e92f115c1fae8660227349264736f6c634300080b0033",
  "deployedSourceMap": "169:621:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:257;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1629:33:17;;;1611:52;;1599:2;1584:18;531:257:5;;;;;;;;688:6;711:46;720:8;730:4;736:7;745:4;751:5;711:46;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;774:7:5;531:257;;;;;;:::o;14:173:17:-;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:127::-;253:10;248:3;244:20;241:1;234:31;284:4;281:1;274:15;308:4;305:1;298:15;324:1138;419:6;427;435;443;496:3;484:9;475:7;471:23;467:33;464:53;;;513:1;510;503:12;464:53;536:29;555:9;536:29;:::i;:::-;526:39;;584:38;618:2;607:9;603:18;584:38;:::i;:::-;574:48;;669:2;658:9;654:18;641:32;631:42;;724:2;713:9;709:18;696:32;747:18;788:2;780:6;777:14;774:34;;;804:1;801;794:12;774:34;842:6;831:9;827:22;817:32;;887:7;880:4;876:2;872:13;868:27;858:55;;909:1;906;899:12;858:55;945:2;932:16;967:2;963;960:10;957:36;;;973:18;;:::i;:::-;1048:2;1042:9;1016:2;1102:13;;-1:-1:-1;;1098:22:17;;;1122:2;1094:31;1090:40;1078:53;;;1146:18;;;1166:22;;;1143:46;1140:72;;;1192:18;;:::i;:::-;1232:10;1228:2;1221:22;1267:2;1259:6;1252:18;1307:7;1302:2;1297;1293;1289:11;1285:20;1282:33;1279:53;;;1328:1;1325;1318:12;1279:53;1384:2;1379;1375;1371:11;1366:2;1358:6;1354:15;1341:46;1429:1;1424:2;1419;1411:6;1407:15;1403:24;1396:35;1450:6;1440:16;;;;;;;324:1138;;;;;;;:::o;1674:953::-;1908:4;1954:1;1950;1945:3;1941:11;1937:19;1995:2;1987:6;1983:15;1972:9;1965:34;2018:2;2068;2060:6;2056:15;2051:2;2040:9;2036:18;2029:43;2108:6;2103:2;2092:9;2088:18;2081:34;2151:3;2146:2;2135:9;2131:18;2124:31;2184:6;2178:13;2164:27;;2228:6;2222:3;2211:9;2207:19;2200:35;2253:1;2263:141;2277:6;2274:1;2271:13;2263:141;;;2373:14;;;2369:23;;2363:30;2338:17;;;2357:3;2334:27;2327:67;2292:10;;2263:141;;;2422:6;2419:1;2416:13;2413:92;;;2493:1;2487:3;2478:6;2467:9;2463:22;2459:32;2452:43;2413:92;-1:-1:-1;;2608:3:17;2593:19;;2586:35;;;;-1:-1:-1;2566:2:17;2545:15;;;;-1:-1:-1;;2541:29:17;2526:45;2573:3;2522:55;;1674:953;-1:-1:-1;;;;1674:953:17:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "offset": [
    169,
    790
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xFF JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x28FA6E16458F9C24AA59DDD4085264573006DBE30304837873C7DEAFC702B038 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4E20 PUSH1 0x40 MLOAD PUSH2 0x9B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH32 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E DUP6 PUSH2 0xCD JUMP JUMPDEST SWAP4 POP PUSH2 0x12C PUSH1 0x20 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x176 JUMPI PUSH2 0x176 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x19E JUMPI PUSH2 0x19E PUSH2 0xE9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP4 MSTORE PUSH1 0x20 DUP2 DUP9 AND DUP2 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP6 ADD MSTORE DUP6 MLOAD SWAP2 POP DUP2 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x228 JUMPI DUP7 DUP2 ADD DUP3 ADD MLOAD DUP6 DUP3 ADD PUSH1 0xC0 ADD MSTORE DUP2 ADD PUSH2 0x20C JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23A JUMPI PUSH1 0x0 PUSH1 0xC0 DUP5 DUP8 ADD ADD MSTORE JUMPDEST POP POP PUSH1 0x80 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE POP PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD PUSH1 0xC0 ADD SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 DUP12 0x5D 0x27 0xE SWAP15 0xBF PUSH29 0xBD072232789F0B3E6795C282E92F115C1FAE8660227349264736F6C63 NUMBER STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x150B7A02"
    },
    "38": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "EQ",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "DUP1",
      "path": "5"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        169,
        790
      ],
      "op": "REVERT",
      "path": "5"
    },
    "48": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "49": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43"
    },
    "52": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E"
    },
    "55": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "56": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "58": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFF"
    },
    "61": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "jump": "i",
      "offset": [
        531,
        788
      ],
      "op": "JUMP",
      "path": "5"
    },
    "62": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "63": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60"
    },
    "66": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "jump": "i",
      "offset": [
        531,
        788
      ],
      "op": "JUMP",
      "path": "5"
    },
    "67": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "68": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "70": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "71": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "73": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "75": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "77": {
      "op": "SHL"
    },
    "78": {
      "op": "SUB"
    },
    "79": {
      "op": "NOT"
    },
    "80": {
      "op": "SWAP1"
    },
    "81": {
      "op": "SWAP2"
    },
    "82": {
      "op": "AND"
    },
    "83": {
      "op": "DUP2"
    },
    "84": {
      "op": "MSTORE"
    },
    "85": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "87": {
      "op": "ADD"
    },
    "88": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "90": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "91": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "DUP1",
      "path": "5"
    },
    "92": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "93": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "SUB",
      "path": "5"
    },
    "94": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "95": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "RETURN",
      "path": "5"
    },
    "96": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "97": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        688,
        694
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "99": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 0,
      "value": "0x28FA6E16458F9C24AA59DDD4085264573006DBE30304837873C7DEAFC702B038"
    },
    "132": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        720,
        728
      ],
      "op": "DUP6",
      "path": "5"
    },
    "133": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        730,
        734
      ],
      "op": "DUP6",
      "path": "5"
    },
    "134": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        736,
        743
      ],
      "op": "DUP6",
      "path": "5"
    },
    "135": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        745,
        749
      ],
      "op": "DUP6",
      "path": "5"
    },
    "136": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        751,
        756
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E20"
    },
    "139": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "141": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "142": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9B"
    },
    "145": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "146": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "147": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "148": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "149": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "150": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "151": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1DB"
    },
    "154": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "jump": "i",
      "offset": [
        711,
        757
      ],
      "op": "JUMP",
      "path": "5"
    },
    "155": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "156": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "158": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "159": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "DUP1",
      "path": "5"
    },
    "160": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "161": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SUB",
      "path": "5"
    },
    "162": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "163": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        711,
        757
      ],
      "op": "LOG1",
      "path": "5"
    },
    "164": {
      "op": "POP"
    },
    "165": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        774,
        781
      ],
      "op": "PUSH32",
      "path": "5",
      "statement": 1,
      "value": "0x0"
    },
    "198": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "199": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "200": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "POP",
      "path": "5"
    },
    "201": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "POP",
      "path": "5"
    },
    "202": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "POP",
      "path": "5"
    },
    "203": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "offset": [
        531,
        788
      ],
      "op": "POP",
      "path": "5"
    },
    "204": {
      "fn": "ERC721ReceiverMock.onERC721Received",
      "jump": "o",
      "offset": [
        531,
        788
      ],
      "op": "JUMP",
      "path": "5"
    },
    "205": {
      "op": "JUMPDEST"
    },
    "206": {
      "op": "DUP1"
    },
    "207": {
      "op": "CALLDATALOAD"
    },
    "208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "214": {
      "op": "SHL"
    },
    "215": {
      "op": "SUB"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "AND"
    },
    "218": {
      "op": "DUP2"
    },
    "219": {
      "op": "EQ"
    },
    "220": {
      "op": "PUSH2",
      "value": "0xE4"
    },
    "223": {
      "op": "JUMPI"
    },
    "224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "226": {
      "op": "DUP1"
    },
    "227": {
      "op": "REVERT"
    },
    "228": {
      "op": "JUMPDEST"
    },
    "229": {
      "op": "SWAP2"
    },
    "230": {
      "op": "SWAP1"
    },
    "231": {
      "op": "POP"
    },
    "232": {
      "jump": "o",
      "op": "JUMP"
    },
    "233": {
      "op": "JUMPDEST"
    },
    "234": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "244": {
      "op": "MSTORE"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "249": {
      "op": "MSTORE"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "254": {
      "op": "REVERT"
    },
    "255": {
      "op": "JUMPDEST"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "261": {
      "op": "DUP1"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "264": {
      "op": "DUP6"
    },
    "265": {
      "op": "DUP8"
    },
    "266": {
      "op": "SUB"
    },
    "267": {
      "op": "SLT"
    },
    "268": {
      "op": "ISZERO"
    },
    "269": {
      "op": "PUSH2",
      "value": "0x115"
    },
    "272": {
      "op": "JUMPI"
    },
    "273": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "275": {
      "op": "DUP1"
    },
    "276": {
      "op": "REVERT"
    },
    "277": {
      "op": "JUMPDEST"
    },
    "278": {
      "op": "PUSH2",
      "value": "0x11E"
    },
    "281": {
      "op": "DUP6"
    },
    "282": {
      "op": "PUSH2",
      "value": "0xCD"
    },
    "285": {
      "jump": "i",
      "op": "JUMP"
    },
    "286": {
      "op": "JUMPDEST"
    },
    "287": {
      "op": "SWAP4"
    },
    "288": {
      "op": "POP"
    },
    "289": {
      "op": "PUSH2",
      "value": "0x12C"
    },
    "292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "294": {
      "op": "DUP7"
    },
    "295": {
      "op": "ADD"
    },
    "296": {
      "op": "PUSH2",
      "value": "0xCD"
    },
    "299": {
      "jump": "i",
      "op": "JUMP"
    },
    "300": {
      "op": "JUMPDEST"
    },
    "301": {
      "op": "SWAP3"
    },
    "302": {
      "op": "POP"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "305": {
      "op": "DUP6"
    },
    "306": {
      "op": "ADD"
    },
    "307": {
      "op": "CALLDATALOAD"
    },
    "308": {
      "op": "SWAP2"
    },
    "309": {
      "op": "POP"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "312": {
      "op": "DUP6"
    },
    "313": {
      "op": "ADD"
    },
    "314": {
      "op": "CALLDATALOAD"
    },
    "315": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "324": {
      "op": "DUP1"
    },
    "325": {
      "op": "DUP3"
    },
    "326": {
      "op": "GT"
    },
    "327": {
      "op": "ISZERO"
    },
    "328": {
      "op": "PUSH2",
      "value": "0x150"
    },
    "331": {
      "op": "JUMPI"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "334": {
      "op": "DUP1"
    },
    "335": {
      "op": "REVERT"
    },
    "336": {
      "op": "JUMPDEST"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "DUP8"
    },
    "339": {
      "op": "ADD"
    },
    "340": {
      "op": "SWAP2"
    },
    "341": {
      "op": "POP"
    },
    "342": {
      "op": "DUP8"
    },
    "343": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "345": {
      "op": "DUP4"
    },
    "346": {
      "op": "ADD"
    },
    "347": {
      "op": "SLT"
    },
    "348": {
      "op": "PUSH2",
      "value": "0x164"
    },
    "351": {
      "op": "JUMPI"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "354": {
      "op": "DUP1"
    },
    "355": {
      "op": "REVERT"
    },
    "356": {
      "op": "JUMPDEST"
    },
    "357": {
      "op": "DUP2"
    },
    "358": {
      "op": "CALLDATALOAD"
    },
    "359": {
      "op": "DUP2"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "GT"
    },
    "362": {
      "op": "ISZERO"
    },
    "363": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "366": {
      "op": "JUMPI"
    },
    "367": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "370": {
      "op": "PUSH2",
      "value": "0xE9"
    },
    "373": {
      "jump": "i",
      "op": "JUMP"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "377": {
      "op": "MLOAD"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "380": {
      "op": "DUP3"
    },
    "381": {
      "op": "ADD"
    },
    "382": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "384": {
      "op": "NOT"
    },
    "385": {
      "op": "SWAP1"
    },
    "386": {
      "op": "DUP2"
    },
    "387": {
      "op": "AND"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "390": {
      "op": "ADD"
    },
    "391": {
      "op": "AND"
    },
    "392": {
      "op": "DUP2"
    },
    "393": {
      "op": "ADD"
    },
    "394": {
      "op": "SWAP1"
    },
    "395": {
      "op": "DUP4"
    },
    "396": {
      "op": "DUP3"
    },
    "397": {
      "op": "GT"
    },
    "398": {
      "op": "DUP2"
    },
    "399": {
      "op": "DUP4"
    },
    "400": {
      "op": "LT"
    },
    "401": {
      "op": "OR"
    },
    "402": {
      "op": "ISZERO"
    },
    "403": {
      "op": "PUSH2",
      "value": "0x19E"
    },
    "406": {
      "op": "JUMPI"
    },
    "407": {
      "op": "PUSH2",
      "value": "0x19E"
    },
    "410": {
      "op": "PUSH2",
      "value": "0xE9"
    },
    "413": {
      "jump": "i",
      "op": "JUMP"
    },
    "414": {
      "op": "JUMPDEST"
    },
    "415": {
      "op": "DUP2"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "418": {
      "op": "MSTORE"
    },
    "419": {
      "op": "DUP3"
    },
    "420": {
      "op": "DUP2"
    },
    "421": {
      "op": "MSTORE"
    },
    "422": {
      "op": "DUP11"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "425": {
      "op": "DUP5"
    },
    "426": {
      "op": "DUP8"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "op": "ADD"
    },
    "429": {
      "op": "GT"
    },
    "430": {
      "op": "ISZERO"
    },
    "431": {
      "op": "PUSH2",
      "value": "0x1B7"
    },
    "434": {
      "op": "JUMPI"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "437": {
      "op": "DUP1"
    },
    "438": {
      "op": "REVERT"
    },
    "439": {
      "op": "JUMPDEST"
    },
    "440": {
      "op": "DUP3"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "443": {
      "op": "DUP7"
    },
    "444": {
      "op": "ADD"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "447": {
      "op": "DUP4"
    },
    "448": {
      "op": "ADD"
    },
    "449": {
      "op": "CALLDATACOPY"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "454": {
      "op": "DUP5"
    },
    "455": {
      "op": "DUP4"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "op": "ADD"
    },
    "458": {
      "op": "MSTORE"
    },
    "459": {
      "op": "DUP1"
    },
    "460": {
      "op": "SWAP6"
    },
    "461": {
      "op": "POP"
    },
    "462": {
      "op": "POP"
    },
    "463": {
      "op": "POP"
    },
    "464": {
      "op": "POP"
    },
    "465": {
      "op": "POP"
    },
    "466": {
      "op": "POP"
    },
    "467": {
      "op": "SWAP3"
    },
    "468": {
      "op": "SWAP6"
    },
    "469": {
      "op": "SWAP2"
    },
    "470": {
      "op": "SWAP5"
    },
    "471": {
      "op": "POP"
    },
    "472": {
      "op": "SWAP3"
    },
    "473": {
      "op": "POP"
    },
    "474": {
      "jump": "o",
      "op": "JUMP"
    },
    "475": {
      "op": "JUMPDEST"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "480": {
      "op": "DUP1"
    },
    "481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "483": {
      "op": "SHL"
    },
    "484": {
      "op": "SUB"
    },
    "485": {
      "op": "DUP1"
    },
    "486": {
      "op": "DUP9"
    },
    "487": {
      "op": "AND"
    },
    "488": {
      "op": "DUP4"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "492": {
      "op": "DUP2"
    },
    "493": {
      "op": "DUP9"
    },
    "494": {
      "op": "AND"
    },
    "495": {
      "op": "DUP2"
    },
    "496": {
      "op": "DUP6"
    },
    "497": {
      "op": "ADD"
    },
    "498": {
      "op": "MSTORE"
    },
    "499": {
      "op": "DUP7"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "502": {
      "op": "DUP6"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "509": {
      "op": "DUP6"
    },
    "510": {
      "op": "ADD"
    },
    "511": {
      "op": "MSTORE"
    },
    "512": {
      "op": "DUP6"
    },
    "513": {
      "op": "MLOAD"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "POP"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "519": {
      "op": "DUP6"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "op": "MSTORE"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "524": {
      "op": "JUMPDEST"
    },
    "525": {
      "op": "DUP3"
    },
    "526": {
      "op": "DUP2"
    },
    "527": {
      "op": "LT"
    },
    "528": {
      "op": "ISZERO"
    },
    "529": {
      "op": "PUSH2",
      "value": "0x228"
    },
    "532": {
      "op": "JUMPI"
    },
    "533": {
      "op": "DUP7"
    },
    "534": {
      "op": "DUP2"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "op": "DUP3"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "MLOAD"
    },
    "539": {
      "op": "DUP6"
    },
    "540": {
      "op": "DUP3"
    },
    "541": {
      "op": "ADD"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "544": {
      "op": "ADD"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "DUP2"
    },
    "547": {
      "op": "ADD"
    },
    "548": {
      "op": "PUSH2",
      "value": "0x20C"
    },
    "551": {
      "op": "JUMP"
    },
    "552": {
      "op": "JUMPDEST"
    },
    "553": {
      "op": "DUP3"
    },
    "554": {
      "op": "DUP2"
    },
    "555": {
      "op": "GT"
    },
    "556": {
      "op": "ISZERO"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x23A"
    },
    "560": {
      "op": "JUMPI"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "563": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "565": {
      "op": "DUP5"
    },
    "566": {
      "op": "DUP8"
    },
    "567": {
      "op": "ADD"
    },
    "568": {
      "op": "ADD"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "JUMPDEST"
    },
    "571": {
      "op": "POP"
    },
    "572": {
      "op": "POP"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "575": {
      "op": "DUP4"
    },
    "576": {
      "op": "ADD"
    },
    "577": {
      "op": "SWAP4"
    },
    "578": {
      "op": "SWAP1"
    },
    "579": {
      "op": "SWAP4"
    },
    "580": {
      "op": "MSTORE"
    },
    "581": {
      "op": "POP"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "584": {
      "op": "SWAP2"
    },
    "585": {
      "op": "SWAP1"
    },
    "586": {
      "op": "SWAP2"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "590": {
      "op": "NOT"
    },
    "591": {
      "op": "AND"
    },
    "592": {
      "op": "ADD"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "595": {
      "op": "ADD"
    },
    "596": {
      "op": "SWAP5"
    },
    "597": {
      "op": "SWAP4"
    },
    "598": {
      "op": "POP"
    },
    "599": {
      "op": "POP"
    },
    "600": {
      "op": "POP"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "731e01cfdca8742cbb7d74b107ccbc9750815571",
  "source": "// SPDX-License-Identifier: MIT\n// Creators: Chiru Labs\n\npragma solidity ^0.8.0;\n\nimport '../../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\n\ncontract ERC721ReceiverMock is IERC721Receiver {\n    enum Error {\n        None,\n        RevertWithMessage,\n        RevertWithoutMessage,\n        Panic\n    }\n\n    bytes4 private immutable _retval;\n\n    event Received(address operator, address from, uint256 tokenId, bytes data, uint256 gas);\n\n    constructor(bytes4 retval) {\n        _retval = retval;\n    }\n\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes memory data\n    ) public override returns (bytes4) {\n        emit Received(operator, from, tokenId, data, 20000);\n        return _retval;\n    }\n}\n",
  "sourceMap": "169:621:5:-:0;;;465:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;502:16:5;;;169:621;;14:290:17;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;178:16;;-1:-1:-1;;;;;;223:32:17;;213:43;;203:71;;270:1;267;260:12;203:71;293:5;14:290;-1:-1:-1;;;14:290:17:o;:::-;169:621:5;;;;;;;;;;;;",
  "sourcePath": "contracts/mocks/ERC721ReceiverMock.sol",
  "type": "contract"
}