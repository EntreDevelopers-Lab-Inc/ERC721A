{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/ERC721A.sol",
    "10": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "11": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "12": "node_modules/@openzeppelin/contracts/utils/Address.sol",
    "13": "node_modules/@openzeppelin/contracts/utils/Context.sol",
    "14": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
    "15": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
    "16": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
    "8": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
    "9": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC721A.sol",
    "exportedSymbols": {
      "Address": [
        2357
      ],
      "Context": [
        2379
      ],
      "ERC165": [
        2403
      ],
      "ERC721A": [
        1214
      ],
      "IERC165": [
        2415
      ],
      "IERC721": [
        1984
      ],
      "IERC721Enumerable": [
        2033
      ],
      "IERC721Metadata": [
        2060
      ],
      "IERC721Receiver": [
        2002
      ],
      "Strings": [
        1868
      ]
    },
    "id": 1215,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 166,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:23:1"
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "id": 167,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1985,
        "src": "81:74:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 168,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2003,
        "src": "156:82:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "id": 169,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2061,
        "src": "239:93:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2034,
        "src": "333:95:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Address.sol",
        "id": 171,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2358,
        "src": "429:67:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Context.sol",
        "id": 172,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2380,
        "src": "497:67:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Strings.sol",
        "id": 173,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 1869,
        "src": "565:67:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
        "id": 174,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1215,
        "sourceUnit": 2404,
        "src": "633:80:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 176,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2379,
              "src": "1177:7:1"
            },
            "id": 177,
            "nodeType": "InheritanceSpecifier",
            "src": "1177:7:1"
          },
          {
            "baseName": {
              "id": 178,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2403,
              "src": "1186:6:1"
            },
            "id": 179,
            "nodeType": "InheritanceSpecifier",
            "src": "1186:6:1"
          },
          {
            "baseName": {
              "id": 180,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1984,
              "src": "1194:7:1"
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "1194:7:1"
          },
          {
            "baseName": {
              "id": 182,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2060,
              "src": "1203:15:1"
            },
            "id": 183,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:15:1"
          },
          {
            "baseName": {
              "id": 184,
              "name": "IERC721Enumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2033,
              "src": "1220:17:1"
            },
            "id": 185,
            "nodeType": "InheritanceSpecifier",
            "src": "1220:17:1"
          }
        ],
        "canonicalName": "ERC721A",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 175,
          "nodeType": "StructuredDocumentation",
          "src": "715:441:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n Does not support burning tokens to address(0).\n Assumes that an owner cannot have more than the 2**128 (max value of uint128) of supply"
        },
        "fullyImplemented": true,
        "id": 1214,
        "linearizedBaseContracts": [
          1214,
          2033,
          2060,
          1984,
          2403,
          2415,
          2379
        ],
        "name": "ERC721A",
        "nameLocation": "1166:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 188,
            "libraryName": {
              "id": 186,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2357,
              "src": "1250:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "1244:26:1",
            "typeName": {
              "id": 187,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1262:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 191,
            "libraryName": {
              "id": 189,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1868,
              "src": "1281:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "1275:26:1",
            "typeName": {
              "id": 190,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1293:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "ERC721A.TokenOwnership",
            "id": 196,
            "members": [
              {
                "constant": false,
                "id": 193,
                "mutability": "mutable",
                "name": "addr",
                "nameLocation": "1347:4:1",
                "nodeType": "VariableDeclaration",
                "scope": 196,
                "src": "1339:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 192,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1339:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 195,
                "mutability": "mutable",
                "name": "startTimestamp",
                "nameLocation": "1368:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 196,
                "src": "1361:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 194,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1361:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenOwnership",
            "nameLocation": "1314:14:1",
            "nodeType": "StructDefinition",
            "scope": 1214,
            "src": "1307:82:1",
            "visibility": "public"
          },
          {
            "canonicalName": "ERC721A.AddressData",
            "id": 201,
            "members": [
              {
                "constant": false,
                "id": 198,
                "mutability": "mutable",
                "name": "balance",
                "nameLocation": "1432:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1424:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 197,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1424:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "numberMinted",
                "nameLocation": "1457:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 201,
                "src": "1449:20:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 199,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AddressData",
            "nameLocation": "1402:11:1",
            "nodeType": "StructDefinition",
            "scope": 1214,
            "src": "1395:81:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 204,
            "mutability": "mutable",
            "name": "currentIndex",
            "nameLocation": "1499:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "1482:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 202,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1482:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 203,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1514:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 206,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1555:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "1540:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 205,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1540:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 208,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1602:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "1587:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 207,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1587:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 213,
            "mutability": "mutable",
            "name": "_ownerships",
            "nameLocation": "1831:11:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "1787:55:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
            },
            "typeName": {
              "id": 212,
              "keyType": {
                "id": 209,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1795:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1787:34:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership)"
              },
              "valueType": {
                "id": 211,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 210,
                  "name": "TokenOwnership",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 196,
                  "src": "1806:14:1"
                },
                "referencedDeclaration": 196,
                "src": "1806:14:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenOwnership_$196_storage_ptr",
                  "typeString": "struct ERC721A.TokenOwnership"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 218,
            "mutability": "mutable",
            "name": "_addressData",
            "nameLocation": "1934:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "1894:52:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
              "typeString": "mapping(address => struct ERC721A.AddressData)"
            },
            "typeName": {
              "id": 217,
              "keyType": {
                "id": 214,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1902:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1894:31:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                "typeString": "mapping(address => struct ERC721A.AddressData)"
              },
              "valueType": {
                "id": 216,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 215,
                  "name": "AddressData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 201,
                  "src": "1913:11:1"
                },
                "referencedDeclaration": 201,
                "src": "1913:11:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AddressData_$201_storage_ptr",
                  "typeString": "struct ERC721A.AddressData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 222,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "2038:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "2002:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 221,
              "keyType": {
                "id": 219,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2010:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2002:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 220,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2021:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 228,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "2161:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 1214,
            "src": "2108:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 227,
              "keyType": {
                "id": 223,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2116:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2108:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 226,
                "keyType": {
                  "id": 224,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2135:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2127:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 225,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2146:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "2242:57:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 235,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 206,
                      "src": "2252:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 236,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 230,
                      "src": "2260:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2252:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:13:1"
                },
                {
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 239,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "2275:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 240,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 232,
                      "src": "2285:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2275:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:17:1"
                }
              ]
            },
            "id": 244,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2212:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2198:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2198:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2233:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "2219:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2219:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2197:44:1"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2242:0:1"
            },
            "scope": 1214,
            "src": "2186:113:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2014
            ],
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2432:36:1",
              "statements": [
                {
                  "expression": {
                    "id": 251,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "2449:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 250,
                  "id": 252,
                  "nodeType": "Return",
                  "src": "2442:19:1"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "2305:60:1",
              "text": " @dev See {IERC721Enumerable-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "2379:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 247,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2405:8:1"
            },
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:2:1"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 254,
                  "src": "2423:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2423:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2422:9:1"
            },
            "scope": 1214,
            "src": "2370:98:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2032
            ],
            "body": {
              "id": 273,
              "nodeType": "Block",
              "src": "2616:108:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 264,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 257,
                          "src": "2634:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 265,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "2642:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2642:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2634:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
                        "id": 268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2657:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        },
                        "value": "ERC721A: global index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_416f49c3ff7bff1c1eeb7c92df94ea163bb26b560d23e5a527b953b469a5a82a",
                          "typeString": "literal_string \"ERC721A: global index out of bounds\""
                        }
                      ],
                      "id": 263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2626:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2626:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 270,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:69:1"
                },
                {
                  "expression": {
                    "id": 271,
                    "name": "index",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 257,
                    "src": "2712:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 262,
                  "id": 272,
                  "nodeType": "Return",
                  "src": "2705:12:1"
                }
              ]
            },
            "documentation": {
              "id": 255,
              "nodeType": "StructuredDocumentation",
              "src": "2474:61:1",
              "text": " @dev See {IERC721Enumerable-tokenByIndex}."
            },
            "functionSelector": "4f6ccce7",
            "id": 274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nameLocation": "2549:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 259,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2589:8:1"
            },
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "2570:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "2562:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2562:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2561:15:1"
            },
            "returnParameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "2607:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2607:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2606:9:1"
            },
            "scope": 1214,
            "src": "2540:184:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2024
            ],
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "3115:707:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 286,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "3133:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 288,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "3151:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 287,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "3141:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3141:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3133:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220696e646578206f7574206f6620626f756e6473",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3159:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        },
                        "value": "ERC721A: owner index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00a4f3e7d9c302fd5b41b0e43e8a93fa8de4a27c5eeaa91ab9af6d4fc3b7eef3",
                          "typeString": "literal_string \"ERC721A: owner index out of bounds\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3125:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:71:1"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "numMintedSoFar",
                      "nameLocation": "3214:14:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "3206:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3206:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 298,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 296,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "3231:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3231:13:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3206:38:1"
                },
                {
                  "assignments": [
                    300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 300,
                      "mutability": "mutable",
                      "name": "tokenIdsIdx",
                      "nameLocation": "3262:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "3254:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3254:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3276:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3254:23:1"
                },
                {
                  "assignments": [
                    304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 304,
                      "mutability": "mutable",
                      "name": "currOwnershipAddr",
                      "nameLocation": "3295:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 362,
                      "src": "3287:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 303,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3287:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 309,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3323:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3315:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 305,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3315:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3315:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3287:38:1"
                },
                {
                  "body": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "3380:370:1",
                    "statements": [
                      {
                        "assignments": [
                          322
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 322,
                            "mutability": "mutable",
                            "name": "ownership",
                            "nameLocation": "3416:9:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 356,
                            "src": "3394:31:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership"
                            },
                            "typeName": {
                              "id": 321,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 320,
                                "name": "TokenOwnership",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 196,
                                "src": "3394:14:1"
                              },
                              "referencedDeclaration": 196,
                              "src": "3394:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$196_storage_ptr",
                                "typeString": "struct ERC721A.TokenOwnership"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 326,
                        "initialValue": {
                          "baseExpression": {
                            "id": 323,
                            "name": "_ownerships",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "3428:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                            }
                          },
                          "id": 325,
                          "indexExpression": {
                            "id": 324,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 311,
                            "src": "3440:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3428:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                            "typeString": "struct ERC721A.TokenOwnership storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3394:48:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 327,
                              "name": "ownership",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "3460:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                "typeString": "struct ERC721A.TokenOwnership memory"
                              }
                            },
                            "id": 328,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 193,
                            "src": "3460:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3486:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3478:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 329,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3478:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3478:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3460:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 340,
                        "nodeType": "IfStatement",
                        "src": "3456:101:1",
                        "trueBody": {
                          "id": 339,
                          "nodeType": "Block",
                          "src": "3490:67:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 334,
                                  "name": "currOwnershipAddr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 304,
                                  "src": "3508:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 335,
                                    "name": "ownership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 322,
                                    "src": "3528:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                      "typeString": "struct ERC721A.TokenOwnership memory"
                                    }
                                  },
                                  "id": 336,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "addr",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 193,
                                  "src": "3528:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "3508:34:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 338,
                              "nodeType": "ExpressionStatement",
                              "src": "3508:34:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 341,
                            "name": "currOwnershipAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "3574:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 342,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "3595:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3574:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 355,
                        "nodeType": "IfStatement",
                        "src": "3570:170:1",
                        "trueBody": {
                          "id": 354,
                          "nodeType": "Block",
                          "src": "3602:138:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 346,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 344,
                                  "name": "tokenIdsIdx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "3624:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 345,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 279,
                                  "src": "3639:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3624:20:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 350,
                              "nodeType": "IfStatement",
                              "src": "3620:75:1",
                              "trueBody": {
                                "id": 349,
                                "nodeType": "Block",
                                "src": "3646:49:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 347,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 311,
                                      "src": "3675:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "functionReturnParameters": 284,
                                    "id": 348,
                                    "nodeType": "Return",
                                    "src": "3668:8:1"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3712:13:1",
                                "subExpression": {
                                  "id": 351,
                                  "name": "tokenIdsIdx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 300,
                                  "src": "3712:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 353,
                              "nodeType": "ExpressionStatement",
                              "src": "3712:13:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 314,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 311,
                      "src": "3355:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 315,
                      "name": "numMintedSoFar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 295,
                      "src": "3359:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3355:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 357,
                  "initializationExpression": {
                    "assignments": [
                      311
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 311,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3348:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 357,
                        "src": "3340:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 313,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3352:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3340:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3375:3:1",
                      "subExpression": {
                        "id": 317,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 311,
                        "src": "3375:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 319,
                    "nodeType": "ExpressionStatement",
                    "src": "3375:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3335:415:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2067657420746f6b656e206f66206f776e657220627920696e646578",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3766:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        },
                        "value": "ERC721A: unable to get token of owner by index"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e403f65b757ed2b45e39c23ab96246709894f89fd878694e93be7e80d8a21b3c",
                          "typeString": "literal_string \"ERC721A: unable to get token of owner by index\""
                        }
                      ],
                      "id": 358,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3759:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3759:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3759:56:1"
                }
              ]
            },
            "documentation": {
              "id": 275,
              "nodeType": "StructuredDocumentation",
              "src": "2730:282:1",
              "text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
            },
            "functionSelector": "2f745c59",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nameLocation": "3026:19:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 281,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3088:8:1"
            },
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3054:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "3046:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3046:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "3069:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "3061:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3061:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3045:30:1"
            },
            "returnParameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "3106:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3106:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3105:9:1"
            },
            "scope": 1214,
            "src": "3017:805:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2402,
              2414
            ],
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "3997:258:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 374,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "4026:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 376,
                                  "name": "IERC721",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1984,
                                  "src": "4046:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$1984_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721_$1984_$",
                                    "typeString": "type(contract IERC721)"
                                  }
                                ],
                                "id": 375,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "4041:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4041:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1984",
                                "typeString": "type(contract IERC721)"
                              }
                            },
                            "id": 378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "4041:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4026:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 380,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "4082:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 382,
                                  "name": "IERC721Metadata",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2060,
                                  "src": "4102:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2060_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2060_$",
                                    "typeString": "type(contract IERC721Metadata)"
                                  }
                                ],
                                "id": 381,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "4097:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 383,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4097:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2060",
                                "typeString": "type(contract IERC721Metadata)"
                              }
                            },
                            "id": 384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "4097:33:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "4082:48:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4026:104:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 387,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "4146:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 389,
                                "name": "IERC721Enumerable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2033,
                                "src": "4166:17:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2033_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$2033_$",
                                  "typeString": "type(contract IERC721Enumerable)"
                                }
                              ],
                              "id": 388,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "4161:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4161:23:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$2033",
                              "typeString": "type(contract IERC721Enumerable)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "4161:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "4146:50:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "4026:170:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 396,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 366,
                          "src": "4236:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 394,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "4212:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721A_$1214_$",
                            "typeString": "type(contract super ERC721A)"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2402,
                        "src": "4212:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4212:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4026:222:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 373,
                  "id": 399,
                  "nodeType": "Return",
                  "src": "4007:241:1"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "3828:56:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 401,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "3898:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 370,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 368,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2403,
                  "src": "3965:6:1"
                },
                {
                  "id": 369,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2415,
                  "src": "3973:7:1"
                }
              ],
              "src": "3956:25:1"
            },
            "parameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3923:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "3916:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3916:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3915:20:1"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 401,
                  "src": "3991:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3990:6:1"
            },
            "scope": 1214,
            "src": "3889:366:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1909
            ],
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "4387:145:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 411,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 404,
                          "src": "4405:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4422:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4414:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 412,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4414:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4414:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4405:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4426:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        },
                        "value": "ERC721A: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84ca4009ef88766027b9c7268ed4bc3430b0aca6a5f1f2cee316933e8a938a2e",
                          "typeString": "literal_string \"ERC721A: balance query for the zero address\""
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4397:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4397:75:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "4397:75:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 422,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "4497:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 424,
                          "indexExpression": {
                            "id": 423,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "4510:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4497:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$201_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 425,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 198,
                        "src": "4497:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4489:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 420,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4489:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 409,
                  "id": 427,
                  "nodeType": "Return",
                  "src": "4482:43:1"
                }
              ]
            },
            "documentation": {
              "id": 402,
              "nodeType": "StructuredDocumentation",
              "src": "4261:48:1",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4323:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 406,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4360:8:1"
            },
            "parameters": {
              "id": 405,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 404,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4341:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "4333:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4333:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4332:15:1"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "4378:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4378:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4377:9:1"
            },
            "scope": 1214,
            "src": "4314:218:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "4608:156:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 437,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 431,
                          "src": "4626:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4643:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4635:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 438,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4635:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4635:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4626:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206e756d626572206d696e74656420717565727920666f7220746865207a65726f2061646472657373",
                        "id": 443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4647:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        },
                        "value": "ERC721A: number minted query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4c3e37e02c3080172abd6c32dc3a6b6918df0b3dc1fb7feda8214222d4942acc",
                          "typeString": "literal_string \"ERC721A: number minted query for the zero address\""
                        }
                      ],
                      "id": 436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4618:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4618:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "4618:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 448,
                            "name": "_addressData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "4724:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                              "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                            }
                          },
                          "id": 450,
                          "indexExpression": {
                            "id": 449,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 431,
                            "src": "4737:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4724:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressData_$201_storage",
                            "typeString": "struct ERC721A.AddressData storage ref"
                          }
                        },
                        "id": 451,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "numberMinted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 200,
                        "src": "4724:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4716:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4716:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4716:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 435,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "4709:48:1"
                }
              ]
            },
            "id": 455,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_numberMinted",
            "nameLocation": "4547:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 431,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4569:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "4561:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4561:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4560:15:1"
            },
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "4599:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4599:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4598:9:1"
            },
            "scope": 1214,
            "src": "4538:226:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 501,
              "nodeType": "Block",
              "src": "4854:377:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 465,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 457,
                            "src": "4880:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 464,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "4872:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4872:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4890:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        },
                        "value": "ERC721A: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_29871b61f20efaf78dc407e05261a408848306fb0a739e44fde052c3fc79db79",
                          "typeString": "literal_string \"ERC721A: owner query for nonexistent token\""
                        }
                      ],
                      "id": 463,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4864:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4864:71:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 469,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:71:1"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "4985:172:1",
                    "statements": [
                      {
                        "assignments": [
                          479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 479,
                            "mutability": "mutable",
                            "name": "ownership",
                            "nameLocation": "5021:9:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 495,
                            "src": "4999:31:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership"
                            },
                            "typeName": {
                              "id": 478,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 477,
                                "name": "TokenOwnership",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 196,
                                "src": "4999:14:1"
                              },
                              "referencedDeclaration": 196,
                              "src": "4999:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$196_storage_ptr",
                                "typeString": "struct ERC721A.TokenOwnership"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 483,
                        "initialValue": {
                          "baseExpression": {
                            "id": 480,
                            "name": "_ownerships",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "5033:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                              "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                            }
                          },
                          "id": 482,
                          "indexExpression": {
                            "id": 481,
                            "name": "curr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 471,
                            "src": "5045:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5033:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                            "typeString": "struct ERC721A.TokenOwnership storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4999:51:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 484,
                              "name": "ownership",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 479,
                              "src": "5068:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                "typeString": "struct ERC721A.TokenOwnership memory"
                              }
                            },
                            "id": 485,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 193,
                            "src": "5068:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5094:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5086:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 486,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5086:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5086:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5068:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 494,
                        "nodeType": "IfStatement",
                        "src": "5064:83:1",
                        "trueBody": {
                          "id": 493,
                          "nodeType": "Block",
                          "src": "5098:49:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 491,
                                "name": "ownership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 479,
                                "src": "5123:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "functionReturnParameters": 462,
                              "id": 492,
                              "nodeType": "Return",
                              "src": "5116:16:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 496,
                  "initializationExpression": {
                    "assignments": [
                      471
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "curr",
                        "nameLocation": "4959:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "4951:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4951:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 473,
                    "initialValue": {
                      "id": 472,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 457,
                      "src": "4966:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4951:22:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": false,
                      "src": "4977:6:1",
                      "subExpression": {
                        "id": 474,
                        "name": "curr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 471,
                        "src": "4977:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 476,
                    "nodeType": "ExpressionStatement",
                    "src": "4977:6:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "4946:211:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "455243373231413a20756e61626c6520746f2064657465726d696e6520746865206f776e6572206f6620746f6b656e",
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5174:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        },
                        "value": "ERC721A: unable to determine the owner of token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ece0237b5665a528baa0db1f56e1a9a2862e89d8f48f5a39295c99b628dbd040",
                          "typeString": "literal_string \"ERC721A: unable to determine the owner of token\""
                        }
                      ],
                      "id": 497,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "5167:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5167:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "5167:57:1"
                }
              ]
            },
            "id": 502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownershipOf",
            "nameLocation": "4779:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 457,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4799:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4791:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4791:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4790:17:1"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 502,
                  "src": "4831:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                    "typeString": "struct ERC721A.TokenOwnership"
                  },
                  "typeName": {
                    "id": 460,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 459,
                      "name": "TokenOwnership",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 196,
                      "src": "4831:14:1"
                    },
                    "referencedDeclaration": 196,
                    "src": "4831:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$196_storage_ptr",
                      "typeString": "struct ERC721A.TokenOwnership"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4830:23:1"
            },
            "scope": 1214,
            "src": "4770:461:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1917
            ],
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5361:49:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 512,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 505,
                          "src": "5390:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 511,
                        "name": "ownershipOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 502,
                        "src": "5378:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$196_memory_ptr_$",
                          "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                        }
                      },
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5378:20:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "id": 514,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "addr",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 193,
                    "src": "5378:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 510,
                  "id": 515,
                  "nodeType": "Return",
                  "src": "5371:32:1"
                }
              ]
            },
            "documentation": {
              "id": 503,
              "nodeType": "StructuredDocumentation",
              "src": "5237:46:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "5297:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 507,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5334:8:1"
            },
            "parameters": {
              "id": 506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 505,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5313:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5305:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 504,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5304:17:1"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5352:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5352:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5351:9:1"
            },
            "scope": 1214,
            "src": "5288:122:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2045
            ],
            "body": {
              "id": 526,
              "nodeType": "Block",
              "src": "5541:29:1",
              "statements": [
                {
                  "expression": {
                    "id": 524,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 206,
                    "src": "5558:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 523,
                  "id": 525,
                  "nodeType": "Return",
                  "src": "5551:12:1"
                }
              ]
            },
            "documentation": {
              "id": 518,
              "nodeType": "StructuredDocumentation",
              "src": "5416:51:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "5481:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 520,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5508:8:1"
            },
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5485:2:1"
            },
            "returnParameters": {
              "id": 523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 527,
                  "src": "5526:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 521,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5526:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5525:15:1"
            },
            "scope": 1214,
            "src": "5472:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2051
            ],
            "body": {
              "id": 536,
              "nodeType": "Block",
              "src": "5705:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 534,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 208,
                    "src": "5722:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 533,
                  "id": 535,
                  "nodeType": "Return",
                  "src": "5715:14:1"
                }
              ]
            },
            "documentation": {
              "id": 528,
              "nodeType": "StructuredDocumentation",
              "src": "5576:53:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "5643:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5672:8:1"
            },
            "parameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5649:2:1"
            },
            "returnParameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 537,
                  "src": "5690:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5690:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5689:15:1"
            },
            "scope": 1214,
            "src": "5634:102:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2059
            ],
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "5890:241:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 548,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 540,
                            "src": "5916:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 547,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "5908:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5908:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5926:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5900:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 552,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:76:1"
                },
                {
                  "assignments": [
                    554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 554,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "6001:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "5987:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 553,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "5987:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 557,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 555,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 588,
                      "src": "6011:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6011:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5987:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 560,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "6044:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6038:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 558,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6038:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6038:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "6038:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6062:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6038:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6122:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6038:86:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 569,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "6090:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 570,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "6099:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1750,
                                "src": "6099:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6099:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 567,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6073:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6073:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6073:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6066:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 565,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6066:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6066:53:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 545,
                  "id": 577,
                  "nodeType": "Return",
                  "src": "6031:93:1"
                }
              ]
            },
            "documentation": {
              "id": 538,
              "nodeType": "StructuredDocumentation",
              "src": "5742:55:1",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "5811:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 542,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5857:8:1"
            },
            "parameters": {
              "id": 541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5828:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5820:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5820:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5819:17:1"
            },
            "returnParameters": {
              "id": 545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "5875:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 543,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5875:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5874:15:1"
            },
            "scope": 1214,
            "src": "5802:329:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "6438:26:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6455:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 584,
                  "id": 586,
                  "nodeType": "Return",
                  "src": "6448:9:1"
                }
              ]
            },
            "documentation": {
              "id": 580,
              "nodeType": "StructuredDocumentation",
              "src": "6137:230:1",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "6381:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6389:2:1"
            },
            "returnParameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "6423:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 582,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6422:15:1"
            },
            "scope": 1214,
            "src": "6372:92:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1945
            ],
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "6583:341:1",
              "statements": [
                {
                  "assignments": [
                    598
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6601:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 631,
                      "src": "6593:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 597,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6593:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 603,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 601,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "6625:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 599,
                        "name": "ERC721A",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1214,
                        "src": "6609:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721A_$1214_$",
                          "typeString": "type(contract ERC721A)"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 517,
                      "src": "6609:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6609:24:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6593:40:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 605,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 591,
                          "src": "6651:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 606,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 598,
                          "src": "6657:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6651:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6664:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        },
                        "value": "ERC721A: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2b428ba12677ffcf56d03a4f2985efca9aa598b20f53cadc4a570591759501a",
                          "typeString": "literal_string \"ERC721A: approval to current owner\""
                        }
                      ],
                      "id": 604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6643:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6643:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "6643:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 612,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2369,
                              "src": "6733:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6733:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 614,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 598,
                            "src": "6749:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6733:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 617,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "6775:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 618,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2369,
                                "src": "6782:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6782:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 616,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "6758:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6758:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6733:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6809:59:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721A: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_734e6f993ba147f7adaac20714c290077ead5c6641a503a3a1953ff0e796c72c",
                          "typeString": "literal_string \"ERC721A: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6712:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6712:166:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 624,
                  "nodeType": "ExpressionStatement",
                  "src": "6712:166:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 626,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 591,
                        "src": "6898:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 627,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 593,
                        "src": "6902:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 628,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "6911:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 625,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "6889:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6889:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 630,
                  "nodeType": "ExpressionStatement",
                  "src": "6889:28:1"
                }
              ]
            },
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "6470:46:1",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "6530:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 595,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6574:8:1"
            },
            "parameters": {
              "id": 594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 591,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6546:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "6538:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6538:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 593,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6558:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 632,
                  "src": "6550:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6550:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6537:29:1"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6583:0:1"
            },
            "scope": 1214,
            "src": "6521:403:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1953
            ],
            "body": {
              "id": 652,
              "nodeType": "Block",
              "src": "7062:133:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 643,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "7088:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 642,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "7080:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7080:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7098:47:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        },
                        "value": "ERC721A: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f474264351b8939ed5d9d640216478399214e85950559fdc952e84826dd99d94",
                          "typeString": "literal_string \"ERC721A: approved query for nonexistent token\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7072:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7072:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:74:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 648,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "7164:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 650,
                    "indexExpression": {
                      "id": 649,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "7180:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7164:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 640,
                  "id": 651,
                  "nodeType": "Return",
                  "src": "7157:31:1"
                }
              ]
            },
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "6930:50:1",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "6994:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 637,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7035:8:1"
            },
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7014:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "7006:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7006:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7005:17:1"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 639,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 653,
                  "src": "7053:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7053:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7052:9:1"
            },
            "scope": 1214,
            "src": "6985:210:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1961
            ],
            "body": {
              "id": 686,
              "nodeType": "Block",
              "src": "7338:207:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 663,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 656,
                          "src": "7356:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 664,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2369,
                            "src": "7368:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7368:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7356:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20617070726f766520746f2063616c6c6572",
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7382:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        },
                        "value": "ERC721A: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4e4fdf0bf17360054610d66777a3fb73d6fdac83fe88195b75c48cc57a46f57",
                          "typeString": "literal_string \"ERC721A: approve to caller\""
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7348:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7348:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "7348:63:1"
                },
                {
                  "expression": {
                    "id": 677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 670,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 228,
                          "src": "7422:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 674,
                        "indexExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 671,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2369,
                            "src": "7441:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7441:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7422:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 675,
                      "indexExpression": {
                        "id": 673,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7455:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7422:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 676,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 658,
                      "src": "7467:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7422:53:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 678,
                  "nodeType": "ExpressionStatement",
                  "src": "7422:53:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 680,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2369,
                          "src": "7505:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7505:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 682,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 656,
                        "src": "7519:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 683,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "7529:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 679,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1901,
                      "src": "7490:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7490:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 685,
                  "nodeType": "EmitStatement",
                  "src": "7485:53:1"
                }
              ]
            },
            "documentation": {
              "id": 654,
              "nodeType": "StructuredDocumentation",
              "src": "7201:56:1",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "7271:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 660,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7329:8:1"
            },
            "parameters": {
              "id": 659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 656,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7297:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "7289:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7289:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 658,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "7312:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "7307:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 657,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7307:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7288:33:1"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7338:0:1"
            },
            "scope": 1214,
            "src": "7262:283:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1971
            ],
            "body": {
              "id": 704,
              "nodeType": "Block",
              "src": "7714:59:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 698,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "7731:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 700,
                      "indexExpression": {
                        "id": 699,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 690,
                        "src": "7750:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7731:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 702,
                    "indexExpression": {
                      "id": 701,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 692,
                      "src": "7757:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7731:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 697,
                  "id": 703,
                  "nodeType": "Return",
                  "src": "7724:42:1"
                }
              ]
            },
            "documentation": {
              "id": 688,
              "nodeType": "StructuredDocumentation",
              "src": "7551:55:1",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "7620:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 694,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7690:8:1"
            },
            "parameters": {
              "id": 693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 690,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "7645:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7637:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7637:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 692,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "7660:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7652:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7652:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7636:33:1"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 705,
                  "src": "7708:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 695,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7708:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7707:6:1"
            },
            "scope": 1214,
            "src": "7611:162:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1937
            ],
            "body": {
              "id": 722,
              "nodeType": "Block",
              "src": "7946:45:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 717,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 708,
                        "src": "7966:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 718,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 710,
                        "src": "7972:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 719,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 712,
                        "src": "7976:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 716,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "7956:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7956:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 721,
                  "nodeType": "ExpressionStatement",
                  "src": "7956:28:1"
                }
              ]
            },
            "documentation": {
              "id": 706,
              "nodeType": "StructuredDocumentation",
              "src": "7779:51:1",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "7844:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 714,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7937:8:1"
            },
            "parameters": {
              "id": 713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 708,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7874:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "7866:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 707,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7866:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 710,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7896:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "7888:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7888:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 712,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7916:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 723,
                  "src": "7908:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7908:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7856:73:1"
            },
            "returnParameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7946:0:1"
            },
            "scope": 1214,
            "src": "7835:156:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1927
            ],
            "body": {
              "id": 741,
              "nodeType": "Block",
              "src": "8172:56:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 735,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 726,
                        "src": "8199:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 736,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 728,
                        "src": "8205:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 737,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "8209:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8218:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 734,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        742,
                        772
                      ],
                      "referencedDeclaration": 772,
                      "src": "8182:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8182:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 740,
                  "nodeType": "ExpressionStatement",
                  "src": "8182:39:1"
                }
              ]
            },
            "documentation": {
              "id": 724,
              "nodeType": "StructuredDocumentation",
              "src": "7997:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 742,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "8066:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 732,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8163:8:1"
            },
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8100:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8092:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8092:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8122:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8114:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8114:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8142:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 742,
                  "src": "8134:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8134:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8082:73:1"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8172:0:1"
            },
            "scope": 1214,
            "src": "8057:171:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1983
            ],
            "body": {
              "id": 771,
              "nodeType": "Block",
              "src": "8437:201:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "8457:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 757,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "8463:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 758,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "8467:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 755,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1100,
                      "src": "8447:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8447:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "8447:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 763,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 745,
                            "src": "8529:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 764,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "8535:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 765,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "8539:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 766,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 751,
                            "src": "8548:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 762,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "8506:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8506:48:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8568:53:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721A: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                          "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 761,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8485:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8485:146:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 770,
                  "nodeType": "ExpressionStatement",
                  "src": "8485:146:1"
                }
              ]
            },
            "documentation": {
              "id": 743,
              "nodeType": "StructuredDocumentation",
              "src": "8234:55:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "8303:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8428:8:1"
            },
            "parameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8337:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8329:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8329:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8359:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8351:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8351:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8379:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8371:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8371:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8409:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 772,
                  "src": "8396:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8396:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8319:101:1"
            },
            "returnParameters": {
              "id": 754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8437:0:1"
            },
            "scope": 1214,
            "src": "8294:344:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 784,
              "nodeType": "Block",
              "src": "8947:46:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 780,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 775,
                      "src": "8964:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 781,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "8974:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8964:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 779,
                  "id": 783,
                  "nodeType": "Return",
                  "src": "8957:29:1"
                }
              ]
            },
            "documentation": {
              "id": 773,
              "nodeType": "StructuredDocumentation",
              "src": "8644:235:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),"
            },
            "id": 785,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "8893:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 775,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8909:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8901:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8901:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8900:17:1"
            },
            "returnParameters": {
              "id": 779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 785,
                  "src": "8941:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8941:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8940:6:1"
            },
            "scope": 1214,
            "src": "8884:109:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 798,
              "nodeType": "Block",
              "src": "9057:44:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 793,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 787,
                        "src": "9077:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 794,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 789,
                        "src": "9081:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9091:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 792,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        799,
                        945
                      ],
                      "referencedDeclaration": 945,
                      "src": "9067:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9067:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "9067:27:1"
                }
              ]
            },
            "id": 799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9008:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 787,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9026:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "9018:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 786,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9018:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9038:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 799,
                  "src": "9030:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9017:30:1"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9057:0:1"
            },
            "scope": 1214,
            "src": "8999:102:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 944,
              "nodeType": "Block",
              "src": "9474:1248:1",
              "statements": [
                {
                  "assignments": [
                    810
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "startTokenId",
                      "nameLocation": "9492:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 944,
                      "src": "9484:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9484:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 812,
                  "initialValue": {
                    "id": 811,
                    "name": "currentIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 204,
                    "src": "9507:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9484:35:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 814,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "9537:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9551:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9543:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 815,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9543:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9543:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9537:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9555:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        },
                        "value": "ERC721A: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d44a4129b83bd8f726e10653f1f05aa5a9f14d8c9c066d6e6701839279ddce3b",
                          "typeString": "literal_string \"ERC721A: mint to the zero address\""
                        }
                      ],
                      "id": 813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9529:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9529:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 822,
                  "nodeType": "ExpressionStatement",
                  "src": "9529:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9733:22:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 825,
                              "name": "startTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 810,
                              "src": "9742:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 824,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "9734:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9734:21:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a20746f6b656e20616c7265616479206d696e746564",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9757:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
                          "typeString": "literal_string \"ERC721A: token already minted\""
                        },
                        "value": "ERC721A: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb7d04f3437a7effb983b7af618be4c66b34f1287b1be1811c7c3ac0aef8c037",
                          "typeString": "literal_string \"ERC721A: token already minted\""
                        }
                      ],
                      "id": 823,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9725:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9725:64:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "9725:64:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 832,
                          "name": "quantity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "9807:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9818:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9807:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207175616e74697479206d75737420626520677265617465722030",
                        "id": 835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9821:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6b655e1110360dd3eafc6caa5b340bf690ab065f24829996e8a95d47e07e262",
                          "typeString": "literal_string \"ERC721A: quantity must be greater 0\""
                        },
                        "value": "ERC721A: quantity must be greater 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6b655e1110360dd3eafc6caa5b340bf690ab065f24829996e8a95d47e07e262",
                          "typeString": "literal_string \"ERC721A: quantity must be greater 0\""
                        }
                      ],
                      "id": 831,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9799:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9799:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 837,
                  "nodeType": "ExpressionStatement",
                  "src": "9799:60:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 841,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9900:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9892:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 839,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9892:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9892:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 843,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "9904:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 844,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "9908:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 845,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "9922:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 838,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "9870:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9870:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 847,
                  "nodeType": "ExpressionStatement",
                  "src": "9870:61:1"
                },
                {
                  "assignments": [
                    850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 850,
                      "mutability": "mutable",
                      "name": "addressData",
                      "nameLocation": "9961:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 944,
                      "src": "9942:30:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressData_$201_memory_ptr",
                        "typeString": "struct ERC721A.AddressData"
                      },
                      "typeName": {
                        "id": 849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 848,
                          "name": "AddressData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 201,
                          "src": "9942:11:1"
                        },
                        "referencedDeclaration": 201,
                        "src": "9942:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressData_$201_storage_ptr",
                          "typeString": "struct ERC721A.AddressData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 854,
                  "initialValue": {
                    "baseExpression": {
                      "id": 851,
                      "name": "_addressData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "9975:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                        "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                      }
                    },
                    "id": 853,
                    "indexExpression": {
                      "id": 852,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 802,
                      "src": "9988:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9975:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressData_$201_storage",
                      "typeString": "struct ERC721A.AddressData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9942:49:1"
                },
                {
                  "expression": {
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 855,
                        "name": "_addressData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "10001:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                          "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                        }
                      },
                      "id": 857,
                      "indexExpression": {
                        "id": 856,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "10014:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10001:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressData_$201_storage",
                        "typeString": "struct ERC721A.AddressData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 859,
                              "name": "addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 850,
                              "src": "10045:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressData_$201_memory_ptr",
                                "typeString": "struct ERC721A.AddressData memory"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 198,
                            "src": "10045:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 863,
                                "name": "quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 804,
                                "src": "10075:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10067:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 861,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "10067:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10067:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "10045:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 866,
                              "name": "addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 850,
                              "src": "10098:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressData_$201_memory_ptr",
                                "typeString": "struct ERC721A.AddressData memory"
                              }
                            },
                            "id": 867,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "numberMinted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 200,
                            "src": "10098:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 870,
                                "name": "quantity",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 804,
                                "src": "10133:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10125:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 868,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "10125:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10125:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "10098:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 858,
                        "name": "AddressData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "10020:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AddressData_$201_storage_ptr_$",
                          "typeString": "type(struct ERC721A.AddressData storage pointer)"
                        }
                      },
                      "id": 873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10020:132:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AddressData_$201_memory_ptr",
                        "typeString": "struct ERC721A.AddressData memory"
                      }
                    },
                    "src": "10001:151:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AddressData_$201_storage",
                      "typeString": "struct ERC721A.AddressData storage ref"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "10001:151:1"
                },
                {
                  "expression": {
                    "id": 887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 876,
                        "name": "_ownerships",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "10162:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                          "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                        }
                      },
                      "id": 878,
                      "indexExpression": {
                        "id": 877,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "10174:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10162:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                        "typeString": "struct ERC721A.TokenOwnership storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 880,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "10205:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 883,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10216:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10216:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10209:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 881,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "10209:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10209:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 879,
                        "name": "TokenOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "10190:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenOwnership_$196_storage_ptr_$",
                          "typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
                        }
                      },
                      "id": 886,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10190:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "src": "10162:71:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                      "typeString": "struct ERC721A.TokenOwnership storage ref"
                    }
                  },
                  "id": 888,
                  "nodeType": "ExpressionStatement",
                  "src": "10162:71:1"
                },
                {
                  "assignments": [
                    890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 890,
                      "mutability": "mutable",
                      "name": "updatedIndex",
                      "nameLocation": "10252:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 944,
                      "src": "10244:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 889,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10244:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 892,
                  "initialValue": {
                    "id": 891,
                    "name": "startTokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 810,
                    "src": "10267:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10244:35:1"
                },
                {
                  "body": {
                    "id": 928,
                    "nodeType": "Block",
                    "src": "10329:279:1",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 906,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10365:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10357:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 904,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10357:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10357:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 908,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "10369:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 909,
                              "name": "updatedIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "10373:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 903,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1883,
                            "src": "10348:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10348:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 911,
                        "nodeType": "EmitStatement",
                        "src": "10343:43:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 916,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10456:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 915,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10448:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 914,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10448:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10448:10:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 918,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 802,
                                  "src": "10460:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 919,
                                  "name": "updatedIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 890,
                                  "src": "10464:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 920,
                                  "name": "_data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 806,
                                  "src": "10478:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 913,
                                "name": "_checkOnERC721Received",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1187,
                                "src": "10425:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                                }
                              },
                              "id": 921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10425:59:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10502:53:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                              },
                              "value": "ERC721A: transfer to non ERC721Receiver implementer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                              }
                            ],
                            "id": 912,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10400:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10400:169:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 924,
                        "nodeType": "ExpressionStatement",
                        "src": "10400:169:1"
                      },
                      {
                        "expression": {
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10583:14:1",
                          "subExpression": {
                            "id": 925,
                            "name": "updatedIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "10583:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 927,
                        "nodeType": "ExpressionStatement",
                        "src": "10583:14:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 897,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "10310:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 898,
                      "name": "quantity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 804,
                      "src": "10314:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10310:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 929,
                  "initializationExpression": {
                    "assignments": [
                      894
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 894,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10303:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 929,
                        "src": "10295:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10295:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 896,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10307:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10295:13:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10324:3:1",
                      "subExpression": {
                        "id": 900,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "10324:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 902,
                    "nodeType": "ExpressionStatement",
                    "src": "10324:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "10290:318:1"
                },
                {
                  "expression": {
                    "id": 932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 930,
                      "name": "currentIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "10618:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 931,
                      "name": "updatedIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 890,
                      "src": "10633:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10618:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 933,
                  "nodeType": "ExpressionStatement",
                  "src": "10618:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10684:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10676:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 935,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10676:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10676:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 939,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 802,
                        "src": "10688:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 940,
                        "name": "startTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 810,
                        "src": "10692:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 941,
                        "name": "quantity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "10706:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 934,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "10655:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10655:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 943,
                  "nodeType": "ExpressionStatement",
                  "src": "10655:60:1"
                }
              ]
            },
            "documentation": {
              "id": 800,
              "nodeType": "StructuredDocumentation",
              "src": "9107:254:1",
              "text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` cannot be larger than the max batch size.\n Emits a {Transfer} event."
            },
            "id": 945,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "9375:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 802,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9402:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "9394:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9394:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 804,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "9422:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "9414:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9414:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 806,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9453:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 945,
                  "src": "9440:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9440:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9384:80:1"
            },
            "returnParameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9474:0:1"
            },
            "scope": 1214,
            "src": "9366:1356:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "11064:1642:1",
              "statements": [
                {
                  "assignments": [
                    957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 957,
                      "mutability": "mutable",
                      "name": "prevOwnership",
                      "nameLocation": "11096:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "11074:35:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership"
                      },
                      "typeName": {
                        "id": 956,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 955,
                          "name": "TokenOwnership",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 196,
                          "src": "11074:14:1"
                        },
                        "referencedDeclaration": 196,
                        "src": "11074:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$196_storage_ptr",
                          "typeString": "struct ERC721A.TokenOwnership"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 961,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 959,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "11124:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 958,
                      "name": "ownershipOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 502,
                      "src": "11112:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_TokenOwnership_$196_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct ERC721A.TokenOwnership memory)"
                      }
                    },
                    "id": 960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11112:20:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                      "typeString": "struct ERC721A.TokenOwnership memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11074:58:1"
                },
                {
                  "assignments": [
                    963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 963,
                      "mutability": "mutable",
                      "name": "isApprovedOrOwner",
                      "nameLocation": "11148:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "11143:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 962,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11143:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 964,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2369,
                                "src": "11169:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11169:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 966,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 957,
                                "src": "11185:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 967,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 193,
                              "src": "11185:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11169:34:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 970,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 952,
                                  "src": "11231:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 969,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 653,
                                "src": "11219:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11219:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 972,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2369,
                                "src": "11243:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11243:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "11219:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "11169:86:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 977,
                                "name": "prevOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 957,
                                "src": "11288:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                  "typeString": "struct ERC721A.TokenOwnership memory"
                                }
                              },
                              "id": 978,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addr",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 193,
                              "src": "11288:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 979,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2369,
                                "src": "11308:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11308:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 976,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 705,
                            "src": "11271:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11271:50:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11169:152:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 983,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "11168:154:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11143:179:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 986,
                        "name": "isApprovedOrOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "11341:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11360:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721A: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a5a1c26efbe9ce0f4fb5ffecb3ff566402ae29a050703f90a142863fd9771e7c",
                          "typeString": "literal_string \"ERC721A: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11333:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11333:80:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "11333:80:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 991,
                            "name": "prevOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 957,
                            "src": "11432:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                              "typeString": "struct ERC721A.TokenOwnership memory"
                            }
                          },
                          "id": 992,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 193,
                          "src": "11432:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 993,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 948,
                          "src": "11454:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11432:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11460:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        },
                        "value": "ERC721A: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_918e284b6965300b68dbfc836a4c36a34e0128e57c210dea9087074d5d714ff8",
                          "typeString": "literal_string \"ERC721A: transfer from incorrect owner\""
                        }
                      ],
                      "id": 990,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11424:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11424:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 997,
                  "nodeType": "ExpressionStatement",
                  "src": "11424:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 999,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "11519:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11533:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11525:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1000,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11525:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11525:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11519:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243373231413a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11537:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        },
                        "value": "ERC721A: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44e9d5d3b5fdeb95b514718a738ecc34eeb1a0137be67c00c42e2ddc048c473b",
                          "typeString": "literal_string \"ERC721A: transfer to the zero address\""
                        }
                      ],
                      "id": 998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11511:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11511:66:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "11511:66:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "11610:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "11616:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1011,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "11620:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11629:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1008,
                      "name": "_beforeTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1200,
                      "src": "11588:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11588:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1014,
                  "nodeType": "ExpressionStatement",
                  "src": "11588:43:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11710:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11702:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11702:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11702:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1020,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "11714:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1021,
                          "name": "prevOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 957,
                          "src": "11723:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                            "typeString": "struct ERC721A.TokenOwnership memory"
                          }
                        },
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 193,
                        "src": "11723:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1015,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "11693:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address)"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11693:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "11693:49:1"
                },
                {
                  "id": 1039,
                  "nodeType": "UncheckedBlock",
                  "src": "11918:109:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 1030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1025,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "11942:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1027,
                            "indexExpression": {
                              "id": 1026,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "11955:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11942:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$201_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1028,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 198,
                          "src": "11942:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11972:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11942:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "id": 1031,
                      "nodeType": "ExpressionStatement",
                      "src": "11942:31:1"
                    },
                    {
                      "expression": {
                        "id": 1037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 1032,
                              "name": "_addressData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 218,
                              "src": "11987:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AddressData_$201_storage_$",
                                "typeString": "mapping(address => struct ERC721A.AddressData storage ref)"
                              }
                            },
                            "id": 1034,
                            "indexExpression": {
                              "id": 1033,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 950,
                              "src": "12000:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11987:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressData_$201_storage",
                              "typeString": "struct ERC721A.AddressData storage ref"
                            }
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 198,
                          "src": "11987:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12015:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11987:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "id": 1038,
                      "nodeType": "ExpressionStatement",
                      "src": "11987:29:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 1051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1040,
                        "name": "_ownerships",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "12037:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                          "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                        }
                      },
                      "id": 1042,
                      "indexExpression": {
                        "id": 1041,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "12049:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12037:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                        "typeString": "struct ERC721A.TokenOwnership storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1044,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 950,
                          "src": "12075:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1047,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12086:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12086:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12079:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 1045,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "12079:6:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12079:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 1043,
                        "name": "TokenOwnership",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "12060:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TokenOwnership_$196_storage_ptr_$",
                          "typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
                        }
                      },
                      "id": 1050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12060:43:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                        "typeString": "struct ERC721A.TokenOwnership memory"
                      }
                    },
                    "src": "12037:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                      "typeString": "struct ERC721A.TokenOwnership storage ref"
                    }
                  },
                  "id": 1052,
                  "nodeType": "ExpressionStatement",
                  "src": "12037:66:1"
                },
                {
                  "assignments": [
                    1054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1054,
                      "mutability": "mutable",
                      "name": "nextTokenId",
                      "nameLocation": "12347:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1099,
                      "src": "12339:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12339:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1058,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1055,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "12361:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12371:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "12361:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12339:33:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1059,
                          "name": "_ownerships",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "12386:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                            "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                          }
                        },
                        "id": 1061,
                        "indexExpression": {
                          "id": 1060,
                          "name": "nextTokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1054,
                          "src": "12398:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12386:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                          "typeString": "struct ERC721A.TokenOwnership storage ref"
                        }
                      },
                      "id": 1062,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 193,
                      "src": "12386:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12427:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12419:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1063,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12419:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12419:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12386:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1085,
                  "nodeType": "IfStatement",
                  "src": "12382:223:1",
                  "trueBody": {
                    "id": 1084,
                    "nodeType": "Block",
                    "src": "12431:174:1",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 1069,
                              "name": "nextTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1054,
                              "src": "12457:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1068,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 785,
                            "src": "12449:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12449:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1083,
                        "nodeType": "IfStatement",
                        "src": "12445:150:1",
                        "trueBody": {
                          "id": 1082,
                          "nodeType": "Block",
                          "src": "12471:124:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 1080,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1071,
                                    "name": "_ownerships",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 213,
                                    "src": "12489:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenOwnership_$196_storage_$",
                                      "typeString": "mapping(uint256 => struct ERC721A.TokenOwnership storage ref)"
                                    }
                                  },
                                  "id": 1073,
                                  "indexExpression": {
                                    "id": 1072,
                                    "name": "nextTokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1054,
                                    "src": "12501:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "12489:24:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                                    "typeString": "struct ERC721A.TokenOwnership storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1075,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 957,
                                        "src": "12531:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1076,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "addr",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 193,
                                      "src": "12531:18:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 1077,
                                        "name": "prevOwnership",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 957,
                                        "src": "12551:13:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                          "typeString": "struct ERC721A.TokenOwnership memory"
                                        }
                                      },
                                      "id": 1078,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "startTimestamp",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 195,
                                      "src": "12551:28:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint64",
                                        "typeString": "uint64"
                                      }
                                    ],
                                    "id": 1074,
                                    "name": "TokenOwnership",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 196,
                                    "src": "12516:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_TokenOwnership_$196_storage_ptr_$",
                                      "typeString": "type(struct ERC721A.TokenOwnership storage pointer)"
                                    }
                                  },
                                  "id": 1079,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12516:64:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenOwnership_$196_memory_ptr",
                                    "typeString": "struct ERC721A.TokenOwnership memory"
                                  }
                                },
                                "src": "12489:91:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TokenOwnership_$196_storage",
                                  "typeString": "struct ERC721A.TokenOwnership storage ref"
                                }
                              },
                              "id": 1081,
                              "nodeType": "ExpressionStatement",
                              "src": "12489:91:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1087,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "12629:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1088,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "12635:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1089,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "12639:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1086,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1883,
                      "src": "12620:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12620:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1091,
                  "nodeType": "EmitStatement",
                  "src": "12615:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1093,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 948,
                        "src": "12678:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1094,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 950,
                        "src": "12684:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1095,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 952,
                        "src": "12688:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12697:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 1092,
                      "name": "_afterTokenTransfers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1213,
                      "src": "12657:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12657:42:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "12657:42:1"
                }
              ]
            },
            "documentation": {
              "id": 946,
              "nodeType": "StructuredDocumentation",
              "src": "10728:231:1",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10973:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 948,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11000:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "10992:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10992:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 950,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11022:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "11014:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11014:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11042:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1100,
                  "src": "11034:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11034:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10982:73:1"
            },
            "returnParameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11064:0:1"
            },
            "scope": 1214,
            "src": "10964:1742:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "12917:89:1",
              "statements": [
                {
                  "expression": {
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1110,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "12927:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1112,
                      "indexExpression": {
                        "id": 1111,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "12943:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12927:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1113,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1103,
                      "src": "12954:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12927:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1115,
                  "nodeType": "ExpressionStatement",
                  "src": "12927:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1117,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1107,
                        "src": "12980:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1118,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1103,
                        "src": "12987:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1119,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "12991:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1116,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1892,
                      "src": "12971:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12971:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "EmitStatement",
                  "src": "12966:33:1"
                }
              ]
            },
            "documentation": {
              "id": 1101,
              "nodeType": "StructuredDocumentation",
              "src": "12712:100:1",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "12826:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1103,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12852:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "12844:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12844:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12872:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "12864:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12864:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12897:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "12889:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12889:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12834:74:1"
            },
            "returnParameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12917:0:1"
            },
            "scope": 1214,
            "src": "12817:189:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "13715:627:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1137,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1128,
                        "src": "13729:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2080,
                      "src": "13729:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13729:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1184,
                    "nodeType": "Block",
                    "src": "14300:36:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14321:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1136,
                        "id": 1183,
                        "nodeType": "Return",
                        "src": "14314:11:1"
                      }
                    ]
                  },
                  "id": 1185,
                  "nodeType": "IfStatement",
                  "src": "13725:611:1",
                  "trueBody": {
                    "id": 1181,
                    "nodeType": "Block",
                    "src": "13746:548:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1161,
                              "nodeType": "Block",
                              "src": "13861:95:1",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1159,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1153,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1151,
                                      "src": "13886:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 1155,
                                              "name": "to",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1128,
                                              "src": "13912:2:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 1154,
                                            "name": "IERC721Receiver",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2002,
                                            "src": "13896:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2002_$",
                                              "typeString": "type(contract IERC721Receiver)"
                                            }
                                          },
                                          "id": 1156,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13896:19:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC721Receiver_$2002",
                                            "typeString": "contract IERC721Receiver"
                                          }
                                        },
                                        "id": 1157,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2001,
                                        "src": "13896:36:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                                        }
                                      },
                                      "id": 1158,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13896:45:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13886:55:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1136,
                                  "id": 1160,
                                  "nodeType": "Return",
                                  "src": "13879:62:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1162,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1152,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1151,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "13853:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1162,
                                  "src": "13846:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1150,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13846:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13845:15:1"
                            },
                            "src": "13837:119:1"
                          },
                          {
                            "block": {
                              "id": 1178,
                              "nodeType": "Block",
                              "src": "13985:299:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1169,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1166,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1164,
                                        "src": "14007:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1167,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "14007:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1168,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14024:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14007:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1176,
                                    "nodeType": "Block",
                                    "src": "14135:135:1",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "14166:86:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "14203:2:1",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14207:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14199:3:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14199:15:1"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14222:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14216:5:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14216:13:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14192:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14192:38:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14192:38:1"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1164,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14207:6:1",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1164,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14222:6:1",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1175,
                                        "nodeType": "InlineAssembly",
                                        "src": "14157:95:1"
                                      }
                                    ]
                                  },
                                  "id": 1177,
                                  "nodeType": "IfStatement",
                                  "src": "14003:267:1",
                                  "trueBody": {
                                    "id": 1174,
                                    "nodeType": "Block",
                                    "src": "14027:102:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243373231413a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1171,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14056:53:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721A: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_ca49489cd46fa9db1f74685c4caaa450ee484ab0608e48d65201e7f1222711ed",
                                                "typeString": "literal_string \"ERC721A: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1170,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14049:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1172,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14049:61:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1173,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14049:61:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1179,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1165,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1164,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "13977:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1179,
                                  "src": "13964:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1163,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13964:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13963:21:1"
                            },
                            "src": "13957:327:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1144,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2369,
                                "src": "13801:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13801:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1146,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1126,
                              "src": "13815:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1147,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "13821:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1148,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1132,
                              "src": "13830:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1141,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "13780:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1140,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2002,
                                "src": "13764:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2002_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13764:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2002",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2001,
                            "src": "13764:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13764:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1180,
                        "nodeType": "TryStatement",
                        "src": "13760:524:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1124,
              "nodeType": "StructuredDocumentation",
              "src": "13012:542:1",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "13568:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13608:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "13600:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13600:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13630:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "13622:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13622:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13650:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "13642:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13642:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "13680:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "13667:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13667:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13590:101:1"
            },
            "returnParameters": {
              "id": 1136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "13709:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13709:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13708:6:1"
            },
            "scope": 1214,
            "src": "13559:783:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1199,
              "nodeType": "Block",
              "src": "14968:2:1",
              "statements": []
            },
            "documentation": {
              "id": 1188,
              "nodeType": "StructuredDocumentation",
              "src": "14348:463:1",
              "text": " @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`."
            },
            "id": 1200,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfers",
            "nameLocation": "14825:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14864:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "14856:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14856:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14886:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "14878:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14878:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "14906:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "14898:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14898:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "14936:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1200,
                  "src": "14928:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14928:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14846:104:1"
            },
            "returnParameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14968:0:1"
            },
            "scope": 1214,
            "src": "14816:154:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "15519:2:1",
              "statements": []
            },
            "documentation": {
              "id": 1201,
              "nodeType": "StructuredDocumentation",
              "src": "14976:387:1",
              "text": " @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n minting.\n startTokenId - the first token id to be transferred\n quantity - the amount to be transferred\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero."
            },
            "id": 1213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfers",
            "nameLocation": "15377:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1203,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15415:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "15407:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15407:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1205,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15437:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "15429:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15429:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1207,
                  "mutability": "mutable",
                  "name": "startTokenId",
                  "nameLocation": "15457:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "15449:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15449:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "quantity",
                  "nameLocation": "15487:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "15479:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15479:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15397:104:1"
            },
            "returnParameters": {
              "id": 1211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15519:0:1"
            },
            "scope": 1214,
            "src": "15368:153:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1215,
        "src": "1157:14366:1",
        "usedErrors": []
      }
    ],
    "src": "56:15468:1"
  },
  "bytecode": "6080604052600080553480156200001557600080fd5b506040516200178f3803806200178f8339810160408190526200003891620001df565b81516200004d9060019060208501906200006c565b508051620000639060029060208401906200006c565b50505062000286565b8280546200007a9062000249565b90600052602060002090601f0160209004810192826200009e5760008555620000e9565b82601f10620000b957805160ff1916838001178555620000e9565b82800160010185558215620000e9579182015b82811115620000e9578251825591602001919060010190620000cc565b50620000f7929150620000fb565b5090565b5b80821115620000f75760008155600101620000fc565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b60008060408385031215620001f357600080fd5b82516001600160401b03808211156200020b57600080fd5b620002198683870162000128565b935060208501519150808211156200023057600080fd5b506200023f8582860162000128565b9150509250929050565b600181811c908216806200025e57607f821691505b602082108114156200028057634e487b7160e01b600052602260045260246000fd5b50919050565b6114f980620002966000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461020e578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461024757600080fd5b80634f6ccce7146101cd5780636352211e146101e057806370a08231146101f357806395d89b411461020657600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd146101945780632f745c59146101a757806342842e0e146101ba57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004611042565b610283565b60405190151581526020015b60405180910390f35b6101356102f0565b60405161012491906110b7565b6101556101503660046110ca565b610382565b6040516001600160a01b039091168152602001610124565b61018061017b3660046110ff565b610412565b005b6000545b604051908152602001610124565b6101806101a2366004611129565b61052a565b6101866101b53660046110ff565b610535565b6101806101c8366004611129565b6106a3565b6101866101db3660046110ca565b6106be565b6101556101ee3660046110ca565b610720565b610186610201366004611165565b610732565b6101356107c3565b61018061021c366004611180565b6107d2565b61018061022f3660046111d2565b610897565b6101356102423660046110ca565b6108d0565b6101186102553660046112ae565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b457506001600160e01b03198216635b5e139f60e01b145b806102cf57506001600160e01b0319821663780e9d6360e01b145b806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102ff906112e1565b80601f016020809104026020016040519081016040528092919081815260200182805461032b906112e1565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905090565b600061038f826000541190565b6103f65760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061041d82610720565b9050806001600160a01b0316836001600160a01b0316141561048c5760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b60648201526084016103ed565b336001600160a01b03821614806104a857506104a88133610255565b61051a5760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c0000000000000060648201526084016103ed565b6105258383836109aa565b505050565b610525838383610a06565b600061054083610732565b82106105995760405162461bcd60e51b815260206004820152602260248201527f455243373231413a206f776e657220696e646578206f7574206f6620626f756e604482015261647360f01b60648201526084016103ed565b600080549080805b83811015610643576000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff1691830191909152156105f457805192505b876001600160a01b0316836001600160a01b031614156106305786841415610622575093506102ea92505050565b8361062c81611332565b9450505b508061063b81611332565b9150506105a1565b5060405162461bcd60e51b815260206004820152602e60248201527f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060448201526d0deeedccae440c4f240d2dcc8caf60931b60648201526084016103ed565b61052583838360405180602001604052806000815250610897565b60008054821061071c5760405162461bcd60e51b815260206004820152602360248201527f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756044820152626e647360e81b60648201526084016103ed565b5090565b600061072b82610d4c565b5192915050565b60006001600160a01b03821661079e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084016103ed565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b6060600280546102ff906112e1565b6001600160a01b03821633141561082b5760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c657200000000000060448201526064016103ed565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108a2848484610a06565b6108ae84848484610e2c565b6108ca5760405162461bcd60e51b81526004016103ed9061134d565b50505050565b60606108dd826000541190565b6109415760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103ed565b600061095860408051602081019091526000815290565b9050600081511161097857604051806020016040528060008152506109a3565b8061098284610f2b565b6040516020016109939291906113a0565b6040516020818303038152906040525b9392505050565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610a1182610d4c565b80519091506000906001600160a01b0316336001600160a01b03161480610a48575033610a3d84610382565b6001600160a01b0316145b80610a5a57508151610a5a9033610255565b905080610ac45760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103ed565b846001600160a01b031682600001516001600160a01b031614610b385760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b60648201526084016103ed565b6001600160a01b038416610b9c5760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103ed565b610bac60008484600001516109aa565b6001600160a01b03858116600090815260046020908152604080832080546fffffffffffffffffffffffffffffffff198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255825180840184529182524267ffffffffffffffff9081168386019081528a8752600390955292852091518254945196166001600160e01b031990941693909317600160a01b95909216949094021790925590610c719085906113cf565b6000818152600360205260409020549091506001600160a01b0316610d0357610c9b816000541190565b15610d035760408051808201825284516001600160a01b03908116825260208087015167ffffffffffffffff9081168285019081526000878152600390935294909120925183549451909116600160a01b026001600160e01b03199094169116179190911790555b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6040805180820190915260008082526020820152610d6b826000541190565b610dca5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016103ed565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215610e19579392505050565b5080610e24816113e7565b915050610dcc565b60006001600160a01b0384163b15610f1f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e709033908990889088906004016113fe565b6020604051808303816000875af1925050508015610eab575060408051601f3d908101601f19168201909252610ea89181019061143b565b60015b610f05573d808015610ed9576040519150601f19603f3d011682016040523d82523d6000602084013e610ede565b606091505b508051610efd5760405162461bcd60e51b81526004016103ed9061134d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f23565b5060015b949350505050565b606081610f4f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f795780610f6381611332565b9150610f729050600a8361146e565b9150610f53565b60008167ffffffffffffffff811115610f9457610f946111bc565b6040519080825280601f01601f191660200182016040528015610fbe576020820181803683370190505b5090505b8415610f2357610fd3600183611482565b9150610fe0600a86611499565b610feb9060306113cf565b60f81b818381518110611000576110006114ad565b60200101906001600160f81b031916908160001a905350611022600a8661146e565b9450610fc2565b6001600160e01b03198116811461103f57600080fd5b50565b60006020828403121561105457600080fd5b81356109a381611029565b60005b8381101561107a578181015183820152602001611062565b838111156108ca5750506000910152565b600081518084526110a381602086016020860161105f565b601f01601f19169290920160200192915050565b6020815260006109a3602083018461108b565b6000602082840312156110dc57600080fd5b5035919050565b80356001600160a01b03811681146110fa57600080fd5b919050565b6000806040838503121561111257600080fd5b61111b836110e3565b946020939093013593505050565b60008060006060848603121561113e57600080fd5b611147846110e3565b9250611155602085016110e3565b9150604084013590509250925092565b60006020828403121561117757600080fd5b6109a3826110e3565b6000806040838503121561119357600080fd5b61119c836110e3565b9150602083013580151581146111b157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111e857600080fd5b6111f1856110e3565b93506111ff602086016110e3565b925060408501359150606085013567ffffffffffffffff8082111561122357600080fd5b818701915087601f83011261123757600080fd5b813581811115611249576112496111bc565b604051601f8201601f19908116603f01168101908382118183101715611271576112716111bc565b816040528281528a602084870101111561128a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112c157600080fd5b6112ca836110e3565b91506112d8602084016110e3565b90509250929050565b600181811c908216806112f557607f821691505b6020821081141561131657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156113465761134661131c565b5060010190565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b600083516113b281846020880161105f565b8351908301906113c681836020880161105f565b01949350505050565b600082198211156113e2576113e261131c565b500190565b6000816113f6576113f661131c565b506000190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114319083018461108b565b9695505050505050565b60006020828403121561144d57600080fd5b81516109a381611029565b634e487b7160e01b600052601260045260246000fd5b60008261147d5761147d611458565b500490565b6000828210156114945761149461131c565b500390565b6000826114a8576114a8611458565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fc866e4a663a6aebc8bdb9fd51a911bf38e8ee4dd01e1f17119a33c9848f133864736f6c634300080b0033",
  "bytecodeSha1": "087dfd4f087ffcc4f8f3c9dc0ac353e5a01242b7",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC721A",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC721A._transfer": {
          "72": [
            11341,
            11358,
            true
          ],
          "73": [
            11432,
            11458,
            true
          ],
          "74": [
            11519,
            11535,
            true
          ],
          "75": [
            12449,
            12469,
            false
          ]
        },
        "ERC721A.approve": {
          "59": [
            6651,
            6662,
            true
          ],
          "60": [
            6733,
            6754,
            true
          ],
          "61": [
            6758,
            6795,
            true
          ]
        },
        "ERC721A.balanceOf": {
          "67": [
            4405,
            4424,
            true
          ]
        },
        "ERC721A.getApproved": {
          "58": [
            7080,
            7096,
            true
          ]
        },
        "ERC721A.ownershipOf": {
          "76": [
            4872,
            4888,
            true
          ],
          "77": [
            5068,
            5096,
            false
          ]
        },
        "ERC721A.safeTransferFrom": {
          "69": [
            8506,
            8554,
            true
          ]
        },
        "ERC721A.setApprovalForAll": {
          "68": [
            7356,
            7380,
            true
          ]
        },
        "ERC721A.tokenByIndex": {
          "66": [
            2634,
            2655,
            true
          ]
        },
        "ERC721A.tokenOfOwnerByIndex": {
          "62": [
            3133,
            3157,
            true
          ],
          "63": [
            3460,
            3488,
            false
          ],
          "64": [
            3574,
            3600,
            false
          ],
          "65": [
            3624,
            3644,
            false
          ]
        },
        "ERC721A.tokenURI": {
          "70": [
            5908,
            5924,
            true
          ],
          "71": [
            6038,
            6063,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {
        "Strings.toString": {
          "78": [
            601,
            611,
            false
          ]
        }
      },
      "15": {},
      "16": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "1": {
        "ERC721A._approve": {
          "34": [
            12927,
            12956
          ],
          "35": [
            12966,
            12999
          ]
        },
        "ERC721A._baseURI": {
          "32": [
            6448,
            6457
          ]
        },
        "ERC721A._checkOnERC721Received": {
          "49": [
            14049,
            14110
          ],
          "50": [
            13879,
            13941
          ],
          "51": [
            14314,
            14325
          ]
        },
        "ERC721A._exists": {
          "6": [
            8957,
            8986
          ]
        },
        "ERC721A._transfer": {
          "36": [
            11333,
            11413
          ],
          "37": [
            11424,
            11501
          ],
          "38": [
            11511,
            11577
          ],
          "39": [
            11693,
            11742
          ],
          "40": [
            11942,
            11973
          ],
          "41": [
            11987,
            12016
          ],
          "42": [
            12037,
            12103
          ],
          "43": [
            12489,
            12580
          ],
          "44": [
            12615,
            12647
          ]
        },
        "ERC721A.approve": {
          "8": [
            6643,
            6701
          ],
          "10": [
            6712,
            6878
          ],
          "11": [
            6889,
            6917
          ]
        },
        "ERC721A.balanceOf": {
          "23": [
            4397,
            4472
          ],
          "24": [
            4482,
            4525
          ]
        },
        "ERC721A.getApproved": {
          "5": [
            7072,
            7146
          ],
          "7": [
            7157,
            7188
          ]
        },
        "ERC721A.isApprovedForAll": {
          "1": [
            7724,
            7766
          ]
        },
        "ERC721A.name": {
          "4": [
            5551,
            5563
          ]
        },
        "ERC721A.ownerOf": {
          "22": [
            5371,
            5403
          ]
        },
        "ERC721A.ownershipOf": {
          "45": [
            4864,
            4935
          ],
          "46": [
            5116,
            5132
          ],
          "47": [
            4977,
            4983
          ]
        },
        "ERC721A.safeTransferFrom": {
          "19": [
            8182,
            8221
          ],
          "29": [
            8447,
            8475
          ],
          "30": [
            8485,
            8631
          ]
        },
        "ERC721A.setApprovalForAll": {
          "26": [
            7348,
            7411
          ],
          "27": [
            7422,
            7475
          ],
          "28": [
            7485,
            7538
          ]
        },
        "ERC721A.supportsInterface": {
          "2": [
            4007,
            4248
          ]
        },
        "ERC721A.symbol": {
          "25": [
            5715,
            5729
          ]
        },
        "ERC721A.tokenByIndex": {
          "20": [
            2626,
            2695
          ],
          "21": [
            2705,
            2717
          ]
        },
        "ERC721A.tokenOfOwnerByIndex": {
          "13": [
            3125,
            3196
          ],
          "14": [
            3508,
            3542
          ],
          "15": [
            3668,
            3676
          ],
          "16": [
            3712,
            3725
          ],
          "17": [
            3375,
            3378
          ],
          "18": [
            3759,
            3815
          ]
        },
        "ERC721A.tokenURI": {
          "31": [
            5900,
            5976
          ],
          "33": [
            6031,
            6124
          ]
        },
        "ERC721A.totalSupply": {
          "0": [
            2442,
            2461
          ]
        },
        "ERC721A.transferFrom": {
          "12": [
            7956,
            7984
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "Address.isContract": {
          "48": [
            1126,
            1141
          ]
        }
      },
      "13": {
        "Context._msgSender": {
          "9": [
            712,
            729
          ]
        }
      },
      "14": {
        "Strings.toString": {
          "52": [
            627,
            637
          ],
          "53": [
            743,
            751
          ],
          "54": [
            765,
            775
          ],
          "55": [
            877,
            888
          ],
          "56": [
            902,
            958
          ],
          "57": [
            972,
            983
          ]
        }
      },
      "15": {
        "ERC165.supportsInterface": {
          "3": [
            930,
            977
          ]
        }
      },
      "16": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101005760003560e01c80634f6ccce711610097578063a22cb46511610066578063a22cb4651461020e578063b88d4fde14610221578063c87b56dd14610234578063e985e9c51461024757600080fd5b80634f6ccce7146101cd5780636352211e146101e057806370a08231146101f357806395d89b411461020657600080fd5b806318160ddd116100d357806318160ddd1461018257806323b872dd146101945780632f745c59146101a757806342842e0e146101ba57600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004611042565b610283565b60405190151581526020015b60405180910390f35b6101356102f0565b60405161012491906110b7565b6101556101503660046110ca565b610382565b6040516001600160a01b039091168152602001610124565b61018061017b3660046110ff565b610412565b005b6000545b604051908152602001610124565b6101806101a2366004611129565b61052a565b6101866101b53660046110ff565b610535565b6101806101c8366004611129565b6106a3565b6101866101db3660046110ca565b6106be565b6101556101ee3660046110ca565b610720565b610186610201366004611165565b610732565b6101356107c3565b61018061021c366004611180565b6107d2565b61018061022f3660046111d2565b610897565b6101356102423660046110ca565b6108d0565b6101186102553660046112ae565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b457506001600160e01b03198216635b5e139f60e01b145b806102cf57506001600160e01b0319821663780e9d6360e01b145b806102ea57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102ff906112e1565b80601f016020809104026020016040519081016040528092919081815260200182805461032b906112e1565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b5050505050905090565b600061038f826000541190565b6103f65760405162461bcd60e51b815260206004820152602d60248201527f455243373231413a20617070726f76656420717565727920666f72206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061041d82610720565b9050806001600160a01b0316836001600160a01b0316141561048c5760405162461bcd60e51b815260206004820152602260248201527f455243373231413a20617070726f76616c20746f2063757272656e74206f776e60448201526132b960f11b60648201526084016103ed565b336001600160a01b03821614806104a857506104a88133610255565b61051a5760405162461bcd60e51b815260206004820152603960248201527f455243373231413a20617070726f76652063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656420666f7220616c6c0000000000000060648201526084016103ed565b6105258383836109aa565b505050565b610525838383610a06565b600061054083610732565b82106105995760405162461bcd60e51b815260206004820152602260248201527f455243373231413a206f776e657220696e646578206f7574206f6620626f756e604482015261647360f01b60648201526084016103ed565b600080549080805b83811015610643576000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff1691830191909152156105f457805192505b876001600160a01b0316836001600160a01b031614156106305786841415610622575093506102ea92505050565b8361062c81611332565b9450505b508061063b81611332565b9150506105a1565b5060405162461bcd60e51b815260206004820152602e60248201527f455243373231413a20756e61626c6520746f2067657420746f6b656e206f662060448201526d0deeedccae440c4f240d2dcc8caf60931b60648201526084016103ed565b61052583838360405180602001604052806000815250610897565b60008054821061071c5760405162461bcd60e51b815260206004820152602360248201527f455243373231413a20676c6f62616c20696e646578206f7574206f6620626f756044820152626e647360e81b60648201526084016103ed565b5090565b600061072b82610d4c565b5192915050565b60006001600160a01b03821661079e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231413a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084016103ed565b506001600160a01b03166000908152600460205260409020546001600160801b031690565b6060600280546102ff906112e1565b6001600160a01b03821633141561082b5760405162461bcd60e51b815260206004820152601a60248201527f455243373231413a20617070726f766520746f2063616c6c657200000000000060448201526064016103ed565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6108a2848484610a06565b6108ae84848484610e2c565b6108ca5760405162461bcd60e51b81526004016103ed9061134d565b50505050565b60606108dd826000541190565b6109415760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103ed565b600061095860408051602081019091526000815290565b9050600081511161097857604051806020016040528060008152506109a3565b8061098284610f2b565b6040516020016109939291906113a0565b6040516020818303038152906040525b9392505050565b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610a1182610d4c565b80519091506000906001600160a01b0316336001600160a01b03161480610a48575033610a3d84610382565b6001600160a01b0316145b80610a5a57508151610a5a9033610255565b905080610ac45760405162461bcd60e51b815260206004820152603260248201527f455243373231413a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016103ed565b846001600160a01b031682600001516001600160a01b031614610b385760405162461bcd60e51b815260206004820152602660248201527f455243373231413a207472616e736665722066726f6d20696e636f72726563746044820152651037bbb732b960d11b60648201526084016103ed565b6001600160a01b038416610b9c5760405162461bcd60e51b815260206004820152602560248201527f455243373231413a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b60648201526084016103ed565b610bac60008484600001516109aa565b6001600160a01b03858116600090815260046020908152604080832080546fffffffffffffffffffffffffffffffff198082166001600160801b03928316600019018316179092558986168086528386208054938416938316600190810190931693909317909255825180840184529182524267ffffffffffffffff9081168386019081528a8752600390955292852091518254945196166001600160e01b031990941693909317600160a01b95909216949094021790925590610c719085906113cf565b6000818152600360205260409020549091506001600160a01b0316610d0357610c9b816000541190565b15610d035760408051808201825284516001600160a01b03908116825260208087015167ffffffffffffffff9081168285019081526000878152600390935294909120925183549451909116600160a01b026001600160e01b03199094169116179190911790555b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b6040805180820190915260008082526020820152610d6b826000541190565b610dca5760405162461bcd60e51b815260206004820152602a60248201527f455243373231413a206f776e657220717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016103ed565b815b6000818152600360209081526040918290208251808401909352546001600160a01b038116808452600160a01b90910467ffffffffffffffff169183019190915215610e19579392505050565b5080610e24816113e7565b915050610dcc565b60006001600160a01b0384163b15610f1f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e709033908990889088906004016113fe565b6020604051808303816000875af1925050508015610eab575060408051601f3d908101601f19168201909252610ea89181019061143b565b60015b610f05573d808015610ed9576040519150601f19603f3d011682016040523d82523d6000602084013e610ede565b606091505b508051610efd5760405162461bcd60e51b81526004016103ed9061134d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f23565b5060015b949350505050565b606081610f4f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f795780610f6381611332565b9150610f729050600a8361146e565b9150610f53565b60008167ffffffffffffffff811115610f9457610f946111bc565b6040519080825280601f01601f191660200182016040528015610fbe576020820181803683370190505b5090505b8415610f2357610fd3600183611482565b9150610fe0600a86611499565b610feb9060306113cf565b60f81b818381518110611000576110006114ad565b60200101906001600160f81b031916908160001a905350611022600a8661146e565b9450610fc2565b6001600160e01b03198116811461103f57600080fd5b50565b60006020828403121561105457600080fd5b81356109a381611029565b60005b8381101561107a578181015183820152602001611062565b838111156108ca5750506000910152565b600081518084526110a381602086016020860161105f565b601f01601f19169290920160200192915050565b6020815260006109a3602083018461108b565b6000602082840312156110dc57600080fd5b5035919050565b80356001600160a01b03811681146110fa57600080fd5b919050565b6000806040838503121561111257600080fd5b61111b836110e3565b946020939093013593505050565b60008060006060848603121561113e57600080fd5b611147846110e3565b9250611155602085016110e3565b9150604084013590509250925092565b60006020828403121561117757600080fd5b6109a3826110e3565b6000806040838503121561119357600080fd5b61119c836110e3565b9150602083013580151581146111b157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111e857600080fd5b6111f1856110e3565b93506111ff602086016110e3565b925060408501359150606085013567ffffffffffffffff8082111561122357600080fd5b818701915087601f83011261123757600080fd5b813581811115611249576112496111bc565b604051601f8201601f19908116603f01168101908382118183101715611271576112716111bc565b816040528281528a602084870101111561128a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112c157600080fd5b6112ca836110e3565b91506112d8602084016110e3565b90509250929050565b600181811c908216806112f557607f821691505b6020821081141561131657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156113465761134661131c565b5060010190565b60208082526033908201527f455243373231413a207472616e7366657220746f206e6f6e204552433732315260408201527232b1b2b4bb32b91034b6b83632b6b2b73a32b960691b606082015260800190565b600083516113b281846020880161105f565b8351908301906113c681836020880161105f565b01949350505050565b600082198211156113e2576113e261131c565b500190565b6000816113f6576113f661131c565b506000190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114319083018461108b565b9695505050505050565b60006020828403121561144d57600080fd5b81516109a381611029565b634e487b7160e01b600052601260045260246000fd5b60008261147d5761147d611458565b500490565b6000828210156114945761149461131c565b500390565b6000826114a8576114a8611458565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220fc866e4a663a6aebc8bdb9fd51a911bf38e8ee4dd01e1f17119a33c9848f133864736f6c634300080b0033",
  "deployedSourceMap": "1157:14366:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3889:366;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;3889:366:1;;;;;;;;5472:98;;;:::i;:::-;;;;;;;:::i;6985:210::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;6985:210:1;1528:203:17;6521:403:1;;;;;;:::i;:::-;;:::i;:::-;;2370:98;2423:7;2449:12;2370:98;;;2319:25:17;;;2307:2;2292:18;2370:98:1;2173:177:17;7835:156:1;;;;;;:::i;:::-;;:::i;3017:805::-;;;;;;:::i;:::-;;:::i;8057:171::-;;;;;;:::i;:::-;;:::i;2540:184::-;;;;;;:::i;:::-;;:::i;5288:122::-;;;;;;:::i;:::-;;:::i;4314:218::-;;;;;;:::i;:::-;;:::i;5634:102::-;;;:::i;7262:283::-;;;;;;:::i;:::-;;:::i;8294:344::-;;;;;;:::i;:::-;;:::i;5802:329::-;;;;;;:::i;:::-;;:::i;7611:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7731:25:1;;;7708:4;7731:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7611:162;3889:366;3991:4;-1:-1:-1;;;;;;4026:40:1;;-1:-1:-1;;;4026:40:1;;:104;;-1:-1:-1;;;;;;;4082:48:1;;-1:-1:-1;;;4082:48:1;4026:104;:170;;;-1:-1:-1;;;;;;;4146:50:1;;-1:-1:-1;;;4146:50:1;4026:170;:222;;;-1:-1:-1;;;;;;;;;;937:40:15;;;4212:36:1;4007:241;3889:366;-1:-1:-1;;3889:366:1:o;5472:98::-;5526:13;5558:5;5551:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5472:98;:::o;6985:210::-;7053:7;7080:16;7088:7;8941:4;8974:12;-1:-1:-1;8964:22:1;8884:109;7080:16;7072:74;;;;-1:-1:-1;;;7072:74:1;;5358:2:17;7072:74:1;;;5340:21:17;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:17;;;5480:43;5540:19;;7072:74:1;;;;;;;;;-1:-1:-1;7164:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;7164:24:1;;6985:210::o;6521:403::-;6593:13;6609:24;6625:7;6609:15;:24::i;:::-;6593:40;;6657:5;-1:-1:-1;;;;;6651:11:1;:2;-1:-1:-1;;;;;6651:11:1;;;6643:58;;;;-1:-1:-1;;;6643:58:1;;5772:2:17;6643:58:1;;;5754:21:17;5811:2;5791:18;;;5784:30;5850:34;5830:18;;;5823:62;-1:-1:-1;;;5901:18:17;;;5894:32;5943:19;;6643:58:1;5570:398:17;6643:58:1;719:10:13;-1:-1:-1;;;;;6733:21:1;;;;:62;;-1:-1:-1;6758:37:1;6775:5;719:10:13;7611:162:1;:::i;6758:37::-;6712:166;;;;-1:-1:-1;;;6712:166:1;;6175:2:17;6712:166:1;;;6157:21:17;6214:2;6194:18;;;6187:30;6253:34;6233:18;;;6226:62;6324:27;6304:18;;;6297:55;6369:19;;6712:166:1;5973:421:17;6712:166:1;6889:28;6898:2;6902:7;6911:5;6889:8;:28::i;:::-;6583:341;6521:403;;:::o;7835:156::-;7956:28;7966:4;7972:2;7976:7;7956:9;:28::i;3017:805::-;3106:7;3141:16;3151:5;3141:9;:16::i;:::-;3133:5;:24;3125:71;;;;-1:-1:-1;;;3125:71:1;;6601:2:17;3125:71:1;;;6583:21:17;6640:2;6620:18;;;6613:30;6679:34;6659:18;;;6652:62;-1:-1:-1;;;6730:18:17;;;6723:32;6772:19;;3125:71:1;6399:398:17;3125:71:1;3206:22;2449:12;;;3206:22;;3335:415;3359:14;3355:1;:18;3335:415;;;3394:31;3428:14;;;:11;:14;;;;;;;;;3394:48;;;;;;;;;-1:-1:-1;;;;;3394:48:1;;;;;-1:-1:-1;;;3394:48:1;;;;;;;;;;;;3460:28;3456:101;;3528:14;;;-1:-1:-1;3456:101:1;3595:5;-1:-1:-1;;;;;3574:26:1;:17;-1:-1:-1;;;;;3574:26:1;;3570:170;;;3639:5;3624:11;:20;3620:75;;;-1:-1:-1;3675:1:1;-1:-1:-1;3668:8:1;;-1:-1:-1;;;3668:8:1;3620:75;3712:13;;;;:::i;:::-;;;;3570:170;-1:-1:-1;3375:3:1;;;;:::i;:::-;;;;3335:415;;;-1:-1:-1;3759:56:1;;-1:-1:-1;;;3759:56:1;;7276:2:17;3759:56:1;;;7258:21:17;7315:2;7295:18;;;7288:30;7354:34;7334:18;;;7327:62;-1:-1:-1;;;7405:18:17;;;7398:44;7459:19;;3759:56:1;7074:410:17;8057:171:1;8182:39;8199:4;8205:2;8209:7;8182:39;;;;;;;;;;;;:16;:39::i;2540:184::-;2607:7;2449:12;;2634:5;:21;2626:69;;;;-1:-1:-1;;;2626:69:1;;7691:2:17;2626:69:1;;;7673:21:17;7730:2;7710:18;;;7703:30;7769:34;7749:18;;;7742:62;-1:-1:-1;;;7820:18:17;;;7813:33;7863:19;;2626:69:1;7489:399:17;2626:69:1;-1:-1:-1;2712:5:1;2540:184::o;5288:122::-;5352:7;5378:20;5390:7;5378:11;:20::i;:::-;:25;;5288:122;-1:-1:-1;;5288:122:1:o;4314:218::-;4378:7;-1:-1:-1;;;;;4405:19:1;;4397:75;;;;-1:-1:-1;;;4397:75:1;;8095:2:17;4397:75:1;;;8077:21:17;8134:2;8114:18;;;8107:30;8173:34;8153:18;;;8146:62;-1:-1:-1;;;8224:18:17;;;8217:41;8275:19;;4397:75:1;7893:407:17;4397:75:1;-1:-1:-1;;;;;;4497:19:1;;;;;:12;:19;;;;;:27;-1:-1:-1;;;;;4497:27:1;;4314:218::o;5634:102::-;5690:13;5722:7;5715:14;;;;;:::i;7262:283::-;-1:-1:-1;;;;;7356:24:1;;719:10:13;7356:24:1;;7348:63;;;;-1:-1:-1;;;7348:63:1;;8507:2:17;7348:63:1;;;8489:21:17;8546:2;8526:18;;;8519:30;8585:28;8565:18;;;8558:56;8631:18;;7348:63:1;8305:350:17;7348:63:1;719:10:13;7422:32:1;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;7422:42:1;;;;;;;;;;;;:53;;-1:-1:-1;;7422:53:1;;;;;;;;;;7490:48;;540:41:17;;;7422:42:1;;719:10:13;7490:48:1;;513:18:17;7490:48:1;;;;;;;7262:283;;:::o;8294:344::-;8447:28;8457:4;8463:2;8467:7;8447:9;:28::i;:::-;8506:48;8529:4;8535:2;8539:7;8548:5;8506:22;:48::i;:::-;8485:146;;;;-1:-1:-1;;;8485:146:1;;;;;;;:::i;:::-;8294:344;;;;:::o;5802:329::-;5875:13;5908:16;5916:7;8941:4;8974:12;-1:-1:-1;8964:22:1;8884:109;5908:16;5900:76;;;;-1:-1:-1;;;5900:76:1;;9282:2:17;5900:76:1;;;9264:21:17;9321:2;9301:18;;;9294:30;9360:34;9340:18;;;9333:62;-1:-1:-1;;;9411:18:17;;;9404:45;9466:19;;5900:76:1;9080:411:17;5900:76:1;5987:21;6011:10;6448:9;;;;;;;;;-1:-1:-1;6448:9:1;;;6372:92;6011:10;5987:34;;6062:1;6044:7;6038:21;:25;:86;;;;;;;;;;;;;;;;;6090:7;6099:18;:7;:16;:18::i;:::-;6073:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6038:86;6031:93;5802:329;-1:-1:-1;;;5802:329:1:o;12817:189::-;12927:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;12927:29:1;-1:-1:-1;;;;;12927:29:1;;;;;;;;;12971:28;;12927:24;;12971:28;;;;;;;12817:189;;;:::o;10964:1742::-;11074:35;11112:20;11124:7;11112:11;:20::i;:::-;11185:18;;11074:58;;-1:-1:-1;11143:22:1;;-1:-1:-1;;;;;11169:34:1;719:10:13;-1:-1:-1;;;;;11169:34:1;;:86;;;-1:-1:-1;719:10:13;11219:20:1;11231:7;11219:11;:20::i;:::-;-1:-1:-1;;;;;11219:36:1;;11169:86;:152;;;-1:-1:-1;11288:18:1;;11271:50;;719:10:13;7611:162:1;:::i;11271:50::-;11143:179;;11341:17;11333:80;;;;-1:-1:-1;;;11333:80:1;;10173:2:17;11333:80:1;;;10155:21:17;10212:2;10192:18;;;10185:30;10251:34;10231:18;;;10224:62;-1:-1:-1;;;10302:18:17;;;10295:48;10360:19;;11333:80:1;9971:414:17;11333:80:1;11454:4;-1:-1:-1;;;;;11432:26:1;:13;:18;;;-1:-1:-1;;;;;11432:26:1;;11424:77;;;;-1:-1:-1;;;11424:77:1;;10592:2:17;11424:77:1;;;10574:21:17;10631:2;10611:18;;;10604:30;10670:34;10650:18;;;10643:62;-1:-1:-1;;;10721:18:17;;;10714:36;10767:19;;11424:77:1;10390:402:17;11424:77:1;-1:-1:-1;;;;;11519:16:1;;11511:66;;;;-1:-1:-1;;;11511:66:1;;10999:2:17;11511:66:1;;;10981:21:17;11038:2;11018:18;;;11011:30;11077:34;11057:18;;;11050:62;-1:-1:-1;;;11128:18:17;;;11121:35;11173:19;;11511:66:1;10797:401:17;11511:66:1;11693:49;11710:1;11714:7;11723:13;:18;;;11693:8;:49::i;:::-;-1:-1:-1;;;;;11942:18:1;;;;;;;:12;:18;;;;;;;;:31;;-1:-1:-1;;11942:31:1;;;-1:-1:-1;;;;;11942:31:1;;;-1:-1:-1;;11942:31:1;;;;;;;11987:16;;;;;;;;;:29;;;;;;;;-1:-1:-1;11987:29:1;;;;;;;;;;;;;12060:43;;;;;;;;;;12086:15;12060:43;;;;;;;;;;12037:20;;;:11;:20;;;;;;:66;;;;;;;;-1:-1:-1;;;;;;12037:66:1;;;;;;;-1:-1:-1;;;12037:66:1;;;;;;;;;;;;11942:18;12361:11;;12037:20;;12361:11;:::i;:::-;12427:1;12386:24;;;:11;:24;;;;;:29;12339:33;;-1:-1:-1;;;;;;12386:29:1;12382:223;;12449:20;12457:11;8941:4;8974:12;-1:-1:-1;8964:22:1;8884:109;12449:20;12445:150;;;12516:64;;;;;;;;12531:18;;-1:-1:-1;;;;;12516:64:1;;;;;;12551:28;;;;12516:64;;;;;;;;;;-1:-1:-1;12489:24:1;;;:11;:24;;;;;;;:91;;;;;;;;;-1:-1:-1;;;12489:91:1;-1:-1:-1;;;;;;12489:91:1;;;;;;;;;;;;12445:150;12639:7;12635:2;-1:-1:-1;;;;;12620:27:1;12629:4;-1:-1:-1;;;;;12620:27:1;;;;;;;;;;;11064:1642;;;10964:1742;;;:::o;4770:461::-;-1:-1:-1;;;;;;;;;;;;;;;;;4872:16:1;4880:7;8941:4;8974:12;-1:-1:-1;8964:22:1;8884:109;4872:16;4864:71;;;;-1:-1:-1;;;4864:71:1;;11538:2:17;4864:71:1;;;11520:21:17;11577:2;11557:18;;;11550:30;11616:34;11596:18;;;11589:62;-1:-1:-1;;;11667:18:17;;;11660:40;11717:19;;4864:71:1;11336:406:17;4864:71:1;4966:7;4946:211;4999:31;5033:17;;;:11;:17;;;;;;;;;4999:51;;;;;;;;;-1:-1:-1;;;;;4999:51:1;;;;;-1:-1:-1;;;4999:51:1;;;;;;;;;;;;5068:28;5064:83;;5123:9;4770:461;-1:-1:-1;;;4770:461:1:o;5064:83::-;-1:-1:-1;4977:6:1;;;;:::i;:::-;;;;4946:211;;13559:783;13709:4;-1:-1:-1;;;;;13729:13:1;;1087:20:12;1133:8;13725:611:1;;13764:72;;-1:-1:-1;;;13764:72:1;;-1:-1:-1;;;;;13764:36:1;;;;;:72;;719:10:13;;13815:4:1;;13821:7;;13830:5;;13764:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13764:72:1;;;;;;;;-1:-1:-1;;13764:72:1;;;;;;;;;;;;:::i;:::-;;;13760:524;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14007:13:1;;14003:267;;14049:61;;-1:-1:-1;;;14049:61:1;;;;;;;:::i;14003:267::-;14222:6;14216:13;14207:6;14203:2;14199:15;14192:38;13760:524;-1:-1:-1;;;;;;13886:55:1;-1:-1:-1;;;13886:55:1;;-1:-1:-1;13879:62:1;;13725:611;-1:-1:-1;14321:4:1;13725:611;13559:783;;;;;;:::o;328:703:14:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:14;;;;;;;;;;;;-1:-1:-1;;;627:10:14;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:14;;-1:-1:-1;773:2:14;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:14;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:14;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:14;;;;;;;;-1:-1:-1;972:11:14;981:2;972:11;;:::i;:::-;;;844:150;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:17;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:17:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:186::-;2747:6;2800:2;2788:9;2779:7;2775:23;2771:32;2768:52;;;2816:1;2813;2806:12;2768:52;2839:29;2858:9;2839:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:17;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6802:127::-;6863:10;6858:3;6854:20;6851:1;6844:31;6894:4;6891:1;6884:15;6918:4;6915:1;6908:15;6934:135;6973:3;-1:-1:-1;;6994:17:17;;6991:43;;;7014:18;;:::i;:::-;-1:-1:-1;7061:1:17;7050:13;;6934:135::o;8660:415::-;8862:2;8844:21;;;8901:2;8881:18;;;8874:30;8940:34;8935:2;8920:18;;8913:62;-1:-1:-1;;;9006:2:17;8991:18;;8984:49;9065:3;9050:19;;8660:415::o;9496:470::-;9675:3;9713:6;9707:13;9729:53;9775:6;9770:3;9763:4;9755:6;9751:17;9729:53;:::i;:::-;9845:13;;9804:16;;;;9867:57;9845:13;9804:16;9901:4;9889:17;;9867:57;:::i;:::-;9940:20;;9496:470;-1:-1:-1;;;;9496:470:17:o;11203:128::-;11243:3;11274:1;11270:6;11267:1;11264:13;11261:39;;;11280:18;;:::i;:::-;-1:-1:-1;11316:9:17;;11203:128::o;11747:136::-;11786:3;11814:5;11804:39;;11823:18;;:::i;:::-;-1:-1:-1;;;11859:18:17;;11747:136::o;12304:489::-;-1:-1:-1;;;;;12573:15:17;;;12555:34;;12625:15;;12620:2;12605:18;;12598:43;12672:2;12657:18;;12650:34;;;12720:3;12715:2;12700:18;;12693:31;;;12498:4;;12741:46;;12767:19;;12759:6;12741:46;:::i;:::-;12733:54;12304:489;-1:-1:-1;;;;;;12304:489:17:o;12798:249::-;12867:6;12920:2;12908:9;12899:7;12895:23;12891:32;12888:52;;;12936:1;12933;12926:12;12888:52;12968:9;12962:16;12987:30;13011:5;12987:30;:::i;13052:127::-;13113:10;13108:3;13104:20;13101:1;13094:31;13144:4;13141:1;13134:15;13168:4;13165:1;13158:15;13184:120;13224:1;13250;13240:35;;13255:18;;:::i;:::-;-1:-1:-1;13289:9:17;;13184:120::o;13309:125::-;13349:4;13377:1;13374;13371:8;13368:34;;;13382:18;;:::i;:::-;-1:-1:-1;13419:9:17;;13309:125::o;13439:112::-;13471:1;13497;13487:35;;13502:18;;:::i;:::-;-1:-1:-1;13536:9:17;;13439:112::o;13556:127::-;13617:10;13612:3;13608:20;13605:1;13598:31;13648:4;13645:1;13638:15;13672:4;13669:1;13662:15",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints. Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..). Does not support burning tokens to address(0). Assumes that an owner cannot have more than the 2**128 (max value of uint128) of supply",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}. This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first. It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    1157,
    15523
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x16D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0x283 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x10B7 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x124 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST PUSH2 0x186 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FF JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x720 JUMP JUMPDEST PUSH2 0x186 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x7C3 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x7D2 JUMP JUMPDEST PUSH2 0x180 PUSH2 0x22F CALLDATASIZE PUSH1 0x4 PUSH2 0x11D2 JUMP JUMPDEST PUSH2 0x897 JUMP JUMPDEST PUSH2 0x135 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x8D0 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x2B4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2CF JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x2EA JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2FF SWAP1 PUSH2 0x12E1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32B SWAP1 PUSH2 0x12E1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x378 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x378 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41D DUP3 PUSH2 0x720 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x4A8 JUMPI POP PUSH2 0x4A8 DUP2 CALLER PUSH2 0x255 JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x525 DUP4 DUP4 DUP4 PUSH2 0x9AA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x525 DUP4 DUP4 DUP4 PUSH2 0xA06 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x540 DUP4 PUSH2 0x732 JUMP JUMPDEST DUP3 LT PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6473 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x643 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0x5F4 JUMPI DUP1 MLOAD SWAP3 POP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x630 JUMPI DUP7 DUP5 EQ ISZERO PUSH2 0x622 JUMPI POP SWAP4 POP PUSH2 0x2EA SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH2 0x62C DUP2 PUSH2 0x1332 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 PUSH2 0x63B DUP2 PUSH2 0x1332 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5A1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0xDEEEDCCAE440C4F240D2DCC8CAF PUSH1 0x93 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH2 0x525 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x897 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x72B DUP3 PUSH2 0xD4C JUMP JUMPDEST MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x79E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x2FF SWAP1 PUSH2 0x12E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A20617070726F766520746F2063616C6C6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3ED JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x8A2 DUP5 DUP5 DUP5 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x8AE DUP5 DUP5 DUP5 DUP5 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x8CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x134D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8DD DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0x941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x0 PUSH2 0x958 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A3 JUMP JUMPDEST DUP1 PUSH2 0x982 DUP5 PUSH2 0xF2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x993 SWAP3 SWAP2 SWAP1 PUSH2 0x13A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP6 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA11 DUP3 PUSH2 0xD4C JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xA48 JUMPI POP CALLER PUSH2 0xA3D DUP5 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xA5A JUMPI POP DUP2 MLOAD PUSH2 0xA5A SWAP1 CALLER PUSH2 0x255 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xAC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E736665722066726F6D20696E636F7272656374 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1037BBB732B9 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST PUSH2 0xBAC PUSH1 0x0 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 NOT ADD DUP4 AND OR SWAP1 SWAP3 SSTORE DUP10 DUP7 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD SWAP4 DUP5 AND SWAP4 DUP4 AND PUSH1 0x1 SWAP1 DUP2 ADD SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE SWAP2 DUP3 MSTORE TIMESTAMP PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP4 DUP7 ADD SWAP1 DUP2 MSTORE DUP11 DUP8 MSTORE PUSH1 0x3 SWAP1 SWAP6 MSTORE SWAP3 DUP6 KECCAK256 SWAP2 MLOAD DUP3 SLOAD SWAP5 MLOAD SWAP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH1 0x1 PUSH1 0xA0 SHL SWAP6 SWAP1 SWAP3 AND SWAP5 SWAP1 SWAP5 MUL OR SWAP1 SWAP3 SSTORE SWAP1 PUSH2 0xC71 SWAP1 DUP6 SWAP1 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD03 JUMPI PUSH2 0xC9B DUP2 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xD03 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 SWAP3 MLOAD DUP4 SLOAD SWAP5 MLOAD SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xD6B DUP3 PUSH1 0x0 SLOAD GT SWAP1 JUMP JUMPDEST PUSH2 0xDCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x3A32B73A103A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3ED JUMP JUMPDEST DUP2 JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ISZERO PUSH2 0xE19 JUMPI SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 PUSH2 0xE24 DUP2 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xF1F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xE70 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xEAB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xEA8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x143B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF05 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xED9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xEFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP1 PUSH2 0x134D JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xF23 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xF4F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xF79 JUMPI DUP1 PUSH2 0xF63 DUP2 PUSH2 0x1332 JUMP JUMPDEST SWAP2 POP PUSH2 0xF72 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x146E JUMP JUMPDEST SWAP2 POP PUSH2 0xF53 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF94 JUMPI PUSH2 0xF94 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFBE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF23 JUMPI PUSH2 0xFD3 PUSH1 0x1 DUP4 PUSH2 0x1482 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE0 PUSH1 0xA DUP7 PUSH2 0x1499 JUMP JUMPDEST PUSH2 0xFEB SWAP1 PUSH1 0x30 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1000 JUMPI PUSH2 0x1000 PUSH2 0x14AD JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1022 PUSH1 0xA DUP7 PUSH2 0x146E JUMP JUMPDEST SWAP5 POP PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x103F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9A3 DUP2 PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x107A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1062 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8CA JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x10A3 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x105F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1112 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x111B DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x113E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1147 DUP5 PUSH2 0x10E3 JUMP JUMPDEST SWAP3 POP PUSH2 0x1155 PUSH1 0x20 DUP6 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9A3 DUP3 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x119C DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x11B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x11E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F1 DUP6 PUSH2 0x10E3 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FF PUSH1 0x20 DUP7 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x1249 JUMPI PUSH2 0x1249 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1271 JUMPI PUSH2 0x1271 PUSH2 0x11BC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x128A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12CA DUP4 PUSH2 0x10E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x12D8 PUSH1 0x20 DUP5 ADD PUSH2 0x10E3 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x12F5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1316 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1346 JUMPI PUSH2 0x1346 PUSH2 0x131C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152 PUSH1 0x40 DUP3 ADD MSTORE PUSH19 0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x69 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x13B2 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x105F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x13C6 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x105F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13E2 JUMPI PUSH2 0x13E2 PUSH2 0x131C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x13F6 JUMPI PUSH2 0x13F6 PUSH2 0x131C JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1431 SWAP1 DUP4 ADD DUP5 PUSH2 0x108B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x9A3 DUP2 PUSH2 0x1029 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x147D JUMPI PUSH2 0x147D PUSH2 0x1458 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1494 JUMPI PUSH2 0x1494 PUSH2 0x131C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14A8 JUMPI PUSH2 0x14A8 PUSH2 0x1458 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC DUP7 PUSH15 0x4A663A6AEBC8BDB9FD51A911BF38E8 0xEE 0x4D 0xD0 0x1E 0x1F OR GT SWAP11 CALLER 0xC9 DUP5 DUP16 SGT CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "25": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F6CCCE7"
    },
    "38": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20E"
    },
    "64": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x221"
    },
    "75": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x234"
    },
    "86": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x247"
    },
    "97": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4F6CCCE7"
    },
    "109": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1CD"
    },
    "113": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "120": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E0"
    },
    "124": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "131": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F3"
    },
    "135": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "143": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x206"
    },
    "146": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "147": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "158": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "GT",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x182"
    },
    "173": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x194"
    },
    "184": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x2F745C59"
    },
    "191": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A7"
    },
    "195": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BA"
    },
    "206": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "210": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "211": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "213": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "218": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "219": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105"
    },
    "222": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "224": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "229": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "230": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D"
    },
    "233": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "235": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "240": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "241": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x142"
    },
    "244": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "245": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "246": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "251": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "EQ",
      "path": "1"
    },
    "252": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D"
    },
    "255": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "256": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "257": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "259": {
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "260": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1157,
        15523
      ],
      "op": "REVERT",
      "path": "1"
    },
    "261": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "262": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x118"
    },
    "265": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x113"
    },
    "268": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "269": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "271": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1042"
    },
    "274": {
      "fn": "ERC721A.supportsInterface",
      "jump": "i",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "275": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "276": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x283"
    },
    "279": {
      "fn": "ERC721A.supportsInterface",
      "jump": "i",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "280": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "281": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "283": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "284": {
      "op": "SWAP1"
    },
    "285": {
      "op": "ISZERO"
    },
    "286": {
      "op": "ISZERO"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "DUP1",
      "path": "1"
    },
    "297": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "298": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "SUB",
      "path": "1"
    },
    "299": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "300": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "RETURN",
      "path": "1"
    },
    "301": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "302": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "305": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2F0"
    },
    "308": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "309": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "310": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "312": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "313": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "316": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "317": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "318": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10B7"
    },
    "321": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "322": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "323": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x155"
    },
    "326": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x150"
    },
    "329": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "330": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "332": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10CA"
    },
    "335": {
      "fn": "ERC721A.getApproved",
      "jump": "i",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "336": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "337": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x382"
    },
    "340": {
      "fn": "ERC721A.getApproved",
      "jump": "i",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "341": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "342": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "344": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "351": {
      "op": "SHL"
    },
    "352": {
      "op": "SUB"
    },
    "353": {
      "op": "SWAP1"
    },
    "354": {
      "op": "SWAP2"
    },
    "355": {
      "op": "AND"
    },
    "356": {
      "op": "DUP2"
    },
    "357": {
      "op": "MSTORE"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "360": {
      "op": "ADD"
    },
    "361": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "364": {
      "op": "JUMP"
    },
    "365": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "366": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "369": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "372": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "373": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "375": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10FF"
    },
    "378": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMP",
      "path": "1"
    },
    "379": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "380": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x412"
    },
    "383": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMP",
      "path": "1"
    },
    "384": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "385": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "STOP",
      "path": "1"
    },
    "386": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2370,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "387": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2423,
        2430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "389": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 0
    },
    "390": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2370,
        2468
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "391": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2370,
        2468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "393": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2370,
        2468
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "394": {
      "op": "SWAP1"
    },
    "395": {
      "op": "DUP2"
    },
    "396": {
      "op": "MSTORE"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "399": {
      "op": "ADD"
    },
    "400": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2370,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "403": {
      "op": "JUMP"
    },
    "404": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "405": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "408": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2"
    },
    "411": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "412": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "414": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1129"
    },
    "417": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        7835,
        7991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "418": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "419": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x52A"
    },
    "422": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        7835,
        7991
      ],
      "op": "JUMP",
      "path": "1"
    },
    "423": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "424": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x186"
    },
    "427": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B5"
    },
    "430": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "431": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "433": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10FF"
    },
    "436": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        3017,
        3822
      ],
      "op": "JUMP",
      "path": "1"
    },
    "437": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "438": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x535"
    },
    "441": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        3017,
        3822
      ],
      "op": "JUMP",
      "path": "1"
    },
    "442": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "443": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "446": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C8"
    },
    "449": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "450": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "452": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1129"
    },
    "455": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8057,
        8228
      ],
      "op": "JUMP",
      "path": "1"
    },
    "456": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "457": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6A3"
    },
    "460": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8057,
        8228
      ],
      "op": "JUMP",
      "path": "1"
    },
    "461": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "462": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x186"
    },
    "465": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DB"
    },
    "468": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "469": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "471": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10CA"
    },
    "474": {
      "fn": "ERC721A.tokenByIndex",
      "jump": "i",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "475": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "476": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6BE"
    },
    "479": {
      "fn": "ERC721A.tokenByIndex",
      "jump": "i",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "480": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "481": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x155"
    },
    "484": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EE"
    },
    "487": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "488": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "490": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10CA"
    },
    "493": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "494": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "495": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x720"
    },
    "498": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "499": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "500": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x186"
    },
    "503": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x201"
    },
    "506": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "507": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "509": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1165"
    },
    "512": {
      "fn": "ERC721A.balanceOf",
      "jump": "i",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMP",
      "path": "1"
    },
    "513": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "514": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x732"
    },
    "517": {
      "fn": "ERC721A.balanceOf",
      "jump": "i",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMP",
      "path": "1"
    },
    "518": {
      "fn": "ERC721A.symbol",
      "offset": [
        5634,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "519": {
      "fn": "ERC721A.symbol",
      "offset": [
        5634,
        5736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "522": {
      "fn": "ERC721A.symbol",
      "offset": [
        5634,
        5736
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7C3"
    },
    "525": {
      "fn": "ERC721A.symbol",
      "jump": "i",
      "offset": [
        5634,
        5736
      ],
      "op": "JUMP",
      "path": "1"
    },
    "526": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "527": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "530": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21C"
    },
    "533": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "534": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "536": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1180"
    },
    "539": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "i",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "540": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "541": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7D2"
    },
    "544": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "i",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "545": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "546": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x180"
    },
    "549": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22F"
    },
    "552": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "553": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "555": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11D2"
    },
    "558": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMP",
      "path": "1"
    },
    "559": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "560": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x897"
    },
    "563": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMP",
      "path": "1"
    },
    "564": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "565": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x135"
    },
    "568": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x242"
    },
    "571": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "572": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "574": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10CA"
    },
    "577": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMP",
      "path": "1"
    },
    "578": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "579": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D0"
    },
    "582": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMP",
      "path": "1"
    },
    "583": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "584": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x118"
    },
    "587": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "590": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "591": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "593": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12AE"
    },
    "596": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "597": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "SHL"
    },
    "605": {
      "op": "SUB"
    },
    "606": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 1
    },
    "607": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "DUP3",
      "path": "1"
    },
    "608": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "AND",
      "path": "1"
    },
    "609": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7708,
        7712
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "611": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "612": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "613": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "614": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "616": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "618": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "619": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "DUP2",
      "path": "1"
    },
    "620": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "621": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "623": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "DUP1",
      "path": "1"
    },
    "624": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "DUP4",
      "path": "1"
    },
    "625": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7756
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "626": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "627": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "628": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "629": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "AND",
      "path": "1"
    },
    "630": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "DUP3",
      "path": "1"
    },
    "631": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "632": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "633": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "634": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "635": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "636": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "637": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "638": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "640": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "AND",
      "path": "1"
    },
    "641": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7731,
        7766
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "642": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "643": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "644": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3991,
        3995
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "op": "NOT"
    },
    "655": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4066
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 2
    },
    "656": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4066
      ],
      "op": "AND",
      "path": "1"
    },
    "657": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "662": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "664": {
      "op": "SHL"
    },
    "665": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4066
      ],
      "op": "EQ",
      "path": "1"
    },
    "666": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4066
      ],
      "op": "DUP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4130
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B4"
    },
    "670": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4130
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "671": {
      "op": "POP"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "676": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "678": {
      "op": "SHL"
    },
    "679": {
      "op": "SUB"
    },
    "680": {
      "op": "NOT"
    },
    "681": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4082,
        4130
      ],
      "op": "DUP3",
      "path": "1"
    },
    "682": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4082,
        4130
      ],
      "op": "AND",
      "path": "1"
    },
    "683": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4082,
        4130
      ],
      "op": "EQ",
      "path": "1"
    },
    "692": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4130
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "693": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4196
      ],
      "op": "DUP1",
      "path": "1"
    },
    "694": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2CF"
    },
    "697": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4196
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "698": {
      "op": "POP"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "703": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "705": {
      "op": "SHL"
    },
    "706": {
      "op": "SUB"
    },
    "707": {
      "op": "NOT"
    },
    "708": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4146,
        4196
      ],
      "op": "DUP3",
      "path": "1"
    },
    "709": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4146,
        4196
      ],
      "op": "AND",
      "path": "1"
    },
    "710": {
      "op": "PUSH4",
      "value": "0x780E9D63"
    },
    "715": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "717": {
      "op": "SHL"
    },
    "718": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4146,
        4196
      ],
      "op": "EQ",
      "path": "1"
    },
    "719": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4196
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "720": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4248
      ],
      "op": "DUP1",
      "path": "1"
    },
    "721": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4248
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "724": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4026,
        4248
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "725": {
      "op": "POP"
    },
    "726": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "731": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "733": {
      "op": "SHL"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "op": "NOT"
    },
    "743": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "15",
      "statement": 3
    },
    "744": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "15"
    },
    "745": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "15"
    },
    "746": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4212,
        4248
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "747": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        4007,
        4248
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "748": {
      "fn": "ERC721A.supportsInterface",
      "offset": [
        3889,
        4255
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "fn": "ERC721A.supportsInterface",
      "jump": "o",
      "offset": [
        3889,
        4255
      ],
      "op": "JUMP",
      "path": "1"
    },
    "752": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "753": {
      "fn": "ERC721A.name",
      "offset": [
        5526,
        5539
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "755": {
      "fn": "ERC721A.name",
      "offset": [
        5558,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 4,
      "value": "0x1"
    },
    "757": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "758": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "759": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FF"
    },
    "762": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E1"
    },
    "766": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMP",
      "path": "1"
    },
    "767": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "768": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "769": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "771": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "772": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "774": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "775": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "776": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DIV",
      "path": "1"
    },
    "777": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MUL",
      "path": "1"
    },
    "778": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "780": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "781": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "783": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "784": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "785": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP2",
      "path": "1"
    },
    "786": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "787": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "789": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "790": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "791": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "792": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "793": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "794": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP2",
      "path": "1"
    },
    "795": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP2",
      "path": "1"
    },
    "796": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "797": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "800": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP3",
      "path": "1"
    },
    "801": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "802": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "803": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32B"
    },
    "806": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "807": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E1"
    },
    "810": {
      "fn": "ERC721A.name",
      "jump": "i",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMP",
      "path": "1"
    },
    "811": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "812": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "813": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "814": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x378"
    },
    "817": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "818": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "819": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "821": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "LT",
      "path": "1"
    },
    "822": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34D"
    },
    "825": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "826": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "829": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "830": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP4",
      "path": "1"
    },
    "831": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "832": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DIV",
      "path": "1"
    },
    "833": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MUL",
      "path": "1"
    },
    "834": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP4",
      "path": "1"
    },
    "835": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "836": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "837": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "839": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "840": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "841": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x378"
    },
    "844": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMP",
      "path": "1"
    },
    "845": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "846": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP3",
      "path": "1"
    },
    "847": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "848": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "849": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "850": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "852": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "853": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "855": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "857": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "858": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "859": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "860": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP2",
      "path": "1"
    },
    "861": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "862": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP2",
      "path": "1"
    },
    "863": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "864": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "865": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "867": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "868": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "869": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "871": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "872": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP1",
      "path": "1"
    },
    "873": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP4",
      "path": "1"
    },
    "874": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "GT",
      "path": "1"
    },
    "875": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35B"
    },
    "878": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "879": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP3",
      "path": "1"
    },
    "880": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "881": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SUB",
      "path": "1"
    },
    "882": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "884": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "AND",
      "path": "1"
    },
    "885": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "DUP3",
      "path": "1"
    },
    "886": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "ADD",
      "path": "1"
    },
    "887": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "888": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "889": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "890": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "891": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "892": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "893": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "894": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "895": {
      "fn": "ERC721A.name",
      "offset": [
        5551,
        5563
      ],
      "op": "POP",
      "path": "1"
    },
    "896": {
      "fn": "ERC721A.name",
      "offset": [
        5472,
        5570
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "897": {
      "fn": "ERC721A.name",
      "jump": "o",
      "offset": [
        5472,
        5570
      ],
      "op": "JUMP",
      "path": "1"
    },
    "898": {
      "fn": "ERC721A.getApproved",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "899": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7053,
        7060
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7080,
        7096
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x38F"
    },
    "904": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7088,
        7095
      ],
      "op": "DUP3",
      "path": "1"
    },
    "905": {
      "fn": "ERC721A._exists",
      "offset": [
        8941,
        8945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "907": {
      "fn": "ERC721A._exists",
      "offset": [
        8974,
        8986
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 6
    },
    "908": {
      "op": "GT"
    },
    "909": {
      "fn": "ERC721A._exists",
      "offset": [
        8964,
        8986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "910": {
      "fn": "ERC721A._exists",
      "offset": [
        8884,
        8993
      ],
      "op": "JUMP",
      "path": "1"
    },
    "911": {
      "branch": 58,
      "fn": "ERC721A.getApproved",
      "offset": [
        7080,
        7096
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "912": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3F6"
    },
    "915": {
      "branch": 58,
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "916": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "918": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "919": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "923": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "925": {
      "op": "SHL"
    },
    "926": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "DUP2",
      "path": "1"
    },
    "927": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "930": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "932": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "DUP3",
      "path": "1"
    },
    "933": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "ADD",
      "path": "1"
    },
    "934": {
      "op": "MSTORE"
    },
    "935": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "937": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "939": {
      "op": "DUP3"
    },
    "940": {
      "op": "ADD"
    },
    "941": {
      "op": "MSTORE"
    },
    "942": {
      "op": "PUSH32",
      "value": "0x455243373231413A20617070726F76656420717565727920666F72206E6F6E65"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "977": {
      "op": "DUP3"
    },
    "978": {
      "op": "ADD"
    },
    "979": {
      "op": "MSTORE"
    },
    "980": {
      "op": "PUSH13",
      "value": "0x3C34B9BA32B73A103A37B5B2B7"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x99"
    },
    "996": {
      "op": "SHL"
    },
    "997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "999": {
      "op": "DUP3"
    },
    "1000": {
      "op": "ADD"
    },
    "1001": {
      "op": "MSTORE"
    },
    "1002": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1006": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1008": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1009": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1010": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1011": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "SUB",
      "path": "1"
    },
    "1012": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1013": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1014": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7072,
        7146
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x0"
    },
    "1018": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1020": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1021": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7179
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "1023": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1025": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1026": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1028": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1029": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1030": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1037": {
      "op": "SHL"
    },
    "1038": {
      "op": "SUB"
    },
    "1039": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "AND",
      "path": "1"
    },
    "1040": {
      "fn": "ERC721A.getApproved",
      "offset": [
        7164,
        7188
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1041": {
      "fn": "ERC721A.getApproved",
      "jump": "o",
      "offset": [
        6985,
        7195
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1042": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1043": {
      "fn": "ERC721A.approve",
      "offset": [
        6593,
        6606
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1045": {
      "fn": "ERC721A.approve",
      "offset": [
        6609,
        6633
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41D"
    },
    "1048": {
      "fn": "ERC721A.approve",
      "offset": [
        6625,
        6632
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1049": {
      "fn": "ERC721A.approve",
      "offset": [
        6609,
        6624
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x720"
    },
    "1052": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        6609,
        6633
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1053": {
      "fn": "ERC721A.approve",
      "offset": [
        6609,
        6633
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1054": {
      "fn": "ERC721A.approve",
      "offset": [
        6593,
        6633
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1055": {
      "fn": "ERC721A.approve",
      "offset": [
        6593,
        6633
      ],
      "op": "POP",
      "path": "1"
    },
    "1056": {
      "fn": "ERC721A.approve",
      "offset": [
        6657,
        6662
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721A.approve",
      "offset": [
        6651,
        6662
      ],
      "op": "AND",
      "path": "1"
    },
    "1066": {
      "fn": "ERC721A.approve",
      "offset": [
        6651,
        6653
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1073": {
      "op": "SHL"
    },
    "1074": {
      "op": "SUB"
    },
    "1075": {
      "fn": "ERC721A.approve",
      "offset": [
        6651,
        6662
      ],
      "op": "AND",
      "path": "1"
    },
    "1076": {
      "fn": "ERC721A.approve",
      "offset": [
        6651,
        6662
      ],
      "op": "EQ",
      "path": "1"
    },
    "1077": {
      "branch": 59,
      "fn": "ERC721A.approve",
      "offset": [
        6651,
        6662
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1078": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x48C"
    },
    "1081": {
      "branch": 59,
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1082": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1084": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1085": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1091": {
      "op": "SHL"
    },
    "1092": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1093": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1096": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1098": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1099": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "ADD",
      "path": "1"
    },
    "1100": {
      "op": "MSTORE"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1103": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1105": {
      "op": "DUP3"
    },
    "1106": {
      "op": "ADD"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH32",
      "value": "0x455243373231413A20617070726F76616C20746F2063757272656E74206F776E"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1143": {
      "op": "DUP3"
    },
    "1144": {
      "op": "ADD"
    },
    "1145": {
      "op": "MSTORE"
    },
    "1146": {
      "op": "PUSH2",
      "value": "0x32B9"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1154": {
      "op": "DUP3"
    },
    "1155": {
      "op": "ADD"
    },
    "1156": {
      "op": "MSTORE"
    },
    "1157": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1159": {
      "op": "ADD"
    },
    "1160": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1163": {
      "op": "JUMP"
    },
    "1164": {
      "fn": "ERC721A.approve",
      "offset": [
        6643,
        6701
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1165": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13",
      "statement": 9
    },
    "1166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1172": {
      "op": "SHL"
    },
    "1173": {
      "op": "SUB"
    },
    "1174": {
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6754
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 10
    },
    "1175": {
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6754
      ],
      "op": "AND",
      "path": "1"
    },
    "1176": {
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6754
      ],
      "op": "EQ",
      "path": "1"
    },
    "1177": {
      "branch": 60,
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6754
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1178": {
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6795
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A8"
    },
    "1181": {
      "branch": 60,
      "fn": "ERC721A.approve",
      "offset": [
        6733,
        6795
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1182": {
      "op": "POP"
    },
    "1183": {
      "fn": "ERC721A.approve",
      "offset": [
        6758,
        6795
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A8"
    },
    "1186": {
      "fn": "ERC721A.approve",
      "offset": [
        6775,
        6780
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1187": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "1188": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "1191": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1192": {
      "branch": 61,
      "fn": "ERC721A.approve",
      "offset": [
        6758,
        6795
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1193": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x51A"
    },
    "1196": {
      "branch": 61,
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1197": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1199": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1200": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1206": {
      "op": "SHL"
    },
    "1207": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1211": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1213": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1214": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "ADD",
      "path": "1"
    },
    "1215": {
      "op": "MSTORE"
    },
    "1216": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1220": {
      "op": "DUP3"
    },
    "1221": {
      "op": "ADD"
    },
    "1222": {
      "op": "MSTORE"
    },
    "1223": {
      "op": "PUSH32",
      "value": "0x455243373231413A20617070726F76652063616C6C6572206973206E6F74206F"
    },
    "1256": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1258": {
      "op": "DUP3"
    },
    "1259": {
      "op": "ADD"
    },
    "1260": {
      "op": "MSTORE"
    },
    "1261": {
      "op": "PUSH32",
      "value": "0x776E6572206E6F7220617070726F76656420666F7220616C6C00000000000000"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1301": {
      "op": "ADD"
    },
    "1302": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1305": {
      "op": "JUMP"
    },
    "1306": {
      "fn": "ERC721A.approve",
      "offset": [
        6712,
        6878
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1307": {
      "fn": "ERC721A.approve",
      "offset": [
        6889,
        6917
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x525"
    },
    "1310": {
      "fn": "ERC721A.approve",
      "offset": [
        6898,
        6900
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1311": {
      "fn": "ERC721A.approve",
      "offset": [
        6902,
        6909
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1312": {
      "fn": "ERC721A.approve",
      "offset": [
        6911,
        6916
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1313": {
      "fn": "ERC721A.approve",
      "offset": [
        6889,
        6897
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AA"
    },
    "1316": {
      "fn": "ERC721A.approve",
      "jump": "i",
      "offset": [
        6889,
        6917
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1317": {
      "fn": "ERC721A.approve",
      "offset": [
        6889,
        6917
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1318": {
      "fn": "ERC721A.approve",
      "offset": [
        6583,
        6924
      ],
      "op": "POP",
      "path": "1"
    },
    "1319": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "POP",
      "path": "1"
    },
    "1320": {
      "fn": "ERC721A.approve",
      "offset": [
        6521,
        6924
      ],
      "op": "POP",
      "path": "1"
    },
    "1321": {
      "fn": "ERC721A.approve",
      "jump": "o",
      "offset": [
        6521,
        6924
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1322": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7835,
        7991
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1323": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7956,
        7984
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x525"
    },
    "1326": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7966,
        7970
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1327": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7972,
        7974
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1328": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7976,
        7983
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1329": {
      "fn": "ERC721A.transferFrom",
      "offset": [
        7956,
        7965
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA06"
    },
    "1332": {
      "fn": "ERC721A.transferFrom",
      "jump": "i",
      "offset": [
        7956,
        7984
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1333": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3017,
        3822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1334": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3106,
        3113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1336": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3141,
        3157
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x540"
    },
    "1339": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3151,
        3156
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1340": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3141,
        3150
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x732"
    },
    "1343": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        3141,
        3157
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1344": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3141,
        3157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1345": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3133,
        3138
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1346": {
      "branch": 62,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3133,
        3157
      ],
      "op": "LT",
      "path": "1"
    },
    "1347": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x599"
    },
    "1350": {
      "branch": 62,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1351": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1353": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1362": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1365": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1367": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1368": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "ADD",
      "path": "1"
    },
    "1369": {
      "op": "MSTORE"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1374": {
      "op": "DUP3"
    },
    "1375": {
      "op": "ADD"
    },
    "1376": {
      "op": "MSTORE"
    },
    "1377": {
      "op": "PUSH32",
      "value": "0x455243373231413A206F776E657220696E646578206F7574206F6620626F756E"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1412": {
      "op": "DUP3"
    },
    "1413": {
      "op": "ADD"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH2",
      "value": "0x6473"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1420": {
      "op": "SHL"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1423": {
      "op": "DUP3"
    },
    "1424": {
      "op": "ADD"
    },
    "1425": {
      "op": "MSTORE"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1428": {
      "op": "ADD"
    },
    "1429": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1432": {
      "op": "JUMP"
    },
    "1433": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3125,
        3196
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1434": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3206,
        3228
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1436": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1437": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1438": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1439": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3206,
        3228
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1440": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3206,
        3228
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1441": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1442": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3359,
        3373
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1443": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3355,
        3356
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1444": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3355,
        3373
      ],
      "op": "LT",
      "path": "1"
    },
    "1445": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1446": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x643"
    },
    "1449": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1450": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1452": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1453": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1454": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1455": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3439
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1457": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1459": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1460": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1461": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1462": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1464": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1465": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1466": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1467": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3428,
        3442
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1468": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1469": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1470": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1471": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1472": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "ADD",
      "path": "1"
    },
    "1473": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1474": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1475": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1476": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1483": {
      "op": "SHL"
    },
    "1484": {
      "op": "SUB"
    },
    "1485": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1486": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "AND",
      "path": "1"
    },
    "1487": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1488": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1489": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1494": {
      "op": "SHL"
    },
    "1495": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1496": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1497": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DIV",
      "path": "1"
    },
    "1498": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1507": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "AND",
      "path": "1"
    },
    "1508": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1509": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1510": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "ADD",
      "path": "1"
    },
    "1511": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1512": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1513": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1514": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3394,
        3442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1515": {
      "branch": 63,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3460,
        3488
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1516": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3456,
        3557
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5F4"
    },
    "1519": {
      "branch": 63,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3456,
        3557
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1520": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3528,
        3542
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 14
    },
    "1521": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3528,
        3542
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1522": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3528,
        3542
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1523": {
      "op": "POP"
    },
    "1524": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3456,
        3557
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1525": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3595,
        3600
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1532": {
      "op": "SHL"
    },
    "1533": {
      "op": "SUB"
    },
    "1534": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3574,
        3600
      ],
      "op": "AND",
      "path": "1"
    },
    "1535": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3574,
        3591
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3574,
        3600
      ],
      "op": "AND",
      "path": "1"
    },
    "1545": {
      "branch": 64,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3574,
        3600
      ],
      "op": "EQ",
      "path": "1"
    },
    "1546": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3570,
        3740
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1547": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3570,
        3740
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x630"
    },
    "1550": {
      "branch": 64,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3570,
        3740
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1551": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3639,
        3644
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1552": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3624,
        3635
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1553": {
      "branch": 65,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3624,
        3644
      ],
      "op": "EQ",
      "path": "1"
    },
    "1554": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3620,
        3695
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1555": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3620,
        3695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x622"
    },
    "1558": {
      "branch": 65,
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3620,
        3695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1559": {
      "op": "POP"
    },
    "1560": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3675,
        3676
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 15
    },
    "1561": {
      "op": "POP"
    },
    "1562": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3668,
        3676
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "1565": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3668,
        3676
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "POP"
    },
    "1569": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3668,
        3676
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1570": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3620,
        3695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1571": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 16
    },
    "1572": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x62C"
    },
    "1575": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1576": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1332"
    },
    "1579": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        3712,
        3725
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1580": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1581": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "1582": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "POP",
      "path": "1"
    },
    "1583": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3712,
        3725
      ],
      "op": "POP",
      "path": "1"
    },
    "1584": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3570,
        3740
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 17
    },
    "1587": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x63B"
    },
    "1590": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1591": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1332"
    },
    "1594": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        3375,
        3378
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1595": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1596": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1597": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "POP",
      "path": "1"
    },
    "1598": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3375,
        3378
      ],
      "op": "POP",
      "path": "1"
    },
    "1599": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5A1"
    },
    "1602": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1603": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3335,
        3750
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1604": {
      "op": "POP"
    },
    "1605": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 18,
      "value": "0x40"
    },
    "1607": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1616": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1619": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1621": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1622": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "ADD",
      "path": "1"
    },
    "1623": {
      "op": "MSTORE"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1628": {
      "op": "DUP3"
    },
    "1629": {
      "op": "ADD"
    },
    "1630": {
      "op": "MSTORE"
    },
    "1631": {
      "op": "PUSH32",
      "value": "0x455243373231413A20756E61626C6520746F2067657420746F6B656E206F6620"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH14",
      "value": "0xDEEEDCCAE440C4F240D2DCC8CAF"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "1686": {
      "op": "SHL"
    },
    "1687": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1689": {
      "op": "DUP3"
    },
    "1690": {
      "op": "ADD"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1694": {
      "op": "ADD"
    },
    "1695": {
      "fn": "ERC721A.tokenOfOwnerByIndex",
      "offset": [
        3759,
        3815
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1698": {
      "op": "JUMP"
    },
    "1699": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8057,
        8228
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1700": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x525"
    },
    "1703": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8199,
        8203
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1704": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8205,
        8207
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1705": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8209,
        8216
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1706": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1708": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1709": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1710": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1712": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "ADD",
      "path": "1"
    },
    "1713": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1715": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1716": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1717": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1719": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1720": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1721": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8221
      ],
      "op": "POP",
      "path": "1"
    },
    "1722": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8182,
        8198
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x897"
    },
    "1725": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8182,
        8221
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1726": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1727": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2607,
        2614
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1729": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1730": {
      "fn": "ERC721A.totalSupply",
      "offset": [
        2449,
        2461
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1731": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2634,
        2639
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 20
    },
    "1732": {
      "branch": 66,
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2634,
        2655
      ],
      "op": "LT",
      "path": "1"
    },
    "1733": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71C"
    },
    "1736": {
      "branch": 66,
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1737": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1739": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1748": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1753": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1754": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "ADD",
      "path": "1"
    },
    "1755": {
      "op": "MSTORE"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1760": {
      "op": "DUP3"
    },
    "1761": {
      "op": "ADD"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "op": "PUSH32",
      "value": "0x455243373231413A20676C6F62616C20696E646578206F7574206F6620626F75"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1798": {
      "op": "DUP3"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "MSTORE"
    },
    "1801": {
      "op": "PUSH3",
      "value": "0x6E6473"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1810": {
      "op": "DUP3"
    },
    "1811": {
      "op": "ADD"
    },
    "1812": {
      "op": "MSTORE"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1815": {
      "op": "ADD"
    },
    "1816": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1819": {
      "op": "JUMP"
    },
    "1820": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2626,
        2695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1821": {
      "op": "POP"
    },
    "1822": {
      "fn": "ERC721A.tokenByIndex",
      "offset": [
        2712,
        2717
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 21
    },
    "1823": {
      "fn": "ERC721A.tokenByIndex",
      "jump": "o",
      "offset": [
        2540,
        2724
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1824": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1825": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5352,
        5359
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1827": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5378,
        5398
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 22,
      "value": "0x72B"
    },
    "1830": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5390,
        5397
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1831": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5378,
        5389
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4C"
    },
    "1834": {
      "fn": "ERC721A.ownerOf",
      "jump": "i",
      "offset": [
        5378,
        5398
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1835": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5378,
        5398
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1836": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5378,
        5403
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1837": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5378,
        5403
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1838": {
      "fn": "ERC721A.ownerOf",
      "offset": [
        5288,
        5410
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1839": {
      "op": "POP"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "fn": "ERC721A.ownerOf",
      "jump": "o",
      "offset": [
        5288,
        5410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1842": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1843": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4378,
        4385
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1849": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1851": {
      "op": "SHL"
    },
    "1852": {
      "op": "SUB"
    },
    "1853": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4405,
        4424
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 23
    },
    "1854": {
      "branch": 67,
      "fn": "ERC721A.balanceOf",
      "offset": [
        4405,
        4424
      ],
      "op": "AND",
      "path": "1"
    },
    "1855": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x79E"
    },
    "1858": {
      "branch": 67,
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1859": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1861": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1862": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1868": {
      "op": "SHL"
    },
    "1869": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1870": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1873": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1875": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1876": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "ADD",
      "path": "1"
    },
    "1877": {
      "op": "MSTORE"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1882": {
      "op": "DUP3"
    },
    "1883": {
      "op": "ADD"
    },
    "1884": {
      "op": "MSTORE"
    },
    "1885": {
      "op": "PUSH32",
      "value": "0x455243373231413A2062616C616E636520717565727920666F7220746865207A"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1920": {
      "op": "DUP3"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "MSTORE"
    },
    "1923": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1937": {
      "op": "SHL"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1940": {
      "op": "DUP3"
    },
    "1941": {
      "op": "ADD"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1945": {
      "op": "ADD"
    },
    "1946": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "1949": {
      "op": "JUMP"
    },
    "1950": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4397,
        4472
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1958": {
      "op": "SHL"
    },
    "1959": {
      "op": "SUB"
    },
    "1960": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "AND",
      "path": "1",
      "statement": 24
    },
    "1961": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1963": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1964": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1965": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1966": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1968": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1970": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1971": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1973": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1974": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4516
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1975": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4524
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1982": {
      "op": "SHL"
    },
    "1983": {
      "op": "SUB"
    },
    "1984": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4524
      ],
      "op": "AND",
      "path": "1"
    },
    "1985": {
      "fn": "ERC721A.balanceOf",
      "offset": [
        4497,
        4524
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1986": {
      "fn": "ERC721A.balanceOf",
      "jump": "o",
      "offset": [
        4314,
        4532
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1987": {
      "fn": "ERC721A.symbol",
      "offset": [
        5634,
        5736
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1988": {
      "fn": "ERC721A.symbol",
      "offset": [
        5690,
        5703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1990": {
      "fn": "ERC721A.symbol",
      "offset": [
        5722,
        5729
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 25,
      "value": "0x2"
    },
    "1992": {
      "fn": "ERC721A.symbol",
      "offset": [
        5715,
        5729
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1993": {
      "fn": "ERC721A.symbol",
      "offset": [
        5715,
        5729
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1994": {
      "fn": "ERC721A.symbol",
      "offset": [
        5715,
        5729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FF"
    },
    "1997": {
      "fn": "ERC721A.symbol",
      "offset": [
        5715,
        5729
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1998": {
      "fn": "ERC721A.symbol",
      "offset": [
        5715,
        5729
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E1"
    },
    "2001": {
      "fn": "ERC721A.symbol",
      "jump": "i",
      "offset": [
        5715,
        5729
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2002": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2009": {
      "op": "SHL"
    },
    "2010": {
      "op": "SUB"
    },
    "2011": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7356,
        7380
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 26
    },
    "2012": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7356,
        7380
      ],
      "op": "AND",
      "path": "1"
    },
    "2013": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2014": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7356,
        7380
      ],
      "op": "EQ",
      "path": "1"
    },
    "2015": {
      "branch": 68,
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7356,
        7380
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2016": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82B"
    },
    "2019": {
      "branch": 68,
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2020": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2031": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2034": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2036": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2037": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "ADD",
      "path": "1"
    },
    "2038": {
      "op": "MSTORE"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "2041": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2043": {
      "op": "DUP3"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "MSTORE"
    },
    "2046": {
      "op": "PUSH32",
      "value": "0x455243373231413A20617070726F766520746F2063616C6C6572000000000000"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2090": {
      "op": "JUMP"
    },
    "2091": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7348,
        7411
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2092": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2093": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x0"
    },
    "2095": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2096": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2097": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2098": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7440
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "2100": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2102": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2103": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2104": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2105": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2107": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2108": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2109": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7454
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2116": {
      "op": "SHL"
    },
    "2117": {
      "op": "SUB"
    },
    "2118": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2119": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "AND",
      "path": "1"
    },
    "2120": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2121": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2122": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2123": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2124": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2125": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2126": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2127": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2128": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2129": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2130": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2131": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2134": {
      "op": "NOT"
    },
    "2135": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "AND",
      "path": "1"
    },
    "2136": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2137": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2138": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2139": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2140": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2141": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "OR",
      "path": "1"
    },
    "2142": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2143": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2144": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7475
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2145": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 28
    },
    "2146": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2147": {
      "op": "SWAP1"
    },
    "2148": {
      "op": "DUP2"
    },
    "2149": {
      "op": "MSTORE"
    },
    "2150": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2151": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7422,
        7464
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2152": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "2153": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2186": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2187": {
      "op": "ADD"
    },
    "2188": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2190": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2191": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2192": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2193": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "SUB",
      "path": "1"
    },
    "2194": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2195": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7490,
        7538
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2196": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "POP",
      "path": "1"
    },
    "2197": {
      "fn": "ERC721A.setApprovalForAll",
      "offset": [
        7262,
        7545
      ],
      "op": "POP",
      "path": "1"
    },
    "2198": {
      "fn": "ERC721A.setApprovalForAll",
      "jump": "o",
      "offset": [
        7262,
        7545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2199": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2200": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8447,
        8475
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 29,
      "value": "0x8A2"
    },
    "2203": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8457,
        8461
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2204": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8463,
        8465
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2205": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8467,
        8474
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2206": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8447,
        8456
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA06"
    },
    "2209": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8447,
        8475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2210": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8447,
        8475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2211": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8506,
        8554
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0x8AE"
    },
    "2214": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8529,
        8533
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2215": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8535,
        8537
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2216": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8539,
        8546
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2217": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8548,
        8553
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2218": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8506,
        8528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2C"
    },
    "2221": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8506,
        8554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2222": {
      "branch": 69,
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8506,
        8554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2223": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8CA"
    },
    "2226": {
      "branch": 69,
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2227": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2229": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2236": {
      "op": "SHL"
    },
    "2237": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2238": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2239": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2241": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "ADD",
      "path": "1"
    },
    "2242": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2245": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2246": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134D"
    },
    "2249": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "i",
      "offset": [
        8485,
        8631
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2250": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8485,
        8631
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2251": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "POP",
      "path": "1"
    },
    "2252": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "POP",
      "path": "1"
    },
    "2253": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "POP",
      "path": "1"
    },
    "2254": {
      "fn": "ERC721A.safeTransferFrom",
      "offset": [
        8294,
        8638
      ],
      "op": "POP",
      "path": "1"
    },
    "2255": {
      "fn": "ERC721A.safeTransferFrom",
      "jump": "o",
      "offset": [
        8294,
        8638
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2256": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2257": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5875,
        5888
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2259": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5908,
        5924
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 31,
      "value": "0x8DD"
    },
    "2262": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5916,
        5923
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2263": {
      "fn": "ERC721A._exists",
      "offset": [
        8941,
        8945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2265": {
      "fn": "ERC721A._exists",
      "offset": [
        8974,
        8986
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2266": {
      "op": "GT"
    },
    "2267": {
      "fn": "ERC721A._exists",
      "offset": [
        8964,
        8986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2268": {
      "fn": "ERC721A._exists",
      "offset": [
        8884,
        8993
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2269": {
      "branch": 70,
      "fn": "ERC721A.tokenURI",
      "offset": [
        5908,
        5924
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2270": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x941"
    },
    "2273": {
      "branch": 70,
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2274": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2276": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2283": {
      "op": "SHL"
    },
    "2284": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2285": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2288": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2290": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2291": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "ADD",
      "path": "1"
    },
    "2292": {
      "op": "MSTORE"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2297": {
      "op": "DUP3"
    },
    "2298": {
      "op": "ADD"
    },
    "2299": {
      "op": "MSTORE"
    },
    "2300": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2335": {
      "op": "DUP3"
    },
    "2336": {
      "op": "ADD"
    },
    "2337": {
      "op": "MSTORE"
    },
    "2338": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "2356": {
      "op": "SHL"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2359": {
      "op": "DUP3"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "MSTORE"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2364": {
      "op": "ADD"
    },
    "2365": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2368": {
      "op": "JUMP"
    },
    "2369": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5900,
        5976
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2370": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5987,
        6008
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2372": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6011,
        6021
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x958"
    },
    "2375": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 32,
      "value": "0x40"
    },
    "2377": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2378": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2379": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2381": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2382": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "ADD",
      "path": "1"
    },
    "2383": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2384": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2385": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2388": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2389": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2390": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6448,
        6457
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2391": {
      "fn": "ERC721A._baseURI",
      "offset": [
        6372,
        6464
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2392": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6011,
        6021
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2393": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5987,
        6021
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2394": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5987,
        6021
      ],
      "op": "POP",
      "path": "1"
    },
    "2395": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6062,
        6063
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x0"
    },
    "2397": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6044,
        6051
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2398": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6059
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2399": {
      "branch": 71,
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6063
      ],
      "op": "GT",
      "path": "1"
    },
    "2400": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x978"
    },
    "2403": {
      "branch": 71,
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2404": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2406": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2407": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2408": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2410": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "ADD",
      "path": "1"
    },
    "2411": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2413": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2414": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2415": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2417": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2418": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2419": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "POP",
      "path": "1"
    },
    "2420": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9A3"
    },
    "2423": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2424": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2425": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6090,
        6097
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2426": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6099,
        6117
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x982"
    },
    "2429": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6099,
        6106
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2430": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6099,
        6115
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2B"
    },
    "2433": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        6099,
        6117
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2434": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6099,
        6117
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2435": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2437": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2438": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2440": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "ADD",
      "path": "1"
    },
    "2441": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x993"
    },
    "2444": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2445": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2446": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2447": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13A0"
    },
    "2450": {
      "fn": "ERC721A.tokenURI",
      "jump": "i",
      "offset": [
        6073,
        6118
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2451": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2452": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2454": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2455": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2457": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2458": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2459": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SUB",
      "path": "1"
    },
    "2460": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SUB",
      "path": "1"
    },
    "2461": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2462": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2463": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2464": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2466": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6073,
        6118
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2467": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6038,
        6124
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2468": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        6031,
        6124
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2469": {
      "fn": "ERC721A.tokenURI",
      "offset": [
        5802,
        6131
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2470": {
      "op": "POP"
    },
    "2471": {
      "op": "POP"
    },
    "2472": {
      "op": "POP"
    },
    "2473": {
      "fn": "ERC721A.tokenURI",
      "jump": "o",
      "offset": [
        5802,
        6131
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2474": {
      "fn": "ERC721A._approve",
      "offset": [
        12817,
        13006
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2475": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0x0"
    },
    "2477": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2478": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2479": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2480": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12942
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2482": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2484": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2485": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2487": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2488": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2489": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2490": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2491": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "op": "NOT"
    },
    "2501": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "AND",
      "path": "1"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2504": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2506": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2508": {
      "op": "SHL"
    },
    "2509": {
      "op": "SUB"
    },
    "2510": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2511": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2512": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "AND",
      "path": "1"
    },
    "2513": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2514": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2515": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "OR",
      "path": "1"
    },
    "2516": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2517": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2518": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12956
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2519": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 35
    },
    "2520": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2521": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2522": {
      "fn": "ERC721A._approve",
      "offset": [
        12927,
        12951
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2523": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2524": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2525": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "AND",
      "path": "1"
    },
    "2526": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2527": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2560": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2561": {
      "fn": "ERC721A._approve",
      "offset": [
        12971,
        12999
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2562": {
      "fn": "ERC721A._approve",
      "offset": [
        12817,
        13006
      ],
      "op": "POP",
      "path": "1"
    },
    "2563": {
      "fn": "ERC721A._approve",
      "offset": [
        12817,
        13006
      ],
      "op": "POP",
      "path": "1"
    },
    "2564": {
      "fn": "ERC721A._approve",
      "offset": [
        12817,
        13006
      ],
      "op": "POP",
      "path": "1"
    },
    "2565": {
      "fn": "ERC721A._approve",
      "jump": "o",
      "offset": [
        12817,
        13006
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2566": {
      "fn": "ERC721A._transfer",
      "offset": [
        10964,
        12706
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2567": {
      "fn": "ERC721A._transfer",
      "offset": [
        11074,
        11109
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2569": {
      "fn": "ERC721A._transfer",
      "offset": [
        11112,
        11132
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA11"
    },
    "2572": {
      "fn": "ERC721A._transfer",
      "offset": [
        11124,
        11131
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2573": {
      "fn": "ERC721A._transfer",
      "offset": [
        11112,
        11123
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4C"
    },
    "2576": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        11112,
        11132
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2577": {
      "fn": "ERC721A._transfer",
      "offset": [
        11112,
        11132
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2578": {
      "fn": "ERC721A._transfer",
      "offset": [
        11185,
        11203
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2579": {
      "fn": "ERC721A._transfer",
      "offset": [
        11185,
        11203
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2580": {
      "fn": "ERC721A._transfer",
      "offset": [
        11074,
        11132
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2581": {
      "fn": "ERC721A._transfer",
      "offset": [
        11074,
        11132
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2582": {
      "op": "POP"
    },
    "2583": {
      "fn": "ERC721A._transfer",
      "offset": [
        11143,
        11165
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2585": {
      "fn": "ERC721A._transfer",
      "offset": [
        11143,
        11165
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2590": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2592": {
      "op": "SHL"
    },
    "2593": {
      "op": "SUB"
    },
    "2594": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11203
      ],
      "op": "AND",
      "path": "1"
    },
    "2595": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2602": {
      "op": "SHL"
    },
    "2603": {
      "op": "SUB"
    },
    "2604": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11203
      ],
      "op": "AND",
      "path": "1"
    },
    "2605": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11203
      ],
      "op": "EQ",
      "path": "1"
    },
    "2606": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11255
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2607": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11255
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA48"
    },
    "2610": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11255
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2611": {
      "op": "POP"
    },
    "2612": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2613": {
      "fn": "ERC721A._transfer",
      "offset": [
        11219,
        11239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA3D"
    },
    "2616": {
      "fn": "ERC721A._transfer",
      "offset": [
        11231,
        11238
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2617": {
      "fn": "ERC721A._transfer",
      "offset": [
        11219,
        11230
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x382"
    },
    "2620": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        11219,
        11239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2621": {
      "fn": "ERC721A._transfer",
      "offset": [
        11219,
        11239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2628": {
      "op": "SHL"
    },
    "2629": {
      "op": "SUB"
    },
    "2630": {
      "fn": "ERC721A._transfer",
      "offset": [
        11219,
        11255
      ],
      "op": "AND",
      "path": "1"
    },
    "2631": {
      "fn": "ERC721A._transfer",
      "offset": [
        11219,
        11255
      ],
      "op": "EQ",
      "path": "1"
    },
    "2632": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11255
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2633": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11321
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2634": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5A"
    },
    "2637": {
      "fn": "ERC721A._transfer",
      "offset": [
        11169,
        11321
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2638": {
      "op": "POP"
    },
    "2639": {
      "fn": "ERC721A._transfer",
      "offset": [
        11288,
        11306
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2640": {
      "fn": "ERC721A._transfer",
      "offset": [
        11288,
        11306
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2641": {
      "fn": "ERC721A._transfer",
      "offset": [
        11271,
        11321
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA5A"
    },
    "2644": {
      "fn": "ERC721A._transfer",
      "offset": [
        11271,
        11321
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2645": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "2646": {
      "fn": "ERC721A.isApprovedForAll",
      "offset": [
        7611,
        7773
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "2649": {
      "fn": "ERC721A.isApprovedForAll",
      "jump": "i",
      "offset": [
        7611,
        7773
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2650": {
      "fn": "ERC721A._transfer",
      "offset": [
        11271,
        11321
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2651": {
      "fn": "ERC721A._transfer",
      "offset": [
        11143,
        11322
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2652": {
      "fn": "ERC721A._transfer",
      "offset": [
        11143,
        11322
      ],
      "op": "POP",
      "path": "1"
    },
    "2653": {
      "branch": 72,
      "fn": "ERC721A._transfer",
      "offset": [
        11341,
        11358
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 36
    },
    "2654": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC4"
    },
    "2657": {
      "branch": 72,
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2658": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2660": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2669": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2672": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2674": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2675": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "ADD",
      "path": "1"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH32",
      "value": "0x455243373231413A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2743": {
      "op": "SHL"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2746": {
      "op": "DUP3"
    },
    "2747": {
      "op": "ADD"
    },
    "2748": {
      "op": "MSTORE"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2751": {
      "op": "ADD"
    },
    "2752": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2755": {
      "op": "JUMP"
    },
    "2756": {
      "fn": "ERC721A._transfer",
      "offset": [
        11333,
        11413
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2757": {
      "fn": "ERC721A._transfer",
      "offset": [
        11454,
        11458
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 37
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2764": {
      "op": "SHL"
    },
    "2765": {
      "op": "SUB"
    },
    "2766": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11458
      ],
      "op": "AND",
      "path": "1"
    },
    "2767": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11445
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2768": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11450
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2770": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11450
      ],
      "op": "ADD",
      "path": "1"
    },
    "2771": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11450
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2778": {
      "op": "SHL"
    },
    "2779": {
      "op": "SUB"
    },
    "2780": {
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11458
      ],
      "op": "AND",
      "path": "1"
    },
    "2781": {
      "branch": 73,
      "fn": "ERC721A._transfer",
      "offset": [
        11432,
        11458
      ],
      "op": "EQ",
      "path": "1"
    },
    "2782": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB38"
    },
    "2785": {
      "branch": 73,
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2786": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2788": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2789": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2795": {
      "op": "SHL"
    },
    "2796": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2797": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2800": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2802": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2803": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "ADD",
      "path": "1"
    },
    "2804": {
      "op": "MSTORE"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2809": {
      "op": "DUP3"
    },
    "2810": {
      "op": "ADD"
    },
    "2811": {
      "op": "MSTORE"
    },
    "2812": {
      "op": "PUSH32",
      "value": "0x455243373231413A207472616E736665722066726F6D20696E636F7272656374"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2847": {
      "op": "DUP3"
    },
    "2848": {
      "op": "ADD"
    },
    "2849": {
      "op": "MSTORE"
    },
    "2850": {
      "op": "PUSH6",
      "value": "0x1037BBB732B9"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0xD1"
    },
    "2859": {
      "op": "SHL"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2862": {
      "op": "DUP3"
    },
    "2863": {
      "op": "ADD"
    },
    "2864": {
      "op": "MSTORE"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2867": {
      "op": "ADD"
    },
    "2868": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2871": {
      "op": "JUMP"
    },
    "2872": {
      "fn": "ERC721A._transfer",
      "offset": [
        11424,
        11501
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2879": {
      "op": "SHL"
    },
    "2880": {
      "op": "SUB"
    },
    "2881": {
      "fn": "ERC721A._transfer",
      "offset": [
        11519,
        11535
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 38
    },
    "2882": {
      "branch": 74,
      "fn": "ERC721A._transfer",
      "offset": [
        11519,
        11535
      ],
      "op": "AND",
      "path": "1"
    },
    "2883": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9C"
    },
    "2886": {
      "branch": 74,
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2887": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2889": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2890": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2896": {
      "op": "SHL"
    },
    "2897": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2898": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2901": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2903": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2904": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "ADD",
      "path": "1"
    },
    "2905": {
      "op": "MSTORE"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2910": {
      "op": "DUP3"
    },
    "2911": {
      "op": "ADD"
    },
    "2912": {
      "op": "MSTORE"
    },
    "2913": {
      "op": "PUSH32",
      "value": "0x455243373231413A207472616E7366657220746F20746865207A65726F206164"
    },
    "2946": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2948": {
      "op": "DUP3"
    },
    "2949": {
      "op": "ADD"
    },
    "2950": {
      "op": "MSTORE"
    },
    "2951": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2959": {
      "op": "SHL"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2962": {
      "op": "DUP3"
    },
    "2963": {
      "op": "ADD"
    },
    "2964": {
      "op": "MSTORE"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2967": {
      "op": "ADD"
    },
    "2968": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "2971": {
      "op": "JUMP"
    },
    "2972": {
      "fn": "ERC721A._transfer",
      "offset": [
        11511,
        11577
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2973": {
      "fn": "ERC721A._transfer",
      "offset": [
        11693,
        11742
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xBAC"
    },
    "2976": {
      "fn": "ERC721A._transfer",
      "offset": [
        11710,
        11711
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2978": {
      "fn": "ERC721A._transfer",
      "offset": [
        11714,
        11721
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2979": {
      "fn": "ERC721A._transfer",
      "offset": [
        11723,
        11736
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2980": {
      "fn": "ERC721A._transfer",
      "offset": [
        11723,
        11741
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2982": {
      "fn": "ERC721A._transfer",
      "offset": [
        11723,
        11741
      ],
      "op": "ADD",
      "path": "1"
    },
    "2983": {
      "fn": "ERC721A._transfer",
      "offset": [
        11723,
        11741
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2984": {
      "fn": "ERC721A._transfer",
      "offset": [
        11693,
        11701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9AA"
    },
    "2987": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        11693,
        11742
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2988": {
      "fn": "ERC721A._transfer",
      "offset": [
        11693,
        11742
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "op": "SUB"
    },
    "2997": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP6",
      "path": "1",
      "statement": 40
    },
    "2998": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2999": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "AND",
      "path": "1"
    },
    "3000": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3002": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3003": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3004": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3005": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11954
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3007": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3009": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3010": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3011": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3012": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3014": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3015": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3016": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3017": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3018": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3019": {
      "op": "PUSH16",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3036": {
      "op": "NOT"
    },
    "3037": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3038": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3039": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "AND",
      "path": "1"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3046": {
      "op": "SHL"
    },
    "3047": {
      "op": "SUB"
    },
    "3048": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3049": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3050": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "AND",
      "path": "1"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3053": {
      "op": "NOT"
    },
    "3054": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "ADD",
      "path": "1"
    },
    "3055": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3056": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "AND",
      "path": "1"
    },
    "3057": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "OR",
      "path": "1"
    },
    "3058": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3059": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3060": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11973
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3061": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP10",
      "path": "1",
      "statement": 41
    },
    "3062": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3063": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "AND",
      "path": "1"
    },
    "3064": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3065": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3066": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3067": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3068": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3069": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12003
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3070": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3071": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3072": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3073": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3074": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "AND",
      "path": "1"
    },
    "3075": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3076": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3077": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "AND",
      "path": "1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3080": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3081": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3082": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "ADD",
      "path": "1"
    },
    "3083": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3084": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3085": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "AND",
      "path": "1"
    },
    "3086": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3087": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3088": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3089": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "OR",
      "path": "1"
    },
    "3090": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3091": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3092": {
      "fn": "ERC721A._transfer",
      "offset": [
        11987,
        12016
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3093": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 42
    },
    "3094": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3095": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3096": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3097": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "ADD",
      "path": "1"
    },
    "3098": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3099": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3100": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3101": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3102": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3103": {
      "fn": "ERC721A._transfer",
      "offset": [
        12086,
        12101
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "3104": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3113": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3114": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3115": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "AND",
      "path": "1"
    },
    "3116": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3117": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3118": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "ADD",
      "path": "1"
    },
    "3119": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3120": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3121": {
      "fn": "ERC721A._transfer",
      "offset": [
        12060,
        12103
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3122": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP11",
      "path": "1"
    },
    "3123": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3124": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3125": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12048
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3127": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3128": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3129": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3130": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3131": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3132": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3133": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3134": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3135": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3136": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3137": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3138": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3139": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "3140": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "AND",
      "path": "1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3145": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3147": {
      "op": "SHL"
    },
    "3148": {
      "op": "SUB"
    },
    "3149": {
      "op": "NOT"
    },
    "3150": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3151": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3152": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "AND",
      "path": "1"
    },
    "3153": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3154": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3155": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3156": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "OR",
      "path": "1"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3161": {
      "op": "SHL"
    },
    "3162": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "3163": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3164": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3165": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "AND",
      "path": "1"
    },
    "3166": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3167": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3168": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3169": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "MUL",
      "path": "1"
    },
    "3170": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "OR",
      "path": "1"
    },
    "3171": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3172": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3173": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12103
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3174": {
      "fn": "ERC721A._transfer",
      "offset": [
        11942,
        11960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3175": {
      "fn": "ERC721A._transfer",
      "offset": [
        12361,
        12372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC71"
    },
    "3178": {
      "fn": "ERC721A._transfer",
      "offset": [
        12361,
        12372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3179": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3180": {
      "fn": "ERC721A._transfer",
      "offset": [
        12037,
        12057
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3181": {
      "fn": "ERC721A._transfer",
      "offset": [
        12361,
        12372
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13CF"
    },
    "3184": {
      "fn": "ERC721A._transfer",
      "jump": "i",
      "offset": [
        12361,
        12372
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3185": {
      "fn": "ERC721A._transfer",
      "offset": [
        12361,
        12372
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3186": {
      "fn": "ERC721A._transfer",
      "offset": [
        12427,
        12428
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3188": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3189": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3190": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3191": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12397
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3193": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3195": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3196": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3198": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3199": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12410
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3200": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12415
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3201": {
      "fn": "ERC721A._transfer",
      "offset": [
        12339,
        12372
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3202": {
      "fn": "ERC721A._transfer",
      "offset": [
        12339,
        12372
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3203": {
      "op": "POP"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3210": {
      "op": "SHL"
    },
    "3211": {
      "op": "SUB"
    },
    "3212": {
      "fn": "ERC721A._transfer",
      "offset": [
        12386,
        12415
      ],
      "op": "AND",
      "path": "1"
    },
    "3213": {
      "fn": "ERC721A._transfer",
      "offset": [
        12382,
        12605
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD03"
    },
    "3216": {
      "fn": "ERC721A._transfer",
      "offset": [
        12382,
        12605
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3217": {
      "fn": "ERC721A._transfer",
      "offset": [
        12449,
        12469
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9B"
    },
    "3220": {
      "fn": "ERC721A._transfer",
      "offset": [
        12457,
        12468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3221": {
      "fn": "ERC721A._exists",
      "offset": [
        8941,
        8945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3223": {
      "fn": "ERC721A._exists",
      "offset": [
        8974,
        8986
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3224": {
      "op": "GT"
    },
    "3225": {
      "fn": "ERC721A._exists",
      "offset": [
        8964,
        8986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3226": {
      "fn": "ERC721A._exists",
      "offset": [
        8884,
        8993
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3227": {
      "branch": 75,
      "fn": "ERC721A._transfer",
      "offset": [
        12449,
        12469
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3228": {
      "fn": "ERC721A._transfer",
      "offset": [
        12445,
        12595
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3229": {
      "fn": "ERC721A._transfer",
      "offset": [
        12445,
        12595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD03"
    },
    "3232": {
      "branch": 75,
      "fn": "ERC721A._transfer",
      "offset": [
        12445,
        12595
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3233": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 43,
      "value": "0x40"
    },
    "3235": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3236": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3237": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3238": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3239": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "ADD",
      "path": "1"
    },
    "3240": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3241": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3242": {
      "fn": "ERC721A._transfer",
      "offset": [
        12531,
        12549
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3243": {
      "fn": "ERC721A._transfer",
      "offset": [
        12531,
        12549
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3250": {
      "op": "SHL"
    },
    "3251": {
      "op": "SUB"
    },
    "3252": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3253": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3254": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "AND",
      "path": "1"
    },
    "3255": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3256": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3257": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3259": {
      "fn": "ERC721A._transfer",
      "offset": [
        12551,
        12579
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3260": {
      "fn": "ERC721A._transfer",
      "offset": [
        12551,
        12579
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3261": {
      "fn": "ERC721A._transfer",
      "offset": [
        12551,
        12579
      ],
      "op": "ADD",
      "path": "1"
    },
    "3262": {
      "fn": "ERC721A._transfer",
      "offset": [
        12551,
        12579
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3263": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3272": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3273": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3274": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "AND",
      "path": "1"
    },
    "3275": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3276": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3277": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "ADD",
      "path": "1"
    },
    "3278": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3279": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3280": {
      "fn": "ERC721A._transfer",
      "offset": [
        12516,
        12580
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3283": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3284": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3285": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3286": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3288": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3289": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3290": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3291": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3292": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3293": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3294": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12513
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3295": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3296": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3297": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3298": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3299": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3300": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3301": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3302": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3303": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "AND",
      "path": "1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "MUL",
      "path": "1"
    },
    "3310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3316": {
      "op": "SHL"
    },
    "3317": {
      "op": "SUB"
    },
    "3318": {
      "op": "NOT"
    },
    "3319": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3320": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3321": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "AND",
      "path": "1"
    },
    "3322": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3323": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "AND",
      "path": "1"
    },
    "3324": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "OR",
      "path": "1"
    },
    "3325": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3326": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3327": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3328": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "OR",
      "path": "1"
    },
    "3329": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3330": {
      "fn": "ERC721A._transfer",
      "offset": [
        12489,
        12580
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3331": {
      "fn": "ERC721A._transfer",
      "offset": [
        12445,
        12595
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3332": {
      "fn": "ERC721A._transfer",
      "offset": [
        12639,
        12646
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 44
    },
    "3333": {
      "fn": "ERC721A._transfer",
      "offset": [
        12635,
        12637
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "AND",
      "path": "1"
    },
    "3343": {
      "fn": "ERC721A._transfer",
      "offset": [
        12629,
        12633
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3350": {
      "op": "SHL"
    },
    "3351": {
      "op": "SUB"
    },
    "3352": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "AND",
      "path": "1"
    },
    "3353": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3386": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3388": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3389": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3391": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3392": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3393": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3394": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "SUB",
      "path": "1"
    },
    "3395": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3396": {
      "fn": "ERC721A._transfer",
      "offset": [
        12620,
        12647
      ],
      "op": "LOG4",
      "path": "1"
    },
    "3397": {
      "fn": "ERC721A._transfer",
      "offset": [
        11064,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3398": {
      "fn": "ERC721A._transfer",
      "offset": [
        11064,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3399": {
      "fn": "ERC721A._transfer",
      "offset": [
        11064,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3400": {
      "fn": "ERC721A._transfer",
      "offset": [
        10964,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3401": {
      "fn": "ERC721A._transfer",
      "offset": [
        10964,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3402": {
      "fn": "ERC721A._transfer",
      "offset": [
        10964,
        12706
      ],
      "op": "POP",
      "path": "1"
    },
    "3403": {
      "fn": "ERC721A._transfer",
      "jump": "o",
      "offset": [
        10964,
        12706
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3404": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4770,
        5231
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3407": {
      "op": "DUP1"
    },
    "3408": {
      "op": "MLOAD"
    },
    "3409": {
      "op": "DUP1"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "ADD"
    },
    "3412": {
      "op": "SWAP1"
    },
    "3413": {
      "op": "SWAP2"
    },
    "3414": {
      "op": "MSTORE"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3417": {
      "op": "DUP1"
    },
    "3418": {
      "op": "DUP3"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3422": {
      "op": "DUP3"
    },
    "3423": {
      "op": "ADD"
    },
    "3424": {
      "op": "MSTORE"
    },
    "3425": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4872,
        4888
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 45,
      "value": "0xD6B"
    },
    "3428": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4880,
        4887
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3429": {
      "fn": "ERC721A._exists",
      "offset": [
        8941,
        8945
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3431": {
      "fn": "ERC721A._exists",
      "offset": [
        8974,
        8986
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3432": {
      "op": "GT"
    },
    "3433": {
      "fn": "ERC721A._exists",
      "offset": [
        8964,
        8986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3434": {
      "fn": "ERC721A._exists",
      "offset": [
        8884,
        8993
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3435": {
      "branch": 76,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4872,
        4888
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3436": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDCA"
    },
    "3439": {
      "branch": 76,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3440": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3442": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3443": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3447": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3449": {
      "op": "SHL"
    },
    "3450": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3451": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3454": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3456": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3457": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "ADD",
      "path": "1"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "3461": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3463": {
      "op": "DUP3"
    },
    "3464": {
      "op": "ADD"
    },
    "3465": {
      "op": "MSTORE"
    },
    "3466": {
      "op": "PUSH32",
      "value": "0x455243373231413A206F776E657220717565727920666F72206E6F6E65786973"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "ADD"
    },
    "3503": {
      "op": "MSTORE"
    },
    "3504": {
      "op": "PUSH10",
      "value": "0x3A32B73A103A37B5B2B7"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3520": {
      "op": "DUP3"
    },
    "3521": {
      "op": "ADD"
    },
    "3522": {
      "op": "MSTORE"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "3529": {
      "op": "JUMP"
    },
    "3530": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4864,
        4935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3531": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4966,
        4973
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3532": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4946,
        5157
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3533": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3535": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3536": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3537": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3538": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3540": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3542": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3543": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3544": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3545": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3547": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3548": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3549": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3550": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5033,
        5050
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3551": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3552": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3553": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3554": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3555": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "ADD",
      "path": "1"
    },
    "3556": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3557": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3558": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3559": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3566": {
      "op": "SHL"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3569": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "AND",
      "path": "1"
    },
    "3570": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3571": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3572": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3577": {
      "op": "SHL"
    },
    "3578": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3579": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3580": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DIV",
      "path": "1"
    },
    "3581": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3590": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "AND",
      "path": "1"
    },
    "3591": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3592": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3593": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "ADD",
      "path": "1"
    },
    "3594": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3595": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3596": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3597": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4999,
        5050
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3598": {
      "branch": 77,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5068,
        5096
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3599": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5064,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE19"
    },
    "3602": {
      "branch": 77,
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5064,
        5147
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3603": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5123,
        5132
      ],
      "op": "SWAP4",
      "path": "1",
      "statement": 46
    },
    "3604": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4770,
        5231
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3605": {
      "op": "POP"
    },
    "3606": {
      "op": "POP"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "fn": "ERC721A.ownershipOf",
      "jump": "o",
      "offset": [
        4770,
        5231
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3609": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        5064,
        5147
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3610": {
      "op": "POP"
    },
    "3611": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 47
    },
    "3612": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE24"
    },
    "3615": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3616": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13E7"
    },
    "3619": {
      "fn": "ERC721A.ownershipOf",
      "jump": "i",
      "offset": [
        4977,
        4983
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3620": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3621": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3622": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "POP",
      "path": "1"
    },
    "3623": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4977,
        4983
      ],
      "op": "POP",
      "path": "1"
    },
    "3624": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4946,
        5157
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDCC"
    },
    "3627": {
      "fn": "ERC721A.ownershipOf",
      "offset": [
        4946,
        5157
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3628": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3629": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13709,
        13713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3637": {
      "op": "SHL"
    },
    "3638": {
      "op": "SUB"
    },
    "3639": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13729,
        13742
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3640": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13729,
        13742
      ],
      "op": "AND",
      "path": "1"
    },
    "3641": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "3642": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "12",
      "statement": 48
    },
    "3643": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13725,
        14336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF1F"
    },
    "3646": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13725,
        14336
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3647": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3649": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3650": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3657": {
      "op": "SHL"
    },
    "3658": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3659": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3666": {
      "op": "SHL"
    },
    "3667": {
      "op": "SUB"
    },
    "3668": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13800
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3669": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13800
      ],
      "op": "AND",
      "path": "1"
    },
    "3670": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3671": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13800
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "3676": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13800
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3677": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE70"
    },
    "3680": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3681": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "13"
    },
    "3682": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3683": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13815,
        13819
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3684": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13815,
        13819
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3685": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13821,
        13828
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3686": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13821,
        13828
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3687": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13830,
        13835
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3688": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13830,
        13835
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3689": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3691": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "ADD",
      "path": "1"
    },
    "3692": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13FE"
    },
    "3695": {
      "fn": "ERC721A._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3696": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3697": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3699": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3701": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3702": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3703": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3704": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SUB",
      "path": "1"
    },
    "3705": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3706": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3708": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3709": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "GAS",
      "path": "1"
    },
    "3710": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "CALL",
      "path": "1"
    },
    "3711": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3712": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "POP",
      "path": "1"
    },
    "3713": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "POP",
      "path": "1"
    },
    "3714": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "POP",
      "path": "1"
    },
    "3715": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3716": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3717": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAB"
    },
    "3720": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3724": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3725": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3726": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3728": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3729": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3730": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3731": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "ADD",
      "path": "1"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3734": {
      "op": "NOT"
    },
    "3735": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "AND",
      "path": "1"
    },
    "3736": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3737": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "ADD",
      "path": "1"
    },
    "3738": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3739": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3740": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3741": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA8"
    },
    "3744": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3745": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3746": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "ADD",
      "path": "1"
    },
    "3747": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3748": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x143B"
    },
    "3751": {
      "fn": "ERC721A._checkOnERC721Received",
      "jump": "i",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3752": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3753": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3755": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13764,
        13836
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3756": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF05"
    },
    "3759": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3760": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3761": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3762": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3763": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3764": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xED9"
    },
    "3767": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3768": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3770": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3771": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3772": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "POP",
      "path": "1"
    },
    "3773": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3775": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "NOT",
      "path": "1"
    },
    "3776": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "3778": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3779": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "ADD",
      "path": "1"
    },
    "3780": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "AND",
      "path": "1"
    },
    "3781": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3782": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "ADD",
      "path": "1"
    },
    "3783": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3785": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3786": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3787": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3788": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3789": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3790": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3792": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3794": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3795": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "ADD",
      "path": "1"
    },
    "3796": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3797": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEDE"
    },
    "3800": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3801": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3802": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3804": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3805": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "POP",
      "path": "1"
    },
    "3806": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3807": {
      "op": "POP"
    },
    "3808": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14007,
        14020
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3809": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14007,
        14020
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3810": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14003,
        14270
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFD"
    },
    "3813": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14003,
        14270
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3814": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x40"
    },
    "3816": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3823": {
      "op": "SHL"
    },
    "3824": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3825": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3826": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3828": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "ADD",
      "path": "1"
    },
    "3829": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "3832": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3833": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14049,
        14110
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x134D"
    },
    "3836": {
      "fn": "ERC721A._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14049,
        14110
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3837": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14003,
        14270
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3838": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14222,
        14228
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3839": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14216,
        14229
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3840": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14207,
        14213
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3841": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14203,
        14205
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3843": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14199,
        14214
      ],
      "op": "ADD",
      "path": "1"
    },
    "3844": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14192,
        14230
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3845": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13760,
        14284
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3850": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3852": {
      "op": "SHL"
    },
    "3853": {
      "op": "SUB"
    },
    "3854": {
      "op": "NOT"
    },
    "3855": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13886,
        13941
      ],
      "op": "AND",
      "path": "1",
      "statement": 50
    },
    "3856": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3863": {
      "op": "SHL"
    },
    "3864": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13886,
        13941
      ],
      "op": "EQ",
      "path": "1"
    },
    "3865": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13886,
        13941
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3866": {
      "op": "POP"
    },
    "3867": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13879,
        13941
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF23"
    },
    "3870": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13879,
        13941
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3871": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13725,
        14336
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3872": {
      "op": "POP"
    },
    "3873": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        14321,
        14325
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 51,
      "value": "0x1"
    },
    "3875": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13725,
        14336
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3876": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3877": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3878": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "POP",
      "path": "1"
    },
    "3879": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "POP",
      "path": "1"
    },
    "3880": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "POP",
      "path": "1"
    },
    "3881": {
      "fn": "ERC721A._checkOnERC721Received",
      "offset": [
        13559,
        14342
      ],
      "op": "POP",
      "path": "1"
    },
    "3882": {
      "fn": "ERC721A._checkOnERC721Received",
      "jump": "o",
      "offset": [
        13559,
        14342
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3883": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3884": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "3886": {
      "branch": 78,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3887": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF4F"
    },
    "3890": {
      "branch": 78,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3891": {
      "op": "POP"
    },
    "3892": {
      "op": "POP"
    },
    "3893": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 52,
      "value": "0x40"
    },
    "3895": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3896": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3897": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3898": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3899": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "14"
    },
    "3900": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3901": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3902": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3903": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "3905": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3906": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "3914": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3915": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "14"
    },
    "3916": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3917": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3918": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3919": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3920": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3921": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3923": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3924": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3925": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3926": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF79"
    },
    "3929": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3930": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "14",
      "statement": 53
    },
    "3931": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF63"
    },
    "3934": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3935": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1332"
    },
    "3938": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3939": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3940": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3941": {
      "op": "POP"
    },
    "3942": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 54,
      "value": "0xF72"
    },
    "3945": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3946": {
      "op": "POP"
    },
    "3947": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "3949": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "14"
    },
    "3950": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x146E"
    },
    "3953": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3954": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3955": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3956": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "14"
    },
    "3957": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF53"
    },
    "3960": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3961": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3962": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3964": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3965": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "14",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3974": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "14"
    },
    "3975": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "14"
    },
    "3976": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3977": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF94"
    },
    "3980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF94"
    },
    "3984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x11BC"
    },
    "3987": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3988": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3991": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3993": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3994": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "14"
    },
    "3995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "3996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3997": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "3999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "14"
    },
    "4000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1F"
    },
    "4002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "14"
    },
    "4003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "14"
    },
    "4004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4006": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "14"
    },
    "4007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "14"
    },
    "4009": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4013": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4014": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFBE"
    },
    "4017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4018": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4020": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4021": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "14"
    },
    "4022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4023": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4024": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "4025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "14"
    },
    "4027": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "14"
    },
    "4028": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "14"
    },
    "4032": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4033": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "14"
    },
    "4034": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4035": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4036": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4037": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xF23"
    },
    "4040": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4041": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 55,
      "value": "0xFD3"
    },
    "4044": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4046": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4047": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1482"
    },
    "4050": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4051": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4052": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4053": {
      "op": "POP"
    },
    "4054": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 56,
      "value": "0xFE0"
    },
    "4057": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "4059": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4060": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1499"
    },
    "4063": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4064": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4065": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFEB"
    },
    "4068": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4069": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x30"
    },
    "4071": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13CF"
    },
    "4074": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4076": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xF8"
    },
    "4078": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "14"
    },
    "4079": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4081": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4082": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4083": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4084": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "14"
    },
    "4085": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1000"
    },
    "4088": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1000"
    },
    "4092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x14AD"
    },
    "4095": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4097": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4099": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "14"
    },
    "4100": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "14"
    },
    "4101": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "op": "SUB"
    },
    "4110": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "14"
    },
    "4111": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "14"
    },
    "4112": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4113": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4116": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "14"
    },
    "4117": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "14"
    },
    "4119": {
      "op": "POP"
    },
    "4120": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 57,
      "value": "0x1022"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0xA"
    },
    "4125": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4126": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x146E"
    },
    "4129": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4130": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4131": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "4132": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "14"
    },
    "4133": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xFC2"
    },
    "4136": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4137": {
      "op": "JUMPDEST"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4144": {
      "op": "SHL"
    },
    "4145": {
      "op": "SUB"
    },
    "4146": {
      "op": "NOT"
    },
    "4147": {
      "op": "DUP2"
    },
    "4148": {
      "op": "AND"
    },
    "4149": {
      "op": "DUP2"
    },
    "4150": {
      "op": "EQ"
    },
    "4151": {
      "op": "PUSH2",
      "value": "0x103F"
    },
    "4154": {
      "op": "JUMPI"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "DUP1"
    },
    "4158": {
      "op": "REVERT"
    },
    "4159": {
      "op": "JUMPDEST"
    },
    "4160": {
      "op": "POP"
    },
    "4161": {
      "jump": "o",
      "op": "JUMP"
    },
    "4162": {
      "op": "JUMPDEST"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4165": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4167": {
      "op": "DUP3"
    },
    "4168": {
      "op": "DUP5"
    },
    "4169": {
      "op": "SUB"
    },
    "4170": {
      "op": "SLT"
    },
    "4171": {
      "op": "ISZERO"
    },
    "4172": {
      "op": "PUSH2",
      "value": "0x1054"
    },
    "4175": {
      "op": "JUMPI"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4178": {
      "op": "DUP1"
    },
    "4179": {
      "op": "REVERT"
    },
    "4180": {
      "op": "JUMPDEST"
    },
    "4181": {
      "op": "DUP2"
    },
    "4182": {
      "op": "CALLDATALOAD"
    },
    "4183": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "4186": {
      "op": "DUP2"
    },
    "4187": {
      "op": "PUSH2",
      "value": "0x1029"
    },
    "4190": {
      "jump": "i",
      "op": "JUMP"
    },
    "4191": {
      "op": "JUMPDEST"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4194": {
      "op": "JUMPDEST"
    },
    "4195": {
      "op": "DUP4"
    },
    "4196": {
      "op": "DUP2"
    },
    "4197": {
      "op": "LT"
    },
    "4198": {
      "op": "ISZERO"
    },
    "4199": {
      "op": "PUSH2",
      "value": "0x107A"
    },
    "4202": {
      "op": "JUMPI"
    },
    "4203": {
      "op": "DUP2"
    },
    "4204": {
      "op": "DUP2"
    },
    "4205": {
      "op": "ADD"
    },
    "4206": {
      "op": "MLOAD"
    },
    "4207": {
      "op": "DUP4"
    },
    "4208": {
      "op": "DUP3"
    },
    "4209": {
      "op": "ADD"
    },
    "4210": {
      "op": "MSTORE"
    },
    "4211": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4213": {
      "op": "ADD"
    },
    "4214": {
      "op": "PUSH2",
      "value": "0x1062"
    },
    "4217": {
      "op": "JUMP"
    },
    "4218": {
      "op": "JUMPDEST"
    },
    "4219": {
      "op": "DUP4"
    },
    "4220": {
      "op": "DUP2"
    },
    "4221": {
      "op": "GT"
    },
    "4222": {
      "op": "ISZERO"
    },
    "4223": {
      "op": "PUSH2",
      "value": "0x8CA"
    },
    "4226": {
      "op": "JUMPI"
    },
    "4227": {
      "op": "POP"
    },
    "4228": {
      "op": "POP"
    },
    "4229": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4231": {
      "op": "SWAP2"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "MSTORE"
    },
    "4234": {
      "jump": "o",
      "op": "JUMP"
    },
    "4235": {
      "op": "JUMPDEST"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "DUP2"
    },
    "4239": {
      "op": "MLOAD"
    },
    "4240": {
      "op": "DUP1"
    },
    "4241": {
      "op": "DUP5"
    },
    "4242": {
      "op": "MSTORE"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x10A3"
    },
    "4246": {
      "op": "DUP2"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4249": {
      "op": "DUP7"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4253": {
      "op": "DUP7"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "op": "PUSH2",
      "value": "0x105F"
    },
    "4258": {
      "jump": "i",
      "op": "JUMP"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4262": {
      "op": "ADD"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4265": {
      "op": "NOT"
    },
    "4266": {
      "op": "AND"
    },
    "4267": {
      "op": "SWAP3"
    },
    "4268": {
      "op": "SWAP1"
    },
    "4269": {
      "op": "SWAP3"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4273": {
      "op": "ADD"
    },
    "4274": {
      "op": "SWAP3"
    },
    "4275": {
      "op": "SWAP2"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "jump": "o",
      "op": "JUMP"
    },
    "4279": {
      "op": "JUMPDEST"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4282": {
      "op": "DUP2"
    },
    "4283": {
      "op": "MSTORE"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4286": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4291": {
      "op": "DUP4"
    },
    "4292": {
      "op": "ADD"
    },
    "4293": {
      "op": "DUP5"
    },
    "4294": {
      "op": "PUSH2",
      "value": "0x108B"
    },
    "4297": {
      "jump": "i",
      "op": "JUMP"
    },
    "4298": {
      "op": "JUMPDEST"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "DUP5"
    },
    "4305": {
      "op": "SUB"
    },
    "4306": {
      "op": "SLT"
    },
    "4307": {
      "op": "ISZERO"
    },
    "4308": {
      "op": "PUSH2",
      "value": "0x10DC"
    },
    "4311": {
      "op": "JUMPI"
    },
    "4312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4314": {
      "op": "DUP1"
    },
    "4315": {
      "op": "REVERT"
    },
    "4316": {
      "op": "JUMPDEST"
    },
    "4317": {
      "op": "POP"
    },
    "4318": {
      "op": "CALLDATALOAD"
    },
    "4319": {
      "op": "SWAP2"
    },
    "4320": {
      "op": "SWAP1"
    },
    "4321": {
      "op": "POP"
    },
    "4322": {
      "jump": "o",
      "op": "JUMP"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "DUP1"
    },
    "4325": {
      "op": "CALLDATALOAD"
    },
    "4326": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4332": {
      "op": "SHL"
    },
    "4333": {
      "op": "SUB"
    },
    "4334": {
      "op": "DUP2"
    },
    "4335": {
      "op": "AND"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "EQ"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10FA"
    },
    "4341": {
      "op": "JUMPI"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4344": {
      "op": "DUP1"
    },
    "4345": {
      "op": "REVERT"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "SWAP2"
    },
    "4348": {
      "op": "SWAP1"
    },
    "4349": {
      "op": "POP"
    },
    "4350": {
      "jump": "o",
      "op": "JUMP"
    },
    "4351": {
      "op": "JUMPDEST"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4354": {
      "op": "DUP1"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4357": {
      "op": "DUP4"
    },
    "4358": {
      "op": "DUP6"
    },
    "4359": {
      "op": "SUB"
    },
    "4360": {
      "op": "SLT"
    },
    "4361": {
      "op": "ISZERO"
    },
    "4362": {
      "op": "PUSH2",
      "value": "0x1112"
    },
    "4365": {
      "op": "JUMPI"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4368": {
      "op": "DUP1"
    },
    "4369": {
      "op": "REVERT"
    },
    "4370": {
      "op": "JUMPDEST"
    },
    "4371": {
      "op": "PUSH2",
      "value": "0x111B"
    },
    "4374": {
      "op": "DUP4"
    },
    "4375": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4378": {
      "jump": "i",
      "op": "JUMP"
    },
    "4379": {
      "op": "JUMPDEST"
    },
    "4380": {
      "op": "SWAP5"
    },
    "4381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4383": {
      "op": "SWAP4"
    },
    "4384": {
      "op": "SWAP1"
    },
    "4385": {
      "op": "SWAP4"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "CALLDATALOAD"
    },
    "4388": {
      "op": "SWAP4"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "op": "POP"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "jump": "o",
      "op": "JUMP"
    },
    "4393": {
      "op": "JUMPDEST"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4396": {
      "op": "DUP1"
    },
    "4397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4401": {
      "op": "DUP5"
    },
    "4402": {
      "op": "DUP7"
    },
    "4403": {
      "op": "SUB"
    },
    "4404": {
      "op": "SLT"
    },
    "4405": {
      "op": "ISZERO"
    },
    "4406": {
      "op": "PUSH2",
      "value": "0x113E"
    },
    "4409": {
      "op": "JUMPI"
    },
    "4410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4412": {
      "op": "DUP1"
    },
    "4413": {
      "op": "REVERT"
    },
    "4414": {
      "op": "JUMPDEST"
    },
    "4415": {
      "op": "PUSH2",
      "value": "0x1147"
    },
    "4418": {
      "op": "DUP5"
    },
    "4419": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4422": {
      "jump": "i",
      "op": "JUMP"
    },
    "4423": {
      "op": "JUMPDEST"
    },
    "4424": {
      "op": "SWAP3"
    },
    "4425": {
      "op": "POP"
    },
    "4426": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "DUP6"
    },
    "4432": {
      "op": "ADD"
    },
    "4433": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4436": {
      "jump": "i",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "SWAP2"
    },
    "4439": {
      "op": "POP"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4442": {
      "op": "DUP5"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "CALLDATALOAD"
    },
    "4445": {
      "op": "SWAP1"
    },
    "4446": {
      "op": "POP"
    },
    "4447": {
      "op": "SWAP3"
    },
    "4448": {
      "op": "POP"
    },
    "4449": {
      "op": "SWAP3"
    },
    "4450": {
      "op": "POP"
    },
    "4451": {
      "op": "SWAP3"
    },
    "4452": {
      "jump": "o",
      "op": "JUMP"
    },
    "4453": {
      "op": "JUMPDEST"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4458": {
      "op": "DUP3"
    },
    "4459": {
      "op": "DUP5"
    },
    "4460": {
      "op": "SUB"
    },
    "4461": {
      "op": "SLT"
    },
    "4462": {
      "op": "ISZERO"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x1177"
    },
    "4466": {
      "op": "JUMPI"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4469": {
      "op": "DUP1"
    },
    "4470": {
      "op": "REVERT"
    },
    "4471": {
      "op": "JUMPDEST"
    },
    "4472": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4479": {
      "jump": "i",
      "op": "JUMP"
    },
    "4480": {
      "op": "JUMPDEST"
    },
    "4481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4483": {
      "op": "DUP1"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4486": {
      "op": "DUP4"
    },
    "4487": {
      "op": "DUP6"
    },
    "4488": {
      "op": "SUB"
    },
    "4489": {
      "op": "SLT"
    },
    "4490": {
      "op": "ISZERO"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x1193"
    },
    "4494": {
      "op": "JUMPI"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4497": {
      "op": "DUP1"
    },
    "4498": {
      "op": "REVERT"
    },
    "4499": {
      "op": "JUMPDEST"
    },
    "4500": {
      "op": "PUSH2",
      "value": "0x119C"
    },
    "4503": {
      "op": "DUP4"
    },
    "4504": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4507": {
      "jump": "i",
      "op": "JUMP"
    },
    "4508": {
      "op": "JUMPDEST"
    },
    "4509": {
      "op": "SWAP2"
    },
    "4510": {
      "op": "POP"
    },
    "4511": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4513": {
      "op": "DUP4"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "CALLDATALOAD"
    },
    "4516": {
      "op": "DUP1"
    },
    "4517": {
      "op": "ISZERO"
    },
    "4518": {
      "op": "ISZERO"
    },
    "4519": {
      "op": "DUP2"
    },
    "4520": {
      "op": "EQ"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4524": {
      "op": "JUMPI"
    },
    "4525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4527": {
      "op": "DUP1"
    },
    "4528": {
      "op": "REVERT"
    },
    "4529": {
      "op": "JUMPDEST"
    },
    "4530": {
      "op": "DUP1"
    },
    "4531": {
      "op": "SWAP2"
    },
    "4532": {
      "op": "POP"
    },
    "4533": {
      "op": "POP"
    },
    "4534": {
      "op": "SWAP3"
    },
    "4535": {
      "op": "POP"
    },
    "4536": {
      "op": "SWAP3"
    },
    "4537": {
      "op": "SWAP1"
    },
    "4538": {
      "op": "POP"
    },
    "4539": {
      "jump": "o",
      "op": "JUMP"
    },
    "4540": {
      "op": "JUMPDEST"
    },
    "4541": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4548": {
      "op": "SHL"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4551": {
      "op": "MSTORE"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4561": {
      "op": "REVERT"
    },
    "4562": {
      "op": "JUMPDEST"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4565": {
      "op": "DUP1"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4568": {
      "op": "DUP1"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4571": {
      "op": "DUP6"
    },
    "4572": {
      "op": "DUP8"
    },
    "4573": {
      "op": "SUB"
    },
    "4574": {
      "op": "SLT"
    },
    "4575": {
      "op": "ISZERO"
    },
    "4576": {
      "op": "PUSH2",
      "value": "0x11E8"
    },
    "4579": {
      "op": "JUMPI"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4582": {
      "op": "DUP1"
    },
    "4583": {
      "op": "REVERT"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F1"
    },
    "4588": {
      "op": "DUP6"
    },
    "4589": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4592": {
      "jump": "i",
      "op": "JUMP"
    },
    "4593": {
      "op": "JUMPDEST"
    },
    "4594": {
      "op": "SWAP4"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "PUSH2",
      "value": "0x11FF"
    },
    "4599": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4601": {
      "op": "DUP7"
    },
    "4602": {
      "op": "ADD"
    },
    "4603": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4606": {
      "jump": "i",
      "op": "JUMP"
    },
    "4607": {
      "op": "JUMPDEST"
    },
    "4608": {
      "op": "SWAP3"
    },
    "4609": {
      "op": "POP"
    },
    "4610": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4612": {
      "op": "DUP6"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "CALLDATALOAD"
    },
    "4615": {
      "op": "SWAP2"
    },
    "4616": {
      "op": "POP"
    },
    "4617": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4619": {
      "op": "DUP6"
    },
    "4620": {
      "op": "ADD"
    },
    "4621": {
      "op": "CALLDATALOAD"
    },
    "4622": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4631": {
      "op": "DUP1"
    },
    "4632": {
      "op": "DUP3"
    },
    "4633": {
      "op": "GT"
    },
    "4634": {
      "op": "ISZERO"
    },
    "4635": {
      "op": "PUSH2",
      "value": "0x1223"
    },
    "4638": {
      "op": "JUMPI"
    },
    "4639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4641": {
      "op": "DUP1"
    },
    "4642": {
      "op": "REVERT"
    },
    "4643": {
      "op": "JUMPDEST"
    },
    "4644": {
      "op": "DUP2"
    },
    "4645": {
      "op": "DUP8"
    },
    "4646": {
      "op": "ADD"
    },
    "4647": {
      "op": "SWAP2"
    },
    "4648": {
      "op": "POP"
    },
    "4649": {
      "op": "DUP8"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4652": {
      "op": "DUP4"
    },
    "4653": {
      "op": "ADD"
    },
    "4654": {
      "op": "SLT"
    },
    "4655": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4658": {
      "op": "JUMPI"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4661": {
      "op": "DUP1"
    },
    "4662": {
      "op": "REVERT"
    },
    "4663": {
      "op": "JUMPDEST"
    },
    "4664": {
      "op": "DUP2"
    },
    "4665": {
      "op": "CALLDATALOAD"
    },
    "4666": {
      "op": "DUP2"
    },
    "4667": {
      "op": "DUP2"
    },
    "4668": {
      "op": "GT"
    },
    "4669": {
      "op": "ISZERO"
    },
    "4670": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4673": {
      "op": "JUMPI"
    },
    "4674": {
      "op": "PUSH2",
      "value": "0x1249"
    },
    "4677": {
      "op": "PUSH2",
      "value": "0x11BC"
    },
    "4680": {
      "jump": "i",
      "op": "JUMP"
    },
    "4681": {
      "op": "JUMPDEST"
    },
    "4682": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4684": {
      "op": "MLOAD"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4687": {
      "op": "DUP3"
    },
    "4688": {
      "op": "ADD"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4691": {
      "op": "NOT"
    },
    "4692": {
      "op": "SWAP1"
    },
    "4693": {
      "op": "DUP2"
    },
    "4694": {
      "op": "AND"
    },
    "4695": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4697": {
      "op": "ADD"
    },
    "4698": {
      "op": "AND"
    },
    "4699": {
      "op": "DUP2"
    },
    "4700": {
      "op": "ADD"
    },
    "4701": {
      "op": "SWAP1"
    },
    "4702": {
      "op": "DUP4"
    },
    "4703": {
      "op": "DUP3"
    },
    "4704": {
      "op": "GT"
    },
    "4705": {
      "op": "DUP2"
    },
    "4706": {
      "op": "DUP4"
    },
    "4707": {
      "op": "LT"
    },
    "4708": {
      "op": "OR"
    },
    "4709": {
      "op": "ISZERO"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4713": {
      "op": "JUMPI"
    },
    "4714": {
      "op": "PUSH2",
      "value": "0x1271"
    },
    "4717": {
      "op": "PUSH2",
      "value": "0x11BC"
    },
    "4720": {
      "jump": "i",
      "op": "JUMP"
    },
    "4721": {
      "op": "JUMPDEST"
    },
    "4722": {
      "op": "DUP2"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4725": {
      "op": "MSTORE"
    },
    "4726": {
      "op": "DUP3"
    },
    "4727": {
      "op": "DUP2"
    },
    "4728": {
      "op": "MSTORE"
    },
    "4729": {
      "op": "DUP11"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4732": {
      "op": "DUP5"
    },
    "4733": {
      "op": "DUP8"
    },
    "4734": {
      "op": "ADD"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "GT"
    },
    "4737": {
      "op": "ISZERO"
    },
    "4738": {
      "op": "PUSH2",
      "value": "0x128A"
    },
    "4741": {
      "op": "JUMPI"
    },
    "4742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4744": {
      "op": "DUP1"
    },
    "4745": {
      "op": "REVERT"
    },
    "4746": {
      "op": "JUMPDEST"
    },
    "4747": {
      "op": "DUP3"
    },
    "4748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4750": {
      "op": "DUP7"
    },
    "4751": {
      "op": "ADD"
    },
    "4752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4754": {
      "op": "DUP4"
    },
    "4755": {
      "op": "ADD"
    },
    "4756": {
      "op": "CALLDATACOPY"
    },
    "4757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4761": {
      "op": "DUP5"
    },
    "4762": {
      "op": "DUP4"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "op": "ADD"
    },
    "4765": {
      "op": "MSTORE"
    },
    "4766": {
      "op": "DUP1"
    },
    "4767": {
      "op": "SWAP6"
    },
    "4768": {
      "op": "POP"
    },
    "4769": {
      "op": "POP"
    },
    "4770": {
      "op": "POP"
    },
    "4771": {
      "op": "POP"
    },
    "4772": {
      "op": "POP"
    },
    "4773": {
      "op": "POP"
    },
    "4774": {
      "op": "SWAP3"
    },
    "4775": {
      "op": "SWAP6"
    },
    "4776": {
      "op": "SWAP2"
    },
    "4777": {
      "op": "SWAP5"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "SWAP3"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "jump": "o",
      "op": "JUMP"
    },
    "4782": {
      "op": "JUMPDEST"
    },
    "4783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4785": {
      "op": "DUP1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4788": {
      "op": "DUP4"
    },
    "4789": {
      "op": "DUP6"
    },
    "4790": {
      "op": "SUB"
    },
    "4791": {
      "op": "SLT"
    },
    "4792": {
      "op": "ISZERO"
    },
    "4793": {
      "op": "PUSH2",
      "value": "0x12C1"
    },
    "4796": {
      "op": "JUMPI"
    },
    "4797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4799": {
      "op": "DUP1"
    },
    "4800": {
      "op": "REVERT"
    },
    "4801": {
      "op": "JUMPDEST"
    },
    "4802": {
      "op": "PUSH2",
      "value": "0x12CA"
    },
    "4805": {
      "op": "DUP4"
    },
    "4806": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4809": {
      "jump": "i",
      "op": "JUMP"
    },
    "4810": {
      "op": "JUMPDEST"
    },
    "4811": {
      "op": "SWAP2"
    },
    "4812": {
      "op": "POP"
    },
    "4813": {
      "op": "PUSH2",
      "value": "0x12D8"
    },
    "4816": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4818": {
      "op": "DUP5"
    },
    "4819": {
      "op": "ADD"
    },
    "4820": {
      "op": "PUSH2",
      "value": "0x10E3"
    },
    "4823": {
      "jump": "i",
      "op": "JUMP"
    },
    "4824": {
      "op": "JUMPDEST"
    },
    "4825": {
      "op": "SWAP1"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "SWAP3"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "SWAP3"
    },
    "4830": {
      "op": "SWAP1"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "jump": "o",
      "op": "JUMP"
    },
    "4833": {
      "op": "JUMPDEST"
    },
    "4834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4836": {
      "op": "DUP2"
    },
    "4837": {
      "op": "DUP2"
    },
    "4838": {
      "op": "SHR"
    },
    "4839": {
      "op": "SWAP1"
    },
    "4840": {
      "op": "DUP3"
    },
    "4841": {
      "op": "AND"
    },
    "4842": {
      "op": "DUP1"
    },
    "4843": {
      "op": "PUSH2",
      "value": "0x12F5"
    },
    "4846": {
      "op": "JUMPI"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4849": {
      "op": "DUP3"
    },
    "4850": {
      "op": "AND"
    },
    "4851": {
      "op": "SWAP2"
    },
    "4852": {
      "op": "POP"
    },
    "4853": {
      "op": "JUMPDEST"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4856": {
      "op": "DUP3"
    },
    "4857": {
      "op": "LT"
    },
    "4858": {
      "op": "DUP2"
    },
    "4859": {
      "op": "EQ"
    },
    "4860": {
      "op": "ISZERO"
    },
    "4861": {
      "op": "PUSH2",
      "value": "0x1316"
    },
    "4864": {
      "op": "JUMPI"
    },
    "4865": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4872": {
      "op": "SHL"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4885": {
      "op": "REVERT"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "POP"
    },
    "4888": {
      "op": "SWAP2"
    },
    "4889": {
      "op": "SWAP1"
    },
    "4890": {
      "op": "POP"
    },
    "4891": {
      "jump": "o",
      "op": "JUMP"
    },
    "4892": {
      "op": "JUMPDEST"
    },
    "4893": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4898": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4900": {
      "op": "SHL"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4903": {
      "op": "MSTORE"
    },
    "4904": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4908": {
      "op": "MSTORE"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4913": {
      "op": "REVERT"
    },
    "4914": {
      "op": "JUMPDEST"
    },
    "4915": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4919": {
      "op": "NOT"
    },
    "4920": {
      "op": "DUP3"
    },
    "4921": {
      "op": "EQ"
    },
    "4922": {
      "op": "ISZERO"
    },
    "4923": {
      "op": "PUSH2",
      "value": "0x1346"
    },
    "4926": {
      "op": "JUMPI"
    },
    "4927": {
      "op": "PUSH2",
      "value": "0x1346"
    },
    "4930": {
      "op": "PUSH2",
      "value": "0x131C"
    },
    "4933": {
      "jump": "i",
      "op": "JUMP"
    },
    "4934": {
      "op": "JUMPDEST"
    },
    "4935": {
      "op": "POP"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4938": {
      "op": "ADD"
    },
    "4939": {
      "op": "SWAP1"
    },
    "4940": {
      "jump": "o",
      "op": "JUMP"
    },
    "4941": {
      "op": "JUMPDEST"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4944": {
      "op": "DUP1"
    },
    "4945": {
      "op": "DUP3"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "PUSH1",
      "value": "0x33"
    },
    "4949": {
      "op": "SWAP1"
    },
    "4950": {
      "op": "DUP3"
    },
    "4951": {
      "op": "ADD"
    },
    "4952": {
      "op": "MSTORE"
    },
    "4953": {
      "op": "PUSH32",
      "value": "0x455243373231413A207472616E7366657220746F206E6F6E2045524337323152"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4988": {
      "op": "DUP3"
    },
    "4989": {
      "op": "ADD"
    },
    "4990": {
      "op": "MSTORE"
    },
    "4991": {
      "op": "PUSH19",
      "value": "0x32B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "5011": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "5013": {
      "op": "SHL"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5016": {
      "op": "DUP3"
    },
    "5017": {
      "op": "ADD"
    },
    "5018": {
      "op": "MSTORE"
    },
    "5019": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5021": {
      "op": "ADD"
    },
    "5022": {
      "op": "SWAP1"
    },
    "5023": {
      "jump": "o",
      "op": "JUMP"
    },
    "5024": {
      "op": "JUMPDEST"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5027": {
      "op": "DUP4"
    },
    "5028": {
      "op": "MLOAD"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x13B2"
    },
    "5032": {
      "op": "DUP2"
    },
    "5033": {
      "op": "DUP5"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5036": {
      "op": "DUP9"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "PUSH2",
      "value": "0x105F"
    },
    "5041": {
      "jump": "i",
      "op": "JUMP"
    },
    "5042": {
      "op": "JUMPDEST"
    },
    "5043": {
      "op": "DUP4"
    },
    "5044": {
      "op": "MLOAD"
    },
    "5045": {
      "op": "SWAP1"
    },
    "5046": {
      "op": "DUP4"
    },
    "5047": {
      "op": "ADD"
    },
    "5048": {
      "op": "SWAP1"
    },
    "5049": {
      "op": "PUSH2",
      "value": "0x13C6"
    },
    "5052": {
      "op": "DUP2"
    },
    "5053": {
      "op": "DUP4"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5056": {
      "op": "DUP9"
    },
    "5057": {
      "op": "ADD"
    },
    "5058": {
      "op": "PUSH2",
      "value": "0x105F"
    },
    "5061": {
      "jump": "i",
      "op": "JUMP"
    },
    "5062": {
      "op": "JUMPDEST"
    },
    "5063": {
      "op": "ADD"
    },
    "5064": {
      "op": "SWAP5"
    },
    "5065": {
      "op": "SWAP4"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "op": "POP"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "jump": "o",
      "op": "JUMP"
    },
    "5071": {
      "op": "JUMPDEST"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5074": {
      "op": "DUP3"
    },
    "5075": {
      "op": "NOT"
    },
    "5076": {
      "op": "DUP3"
    },
    "5077": {
      "op": "GT"
    },
    "5078": {
      "op": "ISZERO"
    },
    "5079": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "5082": {
      "op": "JUMPI"
    },
    "5083": {
      "op": "PUSH2",
      "value": "0x13E2"
    },
    "5086": {
      "op": "PUSH2",
      "value": "0x131C"
    },
    "5089": {
      "jump": "i",
      "op": "JUMP"
    },
    "5090": {
      "op": "JUMPDEST"
    },
    "5091": {
      "op": "POP"
    },
    "5092": {
      "op": "ADD"
    },
    "5093": {
      "op": "SWAP1"
    },
    "5094": {
      "jump": "o",
      "op": "JUMP"
    },
    "5095": {
      "op": "JUMPDEST"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5098": {
      "op": "DUP2"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x13F6"
    },
    "5102": {
      "op": "JUMPI"
    },
    "5103": {
      "op": "PUSH2",
      "value": "0x13F6"
    },
    "5106": {
      "op": "PUSH2",
      "value": "0x131C"
    },
    "5109": {
      "jump": "i",
      "op": "JUMP"
    },
    "5110": {
      "op": "JUMPDEST"
    },
    "5111": {
      "op": "POP"
    },
    "5112": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5114": {
      "op": "NOT"
    },
    "5115": {
      "op": "ADD"
    },
    "5116": {
      "op": "SWAP1"
    },
    "5117": {
      "jump": "o",
      "op": "JUMP"
    },
    "5118": {
      "op": "JUMPDEST"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5125": {
      "op": "SHL"
    },
    "5126": {
      "op": "SUB"
    },
    "5127": {
      "op": "DUP6"
    },
    "5128": {
      "op": "DUP2"
    },
    "5129": {
      "op": "AND"
    },
    "5130": {
      "op": "DUP3"
    },
    "5131": {
      "op": "MSTORE"
    },
    "5132": {
      "op": "DUP5"
    },
    "5133": {
      "op": "AND"
    },
    "5134": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5136": {
      "op": "DUP3"
    },
    "5137": {
      "op": "ADD"
    },
    "5138": {
      "op": "MSTORE"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "DUP4"
    },
    "5144": {
      "op": "SWAP1"
    },
    "5145": {
      "op": "MSTORE"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5148": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5150": {
      "op": "DUP3"
    },
    "5151": {
      "op": "ADD"
    },
    "5152": {
      "op": "DUP2"
    },
    "5153": {
      "op": "SWAP1"
    },
    "5154": {
      "op": "MSTORE"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5157": {
      "op": "SWAP1"
    },
    "5158": {
      "op": "PUSH2",
      "value": "0x1431"
    },
    "5161": {
      "op": "SWAP1"
    },
    "5162": {
      "op": "DUP4"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "op": "DUP5"
    },
    "5165": {
      "op": "PUSH2",
      "value": "0x108B"
    },
    "5168": {
      "jump": "i",
      "op": "JUMP"
    },
    "5169": {
      "op": "JUMPDEST"
    },
    "5170": {
      "op": "SWAP7"
    },
    "5171": {
      "op": "SWAP6"
    },
    "5172": {
      "op": "POP"
    },
    "5173": {
      "op": "POP"
    },
    "5174": {
      "op": "POP"
    },
    "5175": {
      "op": "POP"
    },
    "5176": {
      "op": "POP"
    },
    "5177": {
      "op": "POP"
    },
    "5178": {
      "jump": "o",
      "op": "JUMP"
    },
    "5179": {
      "op": "JUMPDEST"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5184": {
      "op": "DUP3"
    },
    "5185": {
      "op": "DUP5"
    },
    "5186": {
      "op": "SUB"
    },
    "5187": {
      "op": "SLT"
    },
    "5188": {
      "op": "ISZERO"
    },
    "5189": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5192": {
      "op": "JUMPI"
    },
    "5193": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5195": {
      "op": "DUP1"
    },
    "5196": {
      "op": "REVERT"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "DUP2"
    },
    "5199": {
      "op": "MLOAD"
    },
    "5200": {
      "op": "PUSH2",
      "value": "0x9A3"
    },
    "5203": {
      "op": "DUP2"
    },
    "5204": {
      "op": "PUSH2",
      "value": "0x1029"
    },
    "5207": {
      "jump": "i",
      "op": "JUMP"
    },
    "5208": {
      "op": "JUMPDEST"
    },
    "5209": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5214": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5216": {
      "op": "SHL"
    },
    "5217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5219": {
      "op": "MSTORE"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5224": {
      "op": "MSTORE"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5229": {
      "op": "REVERT"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5233": {
      "op": "DUP3"
    },
    "5234": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5237": {
      "op": "JUMPI"
    },
    "5238": {
      "op": "PUSH2",
      "value": "0x147D"
    },
    "5241": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5244": {
      "jump": "i",
      "op": "JUMP"
    },
    "5245": {
      "op": "JUMPDEST"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "op": "DIV"
    },
    "5248": {
      "op": "SWAP1"
    },
    "5249": {
      "jump": "o",
      "op": "JUMP"
    },
    "5250": {
      "op": "JUMPDEST"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "DUP3"
    },
    "5255": {
      "op": "LT"
    },
    "5256": {
      "op": "ISZERO"
    },
    "5257": {
      "op": "PUSH2",
      "value": "0x1494"
    },
    "5260": {
      "op": "JUMPI"
    },
    "5261": {
      "op": "PUSH2",
      "value": "0x1494"
    },
    "5264": {
      "op": "PUSH2",
      "value": "0x131C"
    },
    "5267": {
      "jump": "i",
      "op": "JUMP"
    },
    "5268": {
      "op": "JUMPDEST"
    },
    "5269": {
      "op": "POP"
    },
    "5270": {
      "op": "SUB"
    },
    "5271": {
      "op": "SWAP1"
    },
    "5272": {
      "jump": "o",
      "op": "JUMP"
    },
    "5273": {
      "op": "JUMPDEST"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5276": {
      "op": "DUP3"
    },
    "5277": {
      "op": "PUSH2",
      "value": "0x14A8"
    },
    "5280": {
      "op": "JUMPI"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0x14A8"
    },
    "5284": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5287": {
      "jump": "i",
      "op": "JUMP"
    },
    "5288": {
      "op": "JUMPDEST"
    },
    "5289": {
      "op": "POP"
    },
    "5290": {
      "op": "MOD"
    },
    "5291": {
      "op": "SWAP1"
    },
    "5292": {
      "jump": "o",
      "op": "JUMP"
    },
    "5293": {
      "op": "JUMPDEST"
    },
    "5294": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5301": {
      "op": "SHL"
    },
    "5302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5304": {
      "op": "MSTORE"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5309": {
      "op": "MSTORE"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5314": {
      "op": "REVERT"
    }
  },
  "sha1": "5012824f0dcf2d54954601cebd5e178c24890e95",
  "source": "// SPDX-License-Identifier: MIT\n// Creator: Chiru Labs\n\npragma solidity ^0.8.0;\n\nimport '../node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol';\nimport '../node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol';\nimport '../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol';\nimport '../node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol';\nimport '../node_modules/@openzeppelin/contracts/utils/Address.sol';\nimport '../node_modules/@openzeppelin/contracts/utils/Context.sol';\nimport '../node_modules/@openzeppelin/contracts/utils/Strings.sol';\nimport '../node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol';\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata and Enumerable extension. Built to optimize for lower gas during batch mints.\n *\n * Assumes serials are sequentially minted starting at 0 (e.g. 0, 1, 2, 3..).\n *\n * Does not support burning tokens to address(0).\n *\n * Assumes that an owner cannot have more than the 2**128 (max value of uint128) of supply\n */\ncontract ERC721A is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using Address for address;\n    using Strings for uint256;\n\n    struct TokenOwnership {\n        address addr;\n        uint64 startTimestamp;\n    }\n\n    struct AddressData {\n        uint128 balance;\n        uint128 numberMinted;\n    }\n\n    uint256 internal currentIndex = 0;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned. See ownershipOf implementation for details.\n    mapping(uint256 => TokenOwnership) internal _ownerships;\n\n    // Mapping owner address to address data\n    mapping(address => AddressData) private _addressData;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view override returns (uint256) {\n        return currentIndex;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view override returns (uint256) {\n        require(index < totalSupply(), 'ERC721A: global index out of bounds');\n        return index;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     * This read function is O(totalSupply). If calling from a separate contract, be sure to test gas first.\n     * It may also degrade with extremely large collection sizes (e.g >> 10000), test for your use case.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {\n        require(index < balanceOf(owner), 'ERC721A: owner index out of bounds');\n        uint256 numMintedSoFar = totalSupply();\n        uint256 tokenIdsIdx = 0;\n        address currOwnershipAddr = address(0);\n        for (uint256 i = 0; i < numMintedSoFar; i++) {\n            TokenOwnership memory ownership = _ownerships[i];\n            if (ownership.addr != address(0)) {\n                currOwnershipAddr = ownership.addr;\n            }\n            if (currOwnershipAddr == owner) {\n                if (tokenIdsIdx == index) {\n                    return i;\n                }\n                tokenIdsIdx++;\n            }\n        }\n        revert('ERC721A: unable to get token of owner by index');\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            interfaceId == type(IERC721Enumerable).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        require(owner != address(0), 'ERC721A: balance query for the zero address');\n        return uint256(_addressData[owner].balance);\n    }\n\n    function _numberMinted(address owner) internal view returns (uint256) {\n        require(owner != address(0), 'ERC721A: number minted query for the zero address');\n        return uint256(_addressData[owner].numberMinted);\n    }\n\n    function ownershipOf(uint256 tokenId) internal view returns (TokenOwnership memory) {\n        require(_exists(tokenId), 'ERC721A: owner query for nonexistent token');\n\n        for (uint256 curr = tokenId; ; curr--) {\n            TokenOwnership memory ownership = _ownerships[curr];\n            if (ownership.addr != address(0)) {\n                return ownership;\n            }\n        }\n\n        revert('ERC721A: unable to determine the owner of token');\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return ownershipOf(tokenId).addr;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), 'ERC721Metadata: URI query for nonexistent token');\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public override {\n        address owner = ERC721A.ownerOf(tokenId);\n        require(to != owner, 'ERC721A: approval to current owner');\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            'ERC721A: approve caller is not owner nor approved for all'\n        );\n\n        _approve(to, tokenId, owner);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), 'ERC721A: approved query for nonexistent token');\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public override {\n        require(operator != _msgSender(), 'ERC721A: approve to caller');\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public override {\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public override {\n        _transfer(from, to, tokenId);\n        require(\n            _checkOnERC721Received(from, to, tokenId, _data),\n            'ERC721A: transfer to non ERC721Receiver implementer'\n        );\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return tokenId < currentIndex;\n    }\n\n    function _safeMint(address to, uint256 quantity) internal {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` cannot be larger than the max batch size.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal {\n        uint256 startTokenId = currentIndex;\n        require(to != address(0), 'ERC721A: mint to the zero address');\n        // We know if the first token in the batch doesn't exist, the other ones don't as well, because of serial ordering.\n        require(!_exists(startTokenId), 'ERC721A: token already minted');\n        require(quantity > 0, 'ERC721A: quantity must be greater 0');\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        AddressData memory addressData = _addressData[to];\n        _addressData[to] = AddressData(\n            addressData.balance + uint128(quantity),\n            addressData.numberMinted + uint128(quantity)\n        );\n        _ownerships[startTokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n        uint256 updatedIndex = startTokenId;\n\n        for (uint256 i = 0; i < quantity; i++) {\n            emit Transfer(address(0), to, updatedIndex);\n            require(\n                _checkOnERC721Received(address(0), to, updatedIndex, _data),\n                'ERC721A: transfer to non ERC721Receiver implementer'\n            );\n            updatedIndex++;\n        }\n\n        currentIndex = updatedIndex;\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) private {\n        TokenOwnership memory prevOwnership = ownershipOf(tokenId);\n\n        bool isApprovedOrOwner = (_msgSender() == prevOwnership.addr ||\n            getApproved(tokenId) == _msgSender() ||\n            isApprovedForAll(prevOwnership.addr, _msgSender()));\n\n        require(isApprovedOrOwner, 'ERC721A: transfer caller is not owner nor approved');\n\n        require(prevOwnership.addr == from, 'ERC721A: transfer from incorrect owner');\n        require(to != address(0), 'ERC721A: transfer to the zero address');\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId, prevOwnership.addr);\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        unchecked {\n            _addressData[from].balance -= 1;\n            _addressData[to].balance += 1;\n        }\n\n        _ownerships[tokenId] = TokenOwnership(to, uint64(block.timestamp));\n\n        // If the ownership slot of tokenId+1 is not explicitly set, that means the transfer initiator owns it.\n        // Set the slot of tokenId+1 explicitly in storage to maintain correctness for ownerOf(tokenId+1) calls.\n        uint256 nextTokenId = tokenId + 1;\n        if (_ownerships[nextTokenId].addr == address(0)) {\n            if (_exists(nextTokenId)) {\n                _ownerships[nextTokenId] = TokenOwnership(prevOwnership.addr, prevOwnership.startTimestamp);\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        address owner\n    ) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver(to).onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert('ERC721A: transfer to non ERC721Receiver implementer');\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token ids are about to be transferred. This includes minting.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token ids have been transferred. This includes\n     * minting.\n     *\n     * startTokenId - the first token id to be transferred\n     * quantity - the amount to be transferred\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n}\n",
  "sourceMap": "1157:14366:1:-:0;;;1514:1;1482:33;;2186:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2252:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2275:17:1;;;;:7;;:17;;;;;:::i;:::-;;2186:113;;1157:14366;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1157:14366:1;;;-1:-1:-1;1157:14366:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:17;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1157:14366:1;;;;;;",
  "sourcePath": "contracts/ERC721A.sol",
  "type": "contract"
}